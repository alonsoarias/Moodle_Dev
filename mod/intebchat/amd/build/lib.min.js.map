{"version":3,"file":"lib.min.js","sources":["../src/lib.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Main JavaScript for INTEB Chat module with Conversations Management\n *\n * @module     mod_intebchat/lib\n * @copyright  2025 Alonso Arias <soporte@ingeweb.co>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/str', 'core/notification', 'core/modal_save_cancel', 'core/modal_delete_cancel', 'core/templates'],\n    function ($, Ajax, Str, Notification, ModalSaveCancel, ModalDeleteCancel, Templates) {\n        var questionString = 'Ask a question...';\n        var errorString = 'An error occurred! Please try again later.';\n        var currentConversationId = null;\n        var currentInputMode = 'text'; \n        var lastInputMode = 'text';\n        var tokenInfo = {\n            enabled: false,\n            limit: 0,\n            used: 0,\n            exceeded: false,\n            resetTime: 0\n        };\n        var strings = {};\n        var audioConfig = {\n            enabled: false,\n            mode: 'text'\n        };\n        var assistant = null; // Para el asistente animado\n\n        /**\n         * Token Tracker for real-time updates\n         */\n        var TokenTracker = {\n            used: 0,\n            limit: 0,\n            audioUsed: 0,\n            textUsed: 0,\n            \n            init: function(initialUsed, limit) {\n                this.used = initialUsed;\n                this.limit = limit;\n                this.updateDisplay();\n            },\n            \n            addTokens: function(tokenInfo) {\n                if (!tokenInfo) return;\n                \n                this.used += tokenInfo.total || 0;\n                \n                if (tokenInfo.audio_input || tokenInfo.audio_output) {\n                    this.audioUsed += (tokenInfo.audio_input || 0) + (tokenInfo.audio_output || 0);\n                }\n                \n                if (tokenInfo.prompt || tokenInfo.completion) {\n                    this.textUsed += (tokenInfo.prompt || 0) + (tokenInfo.completion || 0) - \n                                    ((tokenInfo.audio_input || 0) + (tokenInfo.audio_output || 0));\n                }\n                \n                this.updateDisplay();\n                this.checkLimits();\n            },\n            \n            updateDisplay: function() {\n                var percentage = this.limit > 0 ? (this.used / this.limit * 100) : 0;\n                \n                $('.token-count').text(percentage.toFixed(1) + '%');\n                $('.progress-bar').css('width', Math.min(percentage, 100) + '%');\n                \n                if (this.audioUsed > 0 || this.textUsed > 0) {\n                    if (!$('#token-breakdown').length) {\n                        $('.token-display').after(\n                            '<div id=\"token-breakdown\" class=\"token-breakdown\">' +\n                            '<small>' + strings.texttokens + ': <span id=\"text-tokens\">0</span> | ' +\n                            strings.audiotokens + ': <span id=\"audio-tokens\">0</span></small>' +\n                            '</div>'\n                        );\n                    }\n                    $('#text-tokens').text(this.textUsed.toLocaleString());\n                    $('#audio-tokens').text(this.audioUsed.toLocaleString());\n                }\n                \n                $('.progress-bar').removeClass('warning danger');\n                if (percentage >= 90) {\n                    $('.progress-bar').addClass('danger');\n                } else if (percentage > 75) {\n                    $('.progress-bar').addClass('warning');\n                }\n            },\n            \n            checkLimits: function() {\n                var percentage = this.limit > 0 ? (this.used / this.limit * 100) : 0;\n                \n                if (percentage >= 100) {\n                    $('#openai_input').prop('disabled', true);\n                    $('#go').prop('disabled', true);\n                    $('#intebchat-icon-mic').prop('disabled', true);\n                    \n                    if (!$('.token-limit-alert').length) {\n                        $('#intebchat_log').before(\n                            '<div class=\"alert alert-danger token-limit-alert\">' +\n                            '<i class=\"fa fa-exclamation-circle\"></i> ' +\n                            strings.tokenlimitexceeded +\n                            '</div>'\n                        );\n                    }\n                } else if (percentage > 90) {\n                    var remaining = this.limit - this.used;\n                    if (!$('.token-warning-alert').length) {\n                        $('#intebchat_log').before(\n                            '<div class=\"alert alert-warning token-warning-alert\">' +\n                            '<i class=\"fa fa-exclamation-triangle\"></i> ' +\n                            strings.tokenlimitwarning.replace('{$a}', remaining) +\n                            '</div>'\n                        );\n                    }\n                }\n            }\n        };\n\n        /**\n         * Animated Assistant Class (Clippy-style) - FIXED VISIBILITY\n         */\n        var AnimatedAssistant = {\n            init: function() {\n                // Crear el contenedor del asistente DENTRO del chat container para asegurar visibilidad\n                var assistantHtml = '<div id=\"intebchat-assistant\" class=\"intebchat-assistant\">' +\n                    '<div class=\"assistant-body\">' +\n                    '<div class=\"assistant-eyes\">' +\n                    '<div class=\"eye left\"></div>' +\n                    '<div class=\"eye right\"></div>' +\n                    '</div>' +\n                    '<div class=\"assistant-mouth\"></div>' +\n                    '</div>' +\n                    '<div class=\"assistant-bubble\" style=\"display:none;\"></div>' +\n                    '</div>';\n                \n                // AÃ±adir al Ã¡rea principal del chat, no al contenedor general\n                $('.intebchat-main').append(assistantHtml);\n                this.bindEvents();\n                this.idle();\n                console.log('Assistant initialized');\n            },\n\n            bindEvents: function() {\n                var self = this;\n                $(document).on('click', '#intebchat-assistant', function() {\n                    self.wave();\n                });\n            },\n\n            idle: function() {\n                $('#intebchat-assistant').removeClass('thinking talking waving').addClass('idle');\n                this.blink();\n            },\n\n            thinking: function() {\n                $('#intebchat-assistant').removeClass('idle talking waving').addClass('thinking');\n                this.showBubble('ðŸ¤” Thinking...');\n            },\n\n            talking: function() {\n                $('#intebchat-assistant').removeClass('idle thinking waving').addClass('talking');\n                this.hideBubble();\n            },\n\n            wave: function() {\n                var self = this;\n                $('#intebchat-assistant').removeClass('idle thinking talking').addClass('waving');\n                setTimeout(function() {\n                    self.idle();\n                }, 1000);\n            },\n\n            showBubble: function(text) {\n                $('.assistant-bubble').text(text).fadeIn(200);\n            },\n\n            hideBubble: function() {\n                $('.assistant-bubble').fadeOut(200);\n            },\n\n            blink: function() {\n                var self = this;\n                if (self.blinkInterval) {\n                    clearInterval(self.blinkInterval);\n                }\n                self.blinkInterval = setInterval(function() {\n                    $('.assistant-eyes').addClass('blinking');\n                    setTimeout(function() {\n                        $('.assistant-eyes').removeClass('blinking');\n                    }, 150);\n                }, 3000 + Math.random() * 2000);\n            }\n        };\n\n        /**\n         * Initialize the module with conversation management\n         * @param {Object} data Configuration data\n         */\n        var init = function (data) {\n            console.log('INTEBCHAT: Initializing with data:', data);\n            \n            var instanceId = data.instanceId;\n            var api_type = data.api_type;\n            var persistConvo = data.persistConvo;\n\n            tokenInfo.enabled = data.tokenLimitEnabled || false;\n            tokenInfo.limit = data.tokenLimit || 0;\n            tokenInfo.used = data.tokensUsed || 0;\n            tokenInfo.exceeded = data.tokenLimitExceeded || false;\n            tokenInfo.resetTime = data.resetTime || 0;\n\n            audioConfig.enabled = data.audioEnabled || false;\n            audioConfig.mode = data.audioMode || 'text';\n\n            if (audioConfig.mode === 'both') {\n                currentInputMode = sessionStorage.getItem('intebchat_input_mode_' + instanceId) || 'text';\n                lastInputMode = currentInputMode;\n            }\n\n            updateTokenUI();\n            initDarkMode();\n\n            loadStrings().then(function () {\n                initializeConversations(instanceId);\n\n                if ($('#openai_input').length) {\n                    $('#openai_input').attr('placeholder', strings.askaquestion);\n                }\n                \n                // Initialize animated assistant AFTER strings are loaded\n                setTimeout(function() {\n                    AnimatedAssistant.init();\n                }, 500);\n            });\n\n            if (tokenInfo.enabled) {\n                TokenTracker.init(tokenInfo.used, tokenInfo.limit);\n                \n                $(document).ajaxComplete(function(event, xhr, settings) {\n                    if (settings.url && settings.url.includes('/mod/intebchat/api/completion.php')) {\n                        try {\n                            var response = JSON.parse(xhr.responseText);\n                            if (response.tokenInfo) {\n                                TokenTracker.addTokens(response.tokenInfo);\n                            }\n                        } catch(e) {\n                            console.error('Error processing token info:', e);\n                        }\n                    }\n                });\n            }\n\n            // Event listeners for chat input\n            if (audioConfig.mode === 'text' || audioConfig.mode === 'both') {\n                $(document).on('keyup', '.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input', function (e) {\n                    if (e.which === 13 && !e.shiftKey) {\n                        e.preventDefault();\n                        if (e.target.value !== \"\" && !tokenInfo.exceeded) {\n                            lastInputMode = 'text';\n                            sendMessage(e.target.value, instanceId, api_type);\n                            e.target.value = '';\n                        }\n                    }\n                });\n\n                $(document).on('click', '.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #go', function (e) {\n                    var input = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input');\n                    \n                    if (!tokenInfo.exceeded && input.val() !== \"\") {\n                        lastInputMode = 'text';\n                        sendMessage(input.val(), instanceId, api_type);\n                        input.val('');\n                    }\n                });\n            }\n\n            // Audio mode handlers\n            if (audioConfig.enabled) {\n                if (audioConfig.mode === 'audio' || audioConfig.mode === 'both') {\n                    $(document).on('audio-ready', '#intebchat-icon-stop', function () {\n                        var audioData = $('#intebchat-recorded-audio').val();\n                        if (audioData && !tokenInfo.exceeded) {\n                            lastInputMode = 'audio';\n                            setTimeout(function() {\n                                sendAudioMessage(instanceId, api_type);\n                            }, 100);\n                        }\n                    });\n                }\n            }\n\n            // New conversation button\n            $(document).on('click', '#new-conversation-btn', function (e) {\n                createNewConversation(instanceId);\n            });\n\n            // Clear conversation button - CORRECCIÃ“N PRINCIPAL\n            $(document).on('click', '#clear-conversation-btn', function (e) {\n                e.preventDefault();\n                if (currentConversationId) {\n                    showClearConversationModal(currentConversationId, instanceId);\n                }\n            });\n\n            // Edit title button - CORRECCIÃ“N PRINCIPAL\n            $(document).on('click', '#edit-title-btn', function (e) {\n                e.preventDefault();\n                if (currentConversationId) {\n                    showEditTitleModal(currentConversationId);\n                }\n            });\n\n            // Conversation item click\n            $(document).on('click', '.intebchat-conversation-item', function (e) {\n                var conversationId = $(this).data('conversation-id');\n                loadConversation(conversationId, instanceId);\n            });\n\n            // Search conversations\n            $(document).on('input', '#conversation-search', function (e) {\n                filterConversations(e.target.value);\n            });\n\n            // Mobile menu toggle\n            $(document).on('click', '#mobile-menu-toggle', function (e) {\n                $('#conversations-sidebar').toggleClass('mobile-open');\n            });\n\n            // Auto-resize textarea\n            if ($('#openai_input').length) {\n                $(document).on('input', '.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input', function (e) {\n                    this.style.height = 'auto';\n                    this.style.height = Math.min(this.scrollHeight, 120) + 'px';\n                });\n            }\n\n            if (tokenInfo.enabled) {\n                setInterval(checkTokenReset, 60000);\n            }\n\n            if ($('.intebchat-conversation-item').length === 0) {\n                createNewConversation(instanceId);\n            }\n        };\n\n        /**\n         * Dark mode detection and management\n         */\n        var initDarkMode = function() {\n            var $container = $('.mod_intebchat');\n            \n            var savedTheme = localStorage.getItem('intebchat_theme');\n            var prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n            \n            if (savedTheme === 'dark' || (savedTheme === null && prefersDark)) {\n                $container.addClass('dark-mode');\n            }\n            \n            $(document).on('click', '#theme-toggle-btn', function(e) {\n                e.preventDefault();\n                \n                if ($container.hasClass('dark-mode')) {\n                    $container.removeClass('dark-mode');\n                    localStorage.setItem('intebchat_theme', 'light');\n                    $(this).find('i').removeClass('fa-moon').addClass('fa-sun');\n                    $(this).attr('title', strings.darkmode || 'Switch to dark mode');\n                } else {\n                    $container.addClass('dark-mode');\n                    localStorage.setItem('intebchat_theme', 'dark');\n                    $(this).find('i').removeClass('fa-sun').addClass('fa-moon');\n                    $(this).attr('title', strings.lightmode || 'Switch to light mode');\n                }\n            });\n            \n            if (window.matchMedia) {\n                window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(e) {\n                    if (localStorage.getItem('intebchat_theme') === null) {\n                        if (e.matches) {\n                            $container.addClass('dark-mode');\n                            $('#theme-toggle-btn i').removeClass('fa-sun').addClass('fa-moon');\n                        } else {\n                            $container.removeClass('dark-mode');\n                            $('#theme-toggle-btn i').removeClass('fa-moon').addClass('fa-sun');\n                        }\n                    }\n                });\n            }\n        };\n\n        /**\n         * Send audio message\n         */\n        var sendAudioMessage = function (instanceId, api_type) {\n            var audioData = $('#intebchat-recorded-audio').val();\n            if (!audioData) {\n                return;\n            }\n\n            var doSend = function () {\n                var responseMode = (audioConfig.mode === 'both') ? lastInputMode : audioConfig.mode;\n                \n                // Mostrar animaciÃ³n de transcripciÃ³n mejorada\n                addToChatLog('user transcribing', \n                    '<div class=\"transcribing-animation\">' +\n                    '<i class=\"fa fa-microphone pulse\"></i> ' +\n                    '<span class=\"dots\">' +\n                    '<span>.</span><span>.</span><span>.</span>' +\n                    '</span> ' +\n                    (strings.transcribing || 'Transcribing...') +\n                    '</div>', instanceId);\n                    \n                AnimatedAssistant.thinking();\n                createCompletion('', instanceId, api_type, responseMode);\n            };\n\n            if (!currentConversationId) {\n                Ajax.call([{\n                    methodname: 'mod_intebchat_create_conversation',\n                    args: { instanceid: instanceId },\n                    done: function (response) {\n                        currentConversationId = response.conversationid;\n                        $('#conversation-title').text(response.title);\n                        var conversationHtml = createConversationListItem(response);\n                        if ($('.intebchat-no-conversations').length > 0) {\n                            $('.intebchat-conversations-list').html(conversationHtml);\n                        } else {\n                            $('.intebchat-conversations-list').prepend(conversationHtml);\n                        }\n                        $('.intebchat-conversation-item').removeClass('active');\n                        $('.intebchat-conversation-item[data-conversation-id=\"' +\n                            currentConversationId + '\"]').addClass('active');\n                        doSend();\n                    }\n                }]);\n            } else {\n                doSend();\n            }\n        };\n\n        /**\n         * Load all required strings\n         */\n        var loadStrings = function () {\n            var stringkeys = [\n                { key: 'askaquestion', component: 'mod_intebchat' },\n                { key: 'erroroccurred', component: 'mod_intebchat' },\n                { key: 'newconversation', component: 'mod_intebchat' },\n                { key: 'confirmclear', component: 'mod_intebchat' },\n                { key: 'conversationcleared', component: 'mod_intebchat' },\n                { key: 'loadingconversation', component: 'mod_intebchat' },\n                { key: 'edittitle', component: 'mod_intebchat' },\n                { key: 'clearconversation', component: 'mod_intebchat' },\n                { key: 'cancel', component: 'core' },\n                { key: 'save', component: 'core' },\n                { key: 'delete', component: 'core' },\n                { key: 'conversationtitle', component: 'mod_intebchat' },\n                { key: 'confirmclearmessage', component: 'mod_intebchat' },\n                { key: 'transcribing', component: 'mod_intebchat' },\n                { key: 'switchtoaudiomode', component: 'mod_intebchat' },\n                { key: 'switchtotextmode', component: 'mod_intebchat' },\n                { key: 'tokenlimitexceeded', component: 'mod_intebchat' },\n                { key: 'switchtheme', component: 'mod_intebchat' },\n                { key: 'darkmode', component: 'mod_intebchat' },\n                { key: 'lightmode', component: 'mod_intebchat' },\n                { key: 'texttokens', component: 'mod_intebchat' },\n                { key: 'audiotokens', component: 'mod_intebchat' },\n                { key: 'tokenlimitwarning', component: 'mod_intebchat' },\n                { key: 'reasoningmodelwarning', component: 'mod_intebchat' },\n                { key: 'conversationtitleupdated', component: 'mod_intebchat' }\n            ];\n\n            return Str.get_strings(stringkeys).then(function (results) {\n                strings.askaquestion = results[0];\n                strings.erroroccurred = results[1];\n                strings.newconversation = results[2];\n                strings.confirmclear = results[3];\n                strings.conversationcleared = results[4];\n                strings.loadingconversation = results[5];\n                strings.edittitle = results[6];\n                strings.clearconversation = results[7];\n                strings.cancel = results[8];\n                strings.save = results[9];\n                strings.delete = results[10];\n                strings.conversationtitle = results[11];\n                strings.confirmclearmessage = results[12];\n                strings.transcribing = results[13];\n                strings.switchtoaudiomode = results[14];\n                strings.switchtotextmode = results[15];\n                strings.tokenlimitexceeded = results[16];\n                strings.switchtheme = results[17];\n                strings.darkmode = results[18];\n                strings.lightmode = results[19];\n                strings.texttokens = results[20];\n                strings.audiotokens = results[21];\n                strings.tokenlimitwarning = results[22];\n                strings.reasoningmodelwarning = results[23];\n                strings.conversationtitleupdated = results[24];\n\n                questionString = strings.askaquestion;\n                errorString = strings.erroroccurred;\n            });\n        };\n\n        /**\n         * Show modal for editing conversation title - CORREGIDO\n         */\n        var showEditTitleModal = function (conversationId) {\n            var currentTitle = $('#conversation-title').text();\n\n            ModalSaveCancel.create({\n                title: strings.edittitle,\n                body: '<div class=\"form-group\">' +\n                    '<label for=\"conversation-title-input\">' + strings.conversationtitle + '</label>' +\n                    '<input type=\"text\" class=\"form-control\" id=\"conversation-title-input\" value=\"' +\n                    currentTitle.replace(/\"/g, '&quot;') + '\">' +\n                    '</div>',\n                buttons: {\n                    save: strings.save,\n                    cancel: strings.cancel\n                },\n                show: true,\n                removeOnClose: true\n            }).then(function(modal) {\n                var root = modal.getRoot();\n                \n                // Handle save button click\n                root.on('modal-save-cancel:save', function(e) {\n                    e.preventDefault();\n                    var newTitle = $('#conversation-title-input').val().trim();\n                    if (newTitle && newTitle !== currentTitle) {\n                        updateConversationTitle(conversationId, newTitle);\n                    }\n                    modal.destroy();\n                });\n\n                // Focus input when modal is shown\n                root.on('shown.bs.modal', function() {\n                    $('#conversation-title-input').focus().select();\n                });\n\n                // Handle enter key\n                root.on('keypress', '#conversation-title-input', function(e) {\n                    if (e.which === 13) {\n                        e.preventDefault();\n                        root.find('[data-action=\"save\"]').trigger('click');\n                    }\n                });\n\n                return modal;\n            }).catch(Notification.exception);\n        };\n\n        /**\n         * Show modal for clearing conversation - CORREGIDO\n         */\n        var showClearConversationModal = function (conversationId, instanceId) {\n            ModalDeleteCancel.create({\n                title: strings.clearconversation,\n                body: '<p>' + strings.confirmclearmessage + '</p>',\n                buttons: {\n                    delete: strings.delete,\n                    cancel: strings.cancel\n                },\n                show: true,\n                removeOnClose: true\n            }).then(function(modal) {\n                var root = modal.getRoot();\n                \n                // Handle delete button click\n                root.on('modal-delete-cancel:delete', function(e) {\n                    e.preventDefault();\n                    clearConversation(conversationId, instanceId);\n                    modal.destroy();\n                });\n\n                // Handle cancel\n                root.on('modal-delete-cancel:cancel', function(e) {\n                    e.preventDefault();\n                    modal.destroy();\n                });\n\n                return modal;\n            }).catch(Notification.exception);\n        };\n\n        /**\n         * Initialize conversation management\n         */\n        var initializeConversations = function (instanceId) {\n            var firstConversation = $('.intebchat-conversation-item').first();\n            if (firstConversation.length > 0) {\n                firstConversation.click();\n            }\n        };\n\n        /**\n         * Create a new conversation\n         */\n        var createNewConversation = function (instanceId) {\n            Ajax.call([{\n                methodname: 'mod_intebchat_create_conversation',\n                args: { instanceid: instanceId },\n                done: function (response) {\n                    currentConversationId = response.conversationid;\n\n                    $('#intebchat_log').empty();\n                    $('#conversation-title').text(response.title);\n\n                    var conversationHtml = createConversationListItem(response);\n                    if ($('.intebchat-no-conversations').length > 0) {\n                        $('.intebchat-conversations-list').html(conversationHtml);\n                    } else {\n                        $('.intebchat-conversations-list').prepend(conversationHtml);\n                    }\n\n                    $('.intebchat-conversation-item').removeClass('active');\n                    $('.intebchat-conversation-item[data-conversation-id=\"' + currentConversationId + '\"]').addClass('active');\n\n                    if ($('#openai_input').length) {\n                        $('#openai_input').focus();\n                    }\n                    \n                    AnimatedAssistant.wave();\n                },\n                fail: function (error) {\n                    Notification.addNotification({\n                        message: error.message || strings.erroroccurred,\n                        type: 'error'\n                    });\n                }\n            }]);\n        };\n\n        /**\n         * Load a conversation\n         */\n        var loadConversation = function (conversationId, instanceId) {\n            $('#intebchat_log').html('<div class=\"loading-conversation text-center p-4\">' +\n                '<div class=\"spinner-border text-primary\" role=\"status\">' +\n                '<span class=\"sr-only\">Loading...</span></div> ' +\n                strings.loadingconversation +\n                '</div>');\n\n            Ajax.call([{\n                methodname: 'mod_intebchat_load_conversation',\n                args: {\n                    conversationid: conversationId,\n                    instanceid: instanceId\n                },\n                done: function (response) {\n                    console.log('Conversation loaded:', response);\n                    \n                    currentConversationId = conversationId;\n                    $('#conversation-title').text(response.title);\n                    $('#intebchat_log').empty();\n                    \n                    if (response.messages && response.messages.length > 0) {\n                        response.messages.forEach(function (msg) {\n                            var clean = stripAutoplay(msg.message);\n                            addToChatLog(msg.role === 'user' ? 'user' : 'bot', clean, instanceId, false);\n                        });\n                    }\n\n                    if (response.threadId) {\n                        $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]')\n                            .attr('data-thread-id', response.threadId);\n                    }\n\n                    $('.intebchat-conversation-item').removeClass('active');\n                    $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]').addClass('active');\n\n                    $('#conversations-sidebar').removeClass('mobile-open');\n\n                    var messageContainer = $('#intebchat_log');\n                    messageContainer.animate({\n                        scrollTop: messageContainer[0].scrollHeight\n                    }, 300);\n                    \n                    $('#openai_input').focus();\n                    AnimatedAssistant.idle();\n                },\n                fail: function (error) {\n                    console.error('Error loading conversation:', error);\n                    $('#intebchat_log').empty();\n                    \n                    var errorMessage = strings.erroroccurred;\n                    if (error.message) {\n                        errorMessage = error.message;\n                    } else if (error.error) {\n                        errorMessage = error.error;\n                    }\n                    \n                    addToChatLog('bot error', errorMessage, instanceId);\n                    \n                    Notification.addNotification({\n                        message: errorMessage,\n                        type: 'error'\n                    });\n                }\n            }]);\n        };\n\n        /**\n         * Clear a conversation - CORREGIDO\n         */\n        var clearConversation = function (conversationId, instanceId) {\n            Ajax.call([{\n                methodname: 'mod_intebchat_clear_conversation',\n                args: { conversationid: conversationId },\n                done: function (response) {\n                    console.log('Clear conversation response:', response);\n                    \n                    if (response.deleted) {\n                        $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]')\n                            .fadeOut(300, function () {\n                                $(this).remove();\n\n                                if ($('.intebchat-conversation-item').length === 0) {\n                                    createNewConversation(instanceId);\n                                } else {\n                                    var firstConv = $('.intebchat-conversation-item').first();\n                                    if (firstConv.length > 0) {\n                                        firstConv.click();\n                                    }\n                                }\n                            });\n\n                        Notification.addNotification({\n                            message: strings.conversationcleared,\n                            type: 'success'\n                        });\n                    } else {\n                        $('#intebchat_log').empty();\n\n                        var $conversationItem = $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]');\n                        $conversationItem.find('.intebchat-conversation-preview').text('');\n                        $conversationItem.removeAttr('data-thread-id');\n\n                        Notification.addNotification({\n                            message: strings.conversationcleared,\n                            type: 'success'\n                        });\n                    }\n                },\n                fail: function (error) {\n                    console.error('Error clearing conversation:', error);\n                    Notification.addNotification({\n                        message: error.message || strings.erroroccurred,\n                        type: 'error'\n                    });\n                }\n            }]);\n        };\n\n        /**\n         * Update conversation title - CORREGIDO\n         */\n        var updateConversationTitle = function (conversationId, newTitle) {\n            if (!newTitle || newTitle.trim() === '') {\n                return;\n            }\n            \n            Ajax.call([{\n                methodname: 'mod_intebchat_update_conversation_title',\n                args: {\n                    conversationid: conversationId,\n                    title: newTitle\n                },\n                done: function (response) {\n                    console.log('Title update response:', response);\n                    \n                    if (response && response.success) {\n                        $('#conversation-title').text(newTitle);\n                        \n                        var $item = $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]');\n                        $item.find('.title-text').text(newTitle);\n                        $item.attr('data-title', newTitle);\n\n                        Notification.addNotification({\n                            message: strings.conversationtitleupdated || 'Title updated successfully',\n                            type: 'success'\n                        });\n                    } else {\n                        Notification.addNotification({\n                            message: strings.erroroccurred,\n                            type: 'error'\n                        });\n                    }\n                },\n                fail: function (error) {\n                    console.error('Error updating title:', error);\n                    Notification.addNotification({\n                        message: error.message || strings.erroroccurred,\n                        type: 'error'\n                    });\n                }\n            }]);\n        };\n\n        /**\n         * Refresh a conversation in the sidebar\n         */\n        var refreshConversationInSidebar = function (conversationId) {\n            var $item = $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]');\n            if ($item.length) {\n                var now = new Date();\n                $item.find('.intebchat-conversation-date').text(\n                    now.toLocaleDateString([], { day: '2-digit', month: '2-digit' })\n                );\n\n                if (!$item.is(':first-child')) {\n                    $item.fadeOut(200, function () {\n                        $(this).prependTo('.intebchat-conversations-list').fadeIn(200);\n                    });\n                }\n            }\n        };\n\n        /**\n         * Filter conversations\n         */\n        var filterConversations = function (searchTerm) {\n            searchTerm = searchTerm.toLowerCase();\n\n            $('.intebchat-conversation-item').each(function () {\n                var title = $(this).find('.title-text').text().toLowerCase();\n                var preview = $(this).find('.intebchat-conversation-preview').text().toLowerCase();\n\n                if (title.includes(searchTerm) || preview.includes(searchTerm)) {\n                    $(this).show();\n                } else {\n                    $(this).hide();\n                }\n            });\n        };\n\n        /**\n         * Create conversation list item HTML\n         */\n        var createConversationListItem = function (conversation) {\n            var date = new Date(conversation.lastmessage * 1000);\n            var dateStr = date.toLocaleDateString([], { day: '2-digit', month: '2-digit' });\n\n            return '<div class=\"intebchat-conversation-item\" ' +\n                'data-conversation-id=\"' + conversation.conversationid + '\" ' +\n                'data-title=\"' + conversation.title + '\">' +\n                '<div class=\"intebchat-conversation-title\">' +\n                '<span class=\"title-text\">' + conversation.title + '</span>' +\n                '<span class=\"intebchat-conversation-date\">' + dateStr + '</span>' +\n                '</div>' +\n                '<div class=\"intebchat-conversation-preview\">' + conversation.preview + '</div>' +\n                '</div>';\n        };\n\n        /**\n         * Send message (enhanced with conversation management)\n         */\n        var sendMessage = function (message, instanceId, api_type) {\n            if (!currentConversationId) {\n                Ajax.call([{\n                    methodname: 'mod_intebchat_create_conversation',\n                    args: { instanceid: instanceId },\n                    done: function (response) {\n                        currentConversationId = response.conversationid;\n                        $('#conversation-title').text(response.title);\n\n                        var conversationHtml = createConversationListItem(response);\n                        if ($('.intebchat-no-conversations').length > 0) {\n                            $('.intebchat-conversations-list').html(conversationHtml);\n                        } else {\n                            $('.intebchat-conversations-list').prepend(conversationHtml);\n                        }\n\n                        $('.intebchat-conversation-item').removeClass('active');\n                        $('.intebchat-conversation-item[data-conversation-id=\"' + currentConversationId + '\"]').addClass('active');\n\n                        addToChatLog('user', message, instanceId);\n                        AnimatedAssistant.thinking();\n                        var responseMode = (audioConfig.mode === 'both') ? lastInputMode : 'text';\n                        createCompletion(message, instanceId, api_type, responseMode);\n                    },\n                    fail: function (error) {\n                        Notification.addNotification({\n                            message: error.message || errorString,\n                            type: 'error'\n                        });\n                    }\n                }]);\n                return;\n            }\n\n            addToChatLog('user', message, instanceId);\n            AnimatedAssistant.thinking();\n            var responseMode = (audioConfig.mode === 'both') ? lastInputMode : 'text';\n            createCompletion(message, instanceId, api_type, responseMode);\n        };\n\n        /**\n         * Update UI based on token limit status\n         */\n        var updateTokenUI = function () {\n            if (!tokenInfo.enabled) {\n                return;\n            }\n\n            var $container = $('.mod_intebchat');\n            var $input = $container.find('#openai_input');\n            var $submitBtn = $container.find('#go');\n            var $progressBar = $container.find('.progress-bar');\n\n            if (tokenInfo.exceeded) {\n                $input.prop('disabled', true);\n                $submitBtn.prop('disabled', true);\n            } else {\n                $input.prop('disabled', false);\n                $submitBtn.prop('disabled', false);\n            }\n\n            if ($progressBar.length) {\n                var percentage = (tokenInfo.used / tokenInfo.limit * 100);\n                $progressBar.css('width', percentage + '%');\n\n                $progressBar.removeClass('warning danger');\n                if (percentage > 90) {\n                    $progressBar.addClass('danger');\n                } else if (percentage > 75) {\n                    $progressBar.addClass('warning');\n                }\n            }\n        };\n\n        /**\n         * Check if token limit has reset\n         */\n        var checkTokenReset = function () {\n            var now = Date.now() / 1000;\n            if (tokenInfo.exceeded && now > tokenInfo.resetTime) {\n                window.location.reload();\n            }\n        };\n\n        /**\n         * Remove autoplay attribute from audio tags to avoid unwanted playback\n         * @param {string} html\n         * @return {string}\n         */\n        function stripAutoplay(html) {\n            var container = $('<div></div>').html(html);\n            container.find('audio').each(function() {\n                $(this).removeAttr('autoplay');\n                this.autoplay = false;\n            });\n            return container.html();\n        }\n        /**\n         * Add a message to the chat UI with improved animations\n         */\n        var addToChatLog = function (type, message, instanceId, animate = true) {\n            var messageContainer = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #intebchat_log');\n\n            if (type !== 'user transcribing') {\n                messageContainer.find('.openai_message.transcribing').remove();\n            }\n\n            var messageElem = $('<div></div>').addClass('openai_message').addClass(type.replace(' ', '-'));\n            \n            // Add typing animation for bot messages\n            if (type === 'bot' && animate) {\n                messageElem.addClass('typing');\n                var messageText = $('<span></span>').addClass('message-content');\n                var cursor = $('<span class=\"typing-cursor\">|</span>');\n                messageText.append(cursor);\n                messageElem.append(messageText);\n                \n                // Simulate typing effect\n                var fullMessage = message;\n                var currentIndex = 0;\n                var typingSpeed = 30;\n                \n                messageContainer.append(messageElem);\n                \n                var typeWriter = function() {\n                    if (currentIndex < fullMessage.length) {\n                        var char = fullMessage.charAt(currentIndex);\n                        if (char === '<') {\n                            // Handle HTML tags\n                            var tagEnd = fullMessage.indexOf('>', currentIndex);\n                            if (tagEnd !== -1) {\n                                var tag = fullMessage.substring(currentIndex, tagEnd + 1);\n                                cursor.before(tag);\n                                currentIndex = tagEnd + 1;\n                            } else {\n                                cursor.before(char);\n                                currentIndex++;\n                            }\n                        } else {\n                            cursor.before(char);\n                            currentIndex++;\n                        }\n                        setTimeout(typeWriter, typingSpeed);\n                    } else {\n                        cursor.remove();\n                        messageElem.removeClass('typing');\n                        AnimatedAssistant.idle();\n                    }\n                };\n                \n                typeWriter();\n            } else {\n                if (type !== 'bot' || !animate) {\n                    message = stripAutoplay(message);\n                }\n                var messageText = $('<span></span>').html(message);\n                messageElem.append(messageText);\n                \n                if (animate) {\n                    messageElem.hide();\n                    messageContainer.append(messageElem);\n                    messageElem.fadeIn(300);\n                } else {\n                    messageContainer.append(messageElem);\n                }\n            }\n\n            // Add timestamp\n            var timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n            var timestampElem = $('<span></span>').addClass('message-timestamp').text(timestamp);\n            messageElem.append(timestampElem);\n\n            // Smooth scroll to bottom\n            messageContainer.animate({\n                scrollTop: messageContainer[0].scrollHeight\n            }, 300);\n        };\n\n        /**\n         * Makes an API request to get a completion from GPT\n         */\n        var createCompletion = function (message, instanceId, api_type, responseMode) {\n            var threadId = null;\n            \n            if (currentConversationId) {\n                var $conversationItem = $('.intebchat-conversation-item[data-conversation-id=\"' + currentConversationId + '\"]');\n                if ($conversationItem.length && $conversationItem.data('thread-id')) {\n                    threadId = $conversationItem.data('thread-id');\n                }\n            }\n\n            var history = buildTranscript(instanceId);\n\n            $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #control_bar').addClass('disabled');\n            $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').removeClass('error');\n            $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').attr('placeholder', questionString);\n            $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').blur();\n\n            if (!$('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] .openai_message.transcribing').length) {\n                addToChatLog('bot loading', \n                    '<div class=\"loading-dots\">' +\n                    '<span></span><span></span><span></span>' +\n                    '</div>', instanceId);\n            }\n\n            var audio = $('#intebchat-recorded-audio').val();\n            \n            var requestData = {\n                message: message,\n                history: history,\n                instanceId: instanceId,\n                conversationId: currentConversationId || null,\n                threadId: threadId,\n                audio: audio || null,\n                responseMode: responseMode || 'text'\n            };\n            \n            console.log('Sending completion request:', requestData);\n            \n            $.ajax({\n                url: M.cfg.wwwroot + '/mod/intebchat/api/completion.php',\n                type: 'POST',\n                dataType: 'json',\n                contentType: 'application/json',\n                data: JSON.stringify(requestData),\n                success: function (data) {\n                    console.log('Completion response:', data);\n                    \n                    $('#intebchat-recorded-audio').val('');\n                    var messageContainer = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #intebchat_log');\n\n                    messageContainer.find('.openai_message.bot-loading, .openai_message.user-transcribing').remove();\n\n                    $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #control_bar').removeClass('disabled');\n\n                    if (data.message) {\n                        if (audio && data.transcription) {\n                            messageContainer.find('.openai_message.user-transcribing').remove();\n                            var userContent = data.transcription;\n                            if (data.useraudio) {\n                                // IMPORTANTE: Removido autoplay del audio del usuario\n                                userContent = '<audio controls src=\"' + data.useraudio + '\"></audio>' +\n                                    '<div class=\"transcription\">' + data.transcription + '</div>';\n                            }\n                            addToChatLog('user', userContent, instanceId);\n                        }\n\n                        addToChatLog('bot', data.message, instanceId);\n                        AnimatedAssistant.talking();\n                        setTimeout(function() {\n                            AnimatedAssistant.idle();\n                        }, 2000);\n\n                        if (data.conversationId && !currentConversationId) {\n                            currentConversationId = data.conversationId;\n                        }\n                        \n                        if (data.threadId && currentConversationId) {\n                            $('.intebchat-conversation-item[data-conversation-id=\"' + currentConversationId + '\"]')\n                                .attr('data-thread-id', data.threadId);\n                        }\n\n                        if (currentConversationId) {\n                            updateConversationPreview(currentConversationId, data.transcription || message);\n                        }\n\n                        if (data.tokenInfo && tokenInfo.enabled) {\n                            TokenTracker.addTokens(data.tokenInfo);\n                        }\n                    } else if (data.error) {\n                        console.error('Server error:', data.error);\n                        if (data.error.type === 'token_limit_exceeded') {\n                            tokenInfo.exceeded = true;\n                            updateTokenUI();\n                            Notification.addNotification({\n                                message: data.error.message,\n                                type: 'error'\n                            });\n                        } else {\n                            addToChatLog('bot error', data.error.message, instanceId);\n                        }\n                        AnimatedAssistant.idle();\n                    }\n                    if ($('#openai_input').length) {\n                        $('#openai_input').focus();\n                    }\n                },\n                error: function (xhr, status, error) {\n                    console.error('AJAX error:', status, error, xhr.responseText);\n                    var messageContainer = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #intebchat_log');\n                    messageContainer.find('.openai_message.bot-loading, .openai_message.user-transcribing').remove();\n                    $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #control_bar').removeClass('disabled');\n\n                    var errorMsg = errorString;\n                    try {\n                        var response = JSON.parse(xhr.responseText);\n                        if (response.error) {\n                            errorMsg = response.error.message || response.error;\n                        }\n                    } catch (e) {\n                        errorMsg = errorString + ' (' + error + ')';\n                    }\n\n                    addToChatLog('bot error', errorMsg, instanceId);\n                    AnimatedAssistant.idle();\n                    $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').addClass('error');\n                    $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').attr('placeholder', errorString);\n                }\n            });\n        };\n\n        /**\n         * Update conversation preview in sidebar\n         */\n        var updateConversationPreview = function (conversationId, lastMessage) {\n            if (!lastMessage) return;\n\n            var $item = $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]');\n            if ($item.length) {\n                $item.find('.intebchat-conversation-preview').text(lastMessage);\n                var now = new Date();\n                $item.find('.intebchat-conversation-date').text(\n                    now.toLocaleDateString([], { day: '2-digit', month: '2-digit' })\n                );\n\n                if (!$item.is(':first-child')) {\n                    $item.fadeOut(200, function () {\n                        $(this).prependTo('.intebchat-conversations-list').fadeIn(200);\n                    });\n                }\n            }\n        };\n\n        /**\n         * Build transcript from chat history\n         */\n        var buildTranscript = function (instanceId) {\n            var transcript = [];\n            $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] .openai_message').each(function (index, element) {\n                var messages = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] .openai_message');\n                if (index === messages.length - 1) {\n                    return;\n                }\n\n                var user = userName;\n                if ($(element).hasClass('bot')) {\n                    user = assistantName;\n                }\n\n                var messageText = $(element).clone();\n                messageText.find('.message-timestamp').remove();\n                messageText.find('audio').remove();\n                messageText.find('.transcription').remove();\n\n                transcript.push({ \"user\": user, \"message\": messageText.text().trim() });\n            });\n\n            return transcript;\n        };\n\n        return {\n            init: init\n        };\n    });"],"names":["define","$","Ajax","Str","Notification","ModalSaveCancel","ModalDeleteCancel","Templates","questionString","errorString","currentConversationId","currentInputMode","lastInputMode","tokenInfo","enabled","limit","used","exceeded","resetTime","strings","audioConfig","mode","TokenTracker","audioUsed","textUsed","init","initialUsed","updateDisplay","addTokens","total","audio_input","audio_output","prompt","completion","checkLimits","percentage","this","text","toFixed","css","Math","min","length","after","texttokens","audiotokens","toLocaleString","removeClass","addClass","prop","before","tokenlimitexceeded","remaining","tokenlimitwarning","replace","AnimatedAssistant","append","bindEvents","idle","console","log","self","document","on","wave","blink","thinking","showBubble","talking","hideBubble","setTimeout","fadeIn","fadeOut","blinkInterval","clearInterval","setInterval","random","initDarkMode","$container","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","e","preventDefault","hasClass","setItem","find","attr","darkmode","lightmode","addEventListener","sendAudioMessage","instanceId","api_type","val","doSend","responseMode","addToChatLog","transcribing","createCompletion","call","methodname","args","instanceid","done","response","conversationid","title","conversationHtml","createConversationListItem","html","prepend","loadStrings","get_strings","key","component","then","results","askaquestion","erroroccurred","newconversation","confirmclear","conversationcleared","loadingconversation","edittitle","clearconversation","cancel","save","delete","conversationtitle","confirmclearmessage","switchtoaudiomode","switchtotextmode","switchtheme","reasoningmodelwarning","conversationtitleupdated","showEditTitleModal","conversationId","currentTitle","create","body","buttons","show","removeOnClose","modal","root","getRoot","newTitle","trim","updateConversationTitle","destroy","focus","select","which","trigger","catch","exception","showClearConversationModal","clearConversation","initializeConversations","firstConversation","first","click","createNewConversation","empty","fail","error","addNotification","message","type","loadConversation","messages","forEach","msg","clean","stripAutoplay","role","threadId","messageContainer","animate","scrollTop","scrollHeight","errorMessage","deleted","remove","firstConv","$conversationItem","removeAttr","success","$item","filterConversations","searchTerm","toLowerCase","each","preview","includes","hide","conversation","dateStr","Date","lastmessage","toLocaleDateString","day","month","sendMessage","updateTokenUI","$input","$submitBtn","$progressBar","checkTokenReset","now","location","reload","container","autoplay","messageElem","messageText","cursor","fullMessage","currentIndex","typingSpeed","typeWriter","char","charAt","tagEnd","indexOf","tag","substring","timestamp","toLocaleTimeString","hour","minute","timestampElem","data","history","buildTranscript","blur","audio","requestData","ajax","url","M","cfg","wwwroot","dataType","contentType","JSON","stringify","transcription","userContent","useraudio","updateConversationPreview","xhr","status","responseText","errorMsg","parse","lastMessage","is","prependTo","transcript","index","element","user","userName","assistantName","clone","push","persistConvo","tokenLimitEnabled","tokenLimit","tokensUsed","tokenLimitExceeded","audioEnabled","audioMode","sessionStorage","ajaxComplete","event","settings","shiftKey","target","value","input","toggleClass","style","height"],"mappings":";;;;;;;AAuBAA,2BAAO,CAAC,SAAU,YAAa,WAAY,oBAAqB,yBAA0B,2BAA4B,mBAClH,SAAUC,EAAGC,KAAMC,IAAKC,aAAcC,gBAAiBC,kBAAmBC,eAClEC,eAAiB,oBACjBC,YAAc,6CACdC,sBAAwB,KACxBC,iBAAmB,OACnBC,cAAgB,OAChBC,UAAY,CACZC,SAAS,EACTC,MAAO,EACPC,KAAM,EACNC,UAAU,EACVC,UAAW,GAEXC,QAAU,GACVC,YAAc,CACdN,SAAS,EACTO,KAAM,QAONC,aAAe,CACfN,KAAM,EACND,MAAO,EACPQ,UAAW,EACXC,SAAU,EAEVC,KAAM,SAASC,YAAaX,YACnBC,KAAOU,iBACPX,MAAQA,WACRY,iBAGTC,UAAW,SAASf,WACXA,iBAEAG,MAAQH,UAAUgB,OAAS,GAE5BhB,UAAUiB,aAAejB,UAAUkB,qBAC9BR,YAAcV,UAAUiB,aAAe,IAAMjB,UAAUkB,cAAgB,KAG5ElB,UAAUmB,QAAUnB,UAAUoB,mBACzBT,WAAaX,UAAUmB,QAAU,IAAMnB,UAAUoB,YAAc,KAClDpB,UAAUiB,aAAe,IAAMjB,UAAUkB,cAAgB,UAG1EJ,qBACAO,gBAGTP,cAAe,eACPQ,WAAaC,KAAKrB,MAAQ,EAAKqB,KAAKpB,KAAOoB,KAAKrB,MAAQ,IAAO,EAEnEd,EAAE,gBAAgBoC,KAAKF,WAAWG,QAAQ,GAAK,KAC/CrC,EAAE,iBAAiBsC,IAAI,QAASC,KAAKC,IAAIN,WAAY,KAAO,MAExDC,KAAKb,UAAY,GAAKa,KAAKZ,SAAW,KACjCvB,EAAE,oBAAoByC,QACvBzC,EAAE,kBAAkB0C,MAChB,4DACYxB,QAAQyB,WAAa,uCACjCzB,QAAQ0B,YAFR,oDAMR5C,EAAE,gBAAgBoC,KAAKD,KAAKZ,SAASsB,kBACrC7C,EAAE,iBAAiBoC,KAAKD,KAAKb,UAAUuB,mBAG3C7C,EAAE,iBAAiB8C,YAAY,kBAC3BZ,YAAc,GACdlC,EAAE,iBAAiB+C,SAAS,UACrBb,WAAa,IACpBlC,EAAE,iBAAiB+C,SAAS,YAIpCd,YAAa,eACLC,WAAaC,KAAKrB,MAAQ,EAAKqB,KAAKpB,KAAOoB,KAAKrB,MAAQ,IAAO,KAE/DoB,YAAc,IACdlC,EAAE,iBAAiBgD,KAAK,YAAY,GACpChD,EAAE,OAAOgD,KAAK,YAAY,GAC1BhD,EAAE,uBAAuBgD,KAAK,YAAY,GAErChD,EAAE,sBAAsByC,QACzBzC,EAAE,kBAAkBiD,OAChB,8FAEA/B,QAAQgC,mBACR,eAGL,GAAIhB,WAAa,GAAI,KACpBiB,UAAYhB,KAAKrB,MAAQqB,KAAKpB,KAC7Bf,EAAE,wBAAwByC,QAC3BzC,EAAE,kBAAkBiD,OAChB,mGAEA/B,QAAQkC,kBAAkBC,QAAQ,OAAQF,WAC1C,aAUhBG,kBAAoB,CACpB9B,KAAM,WAcFxB,EAAE,mBAAmBuD,OAZD,mSAafC,kBACAC,OACLC,QAAQC,IAAI,0BAGhBH,WAAY,eACJI,KAAOzB,KACXnC,EAAE6D,UAAUC,GAAG,QAAS,wBAAwB,WAC5CF,KAAKG,WAIbN,KAAM,WACFzD,EAAE,wBAAwB8C,YAAY,2BAA2BC,SAAS,aACrEiB,SAGTC,SAAU,WACNjE,EAAE,wBAAwB8C,YAAY,uBAAuBC,SAAS,iBACjEmB,WAAW,mBAGpBC,QAAS,WACLnE,EAAE,wBAAwB8C,YAAY,wBAAwBC,SAAS,gBAClEqB,cAGTL,KAAM,eACEH,KAAOzB,KACXnC,EAAE,wBAAwB8C,YAAY,yBAAyBC,SAAS,UACxEsB,YAAW,WACPT,KAAKH,SACN,MAGPS,WAAY,SAAS9B,MACjBpC,EAAE,qBAAqBoC,KAAKA,MAAMkC,OAAO,MAG7CF,WAAY,WACRpE,EAAE,qBAAqBuE,QAAQ,MAGnCP,MAAO,WACQ7B,KACFqC,eACLC,cAFOtC,KAEYqC,eAFZrC,KAINqC,cAAgBE,aAAY,WAC7B1E,EAAE,mBAAmB+C,SAAS,YAC9BsB,YAAW,WACPrE,EAAE,mBAAmB8C,YAAY,cAClC,OACJ,IAAuB,IAAhBP,KAAKoC,YA8JnBC,aAAe,eACXC,WAAa7E,EAAE,kBAEf8E,WAAaC,aAAaC,QAAQ,mBAClCC,YAAcC,OAAOC,YAAcD,OAAOC,WAAW,gCAAgCC,SAEtE,SAAfN,YAAyC,OAAfA,YAAuBG,cACjDJ,WAAW9B,SAAS,aAGxB/C,EAAE6D,UAAUC,GAAG,QAAS,qBAAqB,SAASuB,GAClDA,EAAEC,iBAEET,WAAWU,SAAS,cACpBV,WAAW/B,YAAY,aACvBiC,aAAaS,QAAQ,kBAAmB,SACxCxF,EAAEmC,MAAMsD,KAAK,KAAK3C,YAAY,WAAWC,SAAS,UAClD/C,EAAEmC,MAAMuD,KAAK,QAASxE,QAAQyE,UAAY,yBAE1Cd,WAAW9B,SAAS,aACpBgC,aAAaS,QAAQ,kBAAmB,QACxCxF,EAAEmC,MAAMsD,KAAK,KAAK3C,YAAY,UAAUC,SAAS,WACjD/C,EAAEmC,MAAMuD,KAAK,QAASxE,QAAQ0E,WAAa,4BAI/CV,OAAOC,YACPD,OAAOC,WAAW,gCAAgCU,iBAAiB,UAAU,SAASR,GAClC,OAA5CN,aAAaC,QAAQ,qBACjBK,EAAED,SACFP,WAAW9B,SAAS,aACpB/C,EAAE,uBAAuB8C,YAAY,UAAUC,SAAS,aAExD8B,WAAW/B,YAAY,aACvB9C,EAAE,uBAAuB8C,YAAY,WAAWC,SAAS,gBAUzE+C,iBAAmB,SAAUC,WAAYC,aACzBhG,EAAE,6BAA6BiG,WAK3CC,OAAS,eACLC,aAAqC,SAArBhF,YAAYC,KAAmBT,cAAgBQ,YAAYC,KAG/EgF,aAAa,oBACT,oJAKClF,QAAQmF,cAAgB,mBACzB,SAAUN,YAEdzC,kBAAkBW,WAClBqC,iBAAiB,GAAIP,WAAYC,SAAUG,eAG1C1F,sBAoBDyF,SAnBAjG,KAAKsG,KAAK,CAAC,CACPC,WAAY,oCACZC,KAAM,CAAEC,WAAYX,YACpBY,KAAM,SAAUC,UACZnG,sBAAwBmG,SAASC,eACjC7G,EAAE,uBAAuBoC,KAAKwE,SAASE,WACnCC,iBAAmBC,2BAA2BJ,UAC9C5G,EAAE,+BAA+ByC,OAAS,EAC1CzC,EAAE,iCAAiCiH,KAAKF,kBAExC/G,EAAE,iCAAiCkH,QAAQH,kBAE/C/G,EAAE,gCAAgC8C,YAAY,UAC9C9C,EAAE,sDACES,sBAAwB,MAAMsC,SAAS,UAC3CmD,eAWZiB,YAAc,kBA6BPjH,IAAIkH,YA5BM,CACb,CAAEC,IAAK,eAAgBC,UAAW,iBAClC,CAAED,IAAK,gBAAiBC,UAAW,iBACnC,CAAED,IAAK,kBAAmBC,UAAW,iBACrC,CAAED,IAAK,eAAgBC,UAAW,iBAClC,CAAED,IAAK,sBAAuBC,UAAW,iBACzC,CAAED,IAAK,sBAAuBC,UAAW,iBACzC,CAAED,IAAK,YAAaC,UAAW,iBAC/B,CAAED,IAAK,oBAAqBC,UAAW,iBACvC,CAAED,IAAK,SAAUC,UAAW,QAC5B,CAAED,IAAK,OAAQC,UAAW,QAC1B,CAAED,IAAK,SAAUC,UAAW,QAC5B,CAAED,IAAK,oBAAqBC,UAAW,iBACvC,CAAED,IAAK,sBAAuBC,UAAW,iBACzC,CAAED,IAAK,eAAgBC,UAAW,iBAClC,CAAED,IAAK,oBAAqBC,UAAW,iBACvC,CAAED,IAAK,mBAAoBC,UAAW,iBACtC,CAAED,IAAK,qBAAsBC,UAAW,iBACxC,CAAED,IAAK,cAAeC,UAAW,iBACjC,CAAED,IAAK,WAAYC,UAAW,iBAC9B,CAAED,IAAK,YAAaC,UAAW,iBAC/B,CAAED,IAAK,aAAcC,UAAW,iBAChC,CAAED,IAAK,cAAeC,UAAW,iBACjC,CAAED,IAAK,oBAAqBC,UAAW,iBACvC,CAAED,IAAK,wBAAyBC,UAAW,iBAC3C,CAAED,IAAK,2BAA4BC,UAAW,mBAGfC,MAAK,SAAUC,SAC9CtG,QAAQuG,aAAeD,QAAQ,GAC/BtG,QAAQwG,cAAgBF,QAAQ,GAChCtG,QAAQyG,gBAAkBH,QAAQ,GAClCtG,QAAQ0G,aAAeJ,QAAQ,GAC/BtG,QAAQ2G,oBAAsBL,QAAQ,GACtCtG,QAAQ4G,oBAAsBN,QAAQ,GACtCtG,QAAQ6G,UAAYP,QAAQ,GAC5BtG,QAAQ8G,kBAAoBR,QAAQ,GACpCtG,QAAQ+G,OAAST,QAAQ,GACzBtG,QAAQgH,KAAOV,QAAQ,GACvBtG,QAAQiH,OAASX,QAAQ,IACzBtG,QAAQkH,kBAAoBZ,QAAQ,IACpCtG,QAAQmH,oBAAsBb,QAAQ,IACtCtG,QAAQmF,aAAemB,QAAQ,IAC/BtG,QAAQoH,kBAAoBd,QAAQ,IACpCtG,QAAQqH,iBAAmBf,QAAQ,IACnCtG,QAAQgC,mBAAqBsE,QAAQ,IACrCtG,QAAQsH,YAAchB,QAAQ,IAC9BtG,QAAQyE,SAAW6B,QAAQ,IAC3BtG,QAAQ0E,UAAY4B,QAAQ,IAC5BtG,QAAQyB,WAAa6E,QAAQ,IAC7BtG,QAAQ0B,YAAc4E,QAAQ,IAC9BtG,QAAQkC,kBAAoBoE,QAAQ,IACpCtG,QAAQuH,sBAAwBjB,QAAQ,IACxCtG,QAAQwH,yBAA2BlB,QAAQ,IAE3CjH,eAAiBW,QAAQuG,aACzBjH,YAAcU,QAAQwG,kBAO1BiB,mBAAqB,SAAUC,oBAC3BC,aAAe7I,EAAE,uBAAuBoC,OAE5ChC,gBAAgB0I,OAAO,CACnBhC,MAAO5F,QAAQ6G,UACfgB,KAAM,iEACyC7H,QAAQkH,kBADjD,wFAGFS,aAAaxF,QAAQ,KAAM,UAHzB,WAKN2F,QAAS,CACLd,KAAMhH,QAAQgH,KACdD,OAAQ/G,QAAQ+G,QAEpBgB,MAAM,EACNC,eAAe,IAChB3B,MAAK,SAAS4B,WACTC,KAAOD,MAAME,iBAGjBD,KAAKtF,GAAG,0BAA0B,SAASuB,GACvCA,EAAEC,qBACEgE,SAAWtJ,EAAE,6BAA6BiG,MAAMsD,OAChDD,UAAYA,WAAaT,cACzBW,wBAAwBZ,eAAgBU,UAE5CH,MAAMM,aAIVL,KAAKtF,GAAG,kBAAkB,WACtB9D,EAAE,6BAA6B0J,QAAQC,YAI3CP,KAAKtF,GAAG,WAAY,6BAA6B,SAASuB,GACtC,KAAZA,EAAEuE,QACFvE,EAAEC,iBACF8D,KAAK3D,KAAK,wBAAwBoE,QAAQ,aAI3CV,SACRW,MAAM3J,aAAa4J,YAMtBC,2BAA6B,SAAUpB,eAAgB7C,YACvD1F,kBAAkByI,OAAO,CACrBhC,MAAO5F,QAAQ8G,kBACfe,KAAM,MAAQ7H,QAAQmH,oBAAsB,OAC5CW,QAAS,CACLb,OAAQjH,QAAQiH,OAChBF,OAAQ/G,QAAQ+G,QAEpBgB,MAAM,EACNC,eAAe,IAChB3B,MAAK,SAAS4B,WACTC,KAAOD,MAAME,iBAGjBD,KAAKtF,GAAG,8BAA8B,SAASuB,GAC3CA,EAAEC,iBACF2E,kBAAkBrB,eAAgB7C,YAClCoD,MAAMM,aAIVL,KAAKtF,GAAG,8BAA8B,SAASuB,GAC3CA,EAAEC,iBACF6D,MAAMM,aAGHN,SACRW,MAAM3J,aAAa4J,YAMtBG,wBAA0B,SAAUnE,gBAChCoE,kBAAoBnK,EAAE,gCAAgCoK,QACtDD,kBAAkB1H,OAAS,GAC3B0H,kBAAkBE,SAOtBC,sBAAwB,SAAUvE,YAClC9F,KAAKsG,KAAK,CAAC,CACPC,WAAY,oCACZC,KAAM,CAAEC,WAAYX,YACpBY,KAAM,SAAUC,UACZnG,sBAAwBmG,SAASC,eAEjC7G,EAAE,kBAAkBuK,QACpBvK,EAAE,uBAAuBoC,KAAKwE,SAASE,WAEnCC,iBAAmBC,2BAA2BJ,UAC9C5G,EAAE,+BAA+ByC,OAAS,EAC1CzC,EAAE,iCAAiCiH,KAAKF,kBAExC/G,EAAE,iCAAiCkH,QAAQH,kBAG/C/G,EAAE,gCAAgC8C,YAAY,UAC9C9C,EAAE,sDAAwDS,sBAAwB,MAAMsC,SAAS,UAE7F/C,EAAE,iBAAiByC,QACnBzC,EAAE,iBAAiB0J,QAGvBpG,kBAAkBS,QAEtByG,KAAM,SAAUC,OACZtK,aAAauK,gBAAgB,CACzBC,QAASF,MAAME,SAAWzJ,QAAQwG,cAClCkD,KAAM,eASlBC,iBAAmB,SAAUjC,eAAgB7C,YAC7C/F,EAAE,kBAAkBiH,KAAK,0JAGrB/F,QAAQ4G,oBACR,UAEJ7H,KAAKsG,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAM,CACFI,eAAgB+B,eAChBlC,WAAYX,YAEhBY,KAAM,SAAUC,UACZlD,QAAQC,IAAI,uBAAwBiD,UAEpCnG,sBAAwBmI,eACxB5I,EAAE,uBAAuBoC,KAAKwE,SAASE,OACvC9G,EAAE,kBAAkBuK,QAEhB3D,SAASkE,UAAYlE,SAASkE,SAASrI,OAAS,GAChDmE,SAASkE,SAASC,SAAQ,SAAUC,SAC5BC,MAAQC,cAAcF,IAAIL,SAC9BvE,aAA0B,SAAb4E,IAAIG,KAAkB,OAAS,MAAOF,MAAOlF,YAAY,MAI1Ea,SAASwE,UACTpL,EAAE,sDAAwD4I,eAAiB,MACtElD,KAAK,iBAAkBkB,SAASwE,UAGzCpL,EAAE,gCAAgC8C,YAAY,UAC9C9C,EAAE,sDAAwD4I,eAAiB,MAAM7F,SAAS,UAE1F/C,EAAE,0BAA0B8C,YAAY,mBAEpCuI,iBAAmBrL,EAAE,kBACzBqL,iBAAiBC,QAAQ,CACrBC,UAAWF,iBAAiB,GAAGG,cAChC,KAEHxL,EAAE,iBAAiB0J,QACnBpG,kBAAkBG,QAEtB+G,KAAM,SAAUC,OACZ/G,QAAQ+G,MAAM,8BAA+BA,OAC7CzK,EAAE,kBAAkBuK,YAEhBkB,aAAevK,QAAQwG,cACvB+C,MAAME,QACNc,aAAehB,MAAME,QACdF,MAAMA,QACbgB,aAAehB,MAAMA,OAGzBrE,aAAa,YAAaqF,aAAc1F,YAExC5F,aAAauK,gBAAgB,CACzBC,QAASc,aACTb,KAAM,eASlBX,kBAAoB,SAAUrB,eAAgB7C,YAC9C9F,KAAKsG,KAAK,CAAC,CACPC,WAAY,mCACZC,KAAM,CAAEI,eAAgB+B,gBACxBjC,KAAM,SAAUC,aACZlD,QAAQC,IAAI,+BAAgCiD,UAExCA,SAAS8E,QACT1L,EAAE,sDAAwD4I,eAAiB,MACtErE,QAAQ,KAAK,cACVvE,EAAEmC,MAAMwJ,SAEyC,IAA7C3L,EAAE,gCAAgCyC,OAClC6H,sBAAsBvE,gBACnB,KACC6F,UAAY5L,EAAE,gCAAgCoK,QAC9CwB,UAAUnJ,OAAS,GACnBmJ,UAAUvB,YAK1BlK,aAAauK,gBAAgB,CACzBC,QAASzJ,QAAQ2G,oBACjB+C,KAAM,gBAEP,CACH5K,EAAE,kBAAkBuK,YAEhBsB,kBAAoB7L,EAAE,sDAAwD4I,eAAiB,MACnGiD,kBAAkBpG,KAAK,mCAAmCrD,KAAK,IAC/DyJ,kBAAkBC,WAAW,kBAE7B3L,aAAauK,gBAAgB,CACzBC,QAASzJ,QAAQ2G,oBACjB+C,KAAM,cAIlBJ,KAAM,SAAUC,OACZ/G,QAAQ+G,MAAM,+BAAgCA,OAC9CtK,aAAauK,gBAAgB,CACzBC,QAASF,MAAME,SAAWzJ,QAAQwG,cAClCkD,KAAM,eASlBpB,wBAA0B,SAAUZ,eAAgBU,UAC/CA,UAAgC,KAApBA,SAASC,QAI1BtJ,KAAKsG,KAAK,CAAC,CACPC,WAAY,0CACZC,KAAM,CACFI,eAAgB+B,eAChB9B,MAAOwC,UAEX3C,KAAM,SAAUC,aACZlD,QAAQC,IAAI,yBAA0BiD,UAElCA,UAAYA,SAASmF,QAAS,CAC9B/L,EAAE,uBAAuBoC,KAAKkH,cAE1B0C,MAAQhM,EAAE,sDAAwD4I,eAAiB,MACvFoD,MAAMvG,KAAK,eAAerD,KAAKkH,UAC/B0C,MAAMtG,KAAK,aAAc4D,UAEzBnJ,aAAauK,gBAAgB,CACzBC,QAASzJ,QAAQwH,0BAA4B,6BAC7CkC,KAAM,iBAGVzK,aAAauK,gBAAgB,CACzBC,QAASzJ,QAAQwG,cACjBkD,KAAM,WAIlBJ,KAAM,SAAUC,OACZ/G,QAAQ+G,MAAM,wBAAyBA,OACvCtK,aAAauK,gBAAgB,CACzBC,QAASF,MAAME,SAAWzJ,QAAQwG,cAClCkD,KAAM,eA4BlBqB,oBAAsB,SAAUC,YAChCA,WAAaA,WAAWC,cAExBnM,EAAE,gCAAgCoM,MAAK,eAC/BtF,MAAQ9G,EAAEmC,MAAMsD,KAAK,eAAerD,OAAO+J,cAC3CE,QAAUrM,EAAEmC,MAAMsD,KAAK,mCAAmCrD,OAAO+J,cAEjErF,MAAMwF,SAASJ,aAAeG,QAAQC,SAASJ,YAC/ClM,EAAEmC,MAAM8G,OAERjJ,EAAEmC,MAAMoK,WAQhBvF,2BAA6B,SAAUwF,kBAEnCC,QADO,IAAIC,KAAgC,IAA3BF,aAAaG,aACdC,mBAAmB,GAAI,CAAEC,IAAK,UAAWC,MAAO,kBAE5D,kEACwBN,aAAa3F,eADrC,iBAEc2F,aAAa1F,MAF3B,wEAI2B0F,aAAa1F,MAJxC,oDAK4C2F,QAL5C,4DAO8CD,aAAaH,QAP3D,gBAcPU,YAAc,SAAUpC,QAAS5E,WAAYC,aACxCvF,uBAiCL2F,aAAa,OAAQuE,QAAS5E,YAC9BzC,kBAAkBW,eACdkC,aAAqC,SAArBhF,YAAYC,KAAmBT,cAAgB,OACnE2F,iBAAiBqE,QAAS5E,WAAYC,SAAUG,mBAnC5ClG,KAAKsG,KAAK,CAAC,CACPC,WAAY,oCACZC,KAAM,CAAEC,WAAYX,YACpBY,KAAM,SAAUC,UACZnG,sBAAwBmG,SAASC,eACjC7G,EAAE,uBAAuBoC,KAAKwE,SAASE,WAEnCC,iBAAmBC,2BAA2BJ,UAC9C5G,EAAE,+BAA+ByC,OAAS,EAC1CzC,EAAE,iCAAiCiH,KAAKF,kBAExC/G,EAAE,iCAAiCkH,QAAQH,kBAG/C/G,EAAE,gCAAgC8C,YAAY,UAC9C9C,EAAE,sDAAwDS,sBAAwB,MAAMsC,SAAS,UAEjGqD,aAAa,OAAQuE,QAAS5E,YAC9BzC,kBAAkBW,eACdkC,aAAqC,SAArBhF,YAAYC,KAAmBT,cAAgB,OACnE2F,iBAAiBqE,QAAS5E,WAAYC,SAAUG,eAEpDqE,KAAM,SAAUC,OACZtK,aAAauK,gBAAgB,CACzBC,QAASF,MAAME,SAAWnK,YAC1BoK,KAAM,eAgBtBoC,cAAgB,cACXpM,UAAUC,aAIXgE,WAAa7E,EAAE,kBACfiN,OAASpI,WAAWY,KAAK,iBACzByH,WAAarI,WAAWY,KAAK,OAC7B0H,aAAetI,WAAWY,KAAK,oBAE/B7E,UAAUI,UACViM,OAAOjK,KAAK,YAAY,GACxBkK,WAAWlK,KAAK,YAAY,KAE5BiK,OAAOjK,KAAK,YAAY,GACxBkK,WAAWlK,KAAK,YAAY,IAG5BmK,aAAa1K,OAAQ,KACjBP,WAActB,UAAUG,KAAOH,UAAUE,MAAQ,IACrDqM,aAAa7K,IAAI,QAASJ,WAAa,KAEvCiL,aAAarK,YAAY,kBACrBZ,WAAa,GACbiL,aAAapK,SAAS,UACfb,WAAa,IACpBiL,aAAapK,SAAS,cAQ9BqK,gBAAkB,eACdC,IAAMX,KAAKW,MAAQ,IACnBzM,UAAUI,UAAYqM,IAAMzM,UAAUK,WACtCiE,OAAOoI,SAASC,mBASfrC,cAAcjE,UACfuG,UAAYxN,EAAE,eAAeiH,KAAKA,aACtCuG,UAAU/H,KAAK,SAAS2G,MAAK,WACzBpM,EAAEmC,MAAM2J,WAAW,iBACd2B,UAAW,KAEbD,UAAUvG,WAKjBb,aAAe,SAAUwE,KAAMD,QAAS5E,gBAAYuF,uEAChDD,iBAAmBrL,EAAE,oCAAsC+F,WAAa,qBAE/D,sBAAT6E,MACAS,iBAAiB5F,KAAK,gCAAgCkG,aAGtD+B,YAAc1N,EAAE,eAAe+C,SAAS,kBAAkBA,SAAS6H,KAAKvH,QAAQ,IAAK,SAG5E,QAATuH,MAAkBU,QAAS,CAC3BoC,YAAY3K,SAAS,cACjB4K,YAAc3N,EAAE,iBAAiB+C,SAAS,mBAC1C6K,OAAS5N,EAAE,wCACf2N,YAAYpK,OAAOqK,QACnBF,YAAYnK,OAAOoK,iBAGfE,YAAclD,QACdmD,aAAe,EACfC,YAAc,GAElB1C,iBAAiB9H,OAAOmK,iBAEpBM,WAAa,cACTF,aAAeD,YAAYpL,OAAQ,KAC/BwL,KAAOJ,YAAYK,OAAOJ,iBACjB,MAATG,KAAc,KAEVE,OAASN,YAAYO,QAAQ,IAAKN,kBACtB,IAAZK,OAAe,KACXE,IAAMR,YAAYS,UAAUR,aAAcK,OAAS,GACvDP,OAAO3K,OAAOoL,KACdP,aAAeK,OAAS,OAExBP,OAAO3K,OAAOgL,MACdH,oBAGJF,OAAO3K,OAAOgL,MACdH,eAEJzJ,WAAW2J,WAAYD,kBAEvBH,OAAOjC,SACP+B,YAAY5K,YAAY,UACxBQ,kBAAkBG,QAI1BuK,iBACG,CACU,QAATpD,MAAmBU,UACnBX,QAAUO,cAAcP,UAExBgD,YAAc3N,EAAE,iBAAiBiH,KAAK0D,SAC1C+C,YAAYnK,OAAOoK,aAEfrC,SACAoC,YAAYnB,OACZlB,iBAAiB9H,OAAOmK,aACxBA,YAAYpJ,OAAO,MAEnB+G,iBAAiB9H,OAAOmK,iBAK5Ba,WAAY,IAAI7B,MAAO8B,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,YACzEC,cAAgB3O,EAAE,iBAAiB+C,SAAS,qBAAqBX,KAAKmM,WAC1Eb,YAAYnK,OAAOoL,eAGnBtD,iBAAiBC,QAAQ,CACrBC,UAAWF,iBAAiB,GAAGG,cAChC,MAMHlF,iBAAmB,SAAUqE,QAAS5E,WAAYC,SAAUG,kBACxDiF,SAAW,QAEX3K,sBAAuB,KACnBoL,kBAAoB7L,EAAE,sDAAwDS,sBAAwB,MACtGoL,kBAAkBpJ,QAAUoJ,kBAAkB+C,KAAK,eACnDxD,SAAWS,kBAAkB+C,KAAK,kBAItCC,QAAUC,gBAAgB/I,YAE9B/F,EAAE,oCAAsC+F,WAAa,mBAAmBhD,SAAS,YACjF/C,EAAE,oCAAsC+F,WAAa,oBAAoBjD,YAAY,SACrF9C,EAAE,oCAAsC+F,WAAa,oBAAoBL,KAAK,cAAenF,gBAC7FP,EAAE,oCAAsC+F,WAAa,oBAAoBgJ,OAEpE/O,EAAE,oCAAsC+F,WAAa,mCAAmCtD,QACzF2D,aAAa,cACT,0EAEUL,gBAGdiJ,MAAQhP,EAAE,6BAA6BiG,MAEvCgJ,YAAc,CACdtE,QAASA,QACTkE,QAASA,QACT9I,WAAYA,WACZ6C,eAAgBnI,uBAAyB,KACzC2K,SAAUA,SACV4D,MAAOA,OAAS,KAChB7I,aAAcA,cAAgB,QAGlCzC,QAAQC,IAAI,8BAA+BsL,aAE3CjP,EAAEkP,KAAK,CACHC,IAAKC,EAAEC,IAAIC,QAAU,oCACrB1E,KAAM,OACN2E,SAAU,OACVC,YAAa,mBACbZ,KAAMa,KAAKC,UAAUT,aACrBlD,QAAS,SAAU6C,MACflL,QAAQC,IAAI,uBAAwBiL,MAEpC5O,EAAE,6BAA6BiG,IAAI,QAC/BoF,iBAAmBrL,EAAE,oCAAsC+F,WAAa,wBAE5EsF,iBAAiB5F,KAAK,kEAAkEkG,SAExF3L,EAAE,oCAAsC+F,WAAa,mBAAmBjD,YAAY,YAEhF8L,KAAKjE,QAAS,IACVqE,OAASJ,KAAKe,cAAe,CAC7BtE,iBAAiB5F,KAAK,qCAAqCkG,aACvDiE,YAAchB,KAAKe,cACnBf,KAAKiB,YAELD,YAAc,wBAA0BhB,KAAKiB,UAA/B,wCACsBjB,KAAKe,cAAgB,UAE7DvJ,aAAa,OAAQwJ,YAAa7J,YAGtCK,aAAa,MAAOwI,KAAKjE,QAAS5E,YAClCzC,kBAAkBa,UAClBE,YAAW,WACPf,kBAAkBG,SACnB,KAECmL,KAAKhG,iBAAmBnI,wBACxBA,sBAAwBmO,KAAKhG,gBAG7BgG,KAAKxD,UAAY3K,uBACjBT,EAAE,sDAAwDS,sBAAwB,MAC7EiF,KAAK,iBAAkBkJ,KAAKxD,UAGjC3K,uBACAqP,0BAA0BrP,sBAAuBmO,KAAKe,eAAiBhF,SAGvEiE,KAAKhO,WAAaA,UAAUC,SAC5BQ,aAAaM,UAAUiN,KAAKhO,gBAEzBgO,KAAKnE,QACZ/G,QAAQ+G,MAAM,gBAAiBmE,KAAKnE,OACZ,yBAApBmE,KAAKnE,MAAMG,MACXhK,UAAUI,UAAW,EACrBgM,gBACA7M,aAAauK,gBAAgB,CACzBC,QAASiE,KAAKnE,MAAME,QACpBC,KAAM,WAGVxE,aAAa,YAAawI,KAAKnE,MAAME,QAAS5E,YAElDzC,kBAAkBG,QAElBzD,EAAE,iBAAiByC,QACnBzC,EAAE,iBAAiB0J,SAG3Be,MAAO,SAAUsF,IAAKC,OAAQvF,OAC1B/G,QAAQ+G,MAAM,cAAeuF,OAAQvF,MAAOsF,IAAIE,cACzBjQ,EAAE,oCAAsC+F,WAAa,qBAC3DN,KAAK,kEAAkEkG,SACxF3L,EAAE,oCAAsC+F,WAAa,mBAAmBjD,YAAY,gBAEhFoN,SAAW1P,oBAEPoG,SAAW6I,KAAKU,MAAMJ,IAAIE,cAC1BrJ,SAAS6D,QACTyF,SAAWtJ,SAAS6D,MAAME,SAAW/D,SAAS6D,OAEpD,MAAOpF,GACL6K,SAAW1P,YAAc,KAAOiK,MAAQ,IAG5CrE,aAAa,YAAa8J,SAAUnK,YACpCzC,kBAAkBG,OAClBzD,EAAE,oCAAsC+F,WAAa,oBAAoBhD,SAAS,SAClF/C,EAAE,oCAAsC+F,WAAa,oBAAoBL,KAAK,cAAelF,iBAQrGsP,0BAA4B,SAAUlH,eAAgBwH,gBACjDA,iBAEDpE,MAAQhM,EAAE,sDAAwD4I,eAAiB,SACnFoD,MAAMvJ,OAAQ,CACduJ,MAAMvG,KAAK,mCAAmCrD,KAAKgO,iBAC/C/C,IAAM,IAAIX,KACdV,MAAMvG,KAAK,gCAAgCrD,KACvCiL,IAAIT,mBAAmB,GAAI,CAAEC,IAAK,UAAWC,MAAO,aAGnDd,MAAMqE,GAAG,iBACVrE,MAAMzH,QAAQ,KAAK,WACfvE,EAAEmC,MAAMmO,UAAU,iCAAiChM,OAAO,WAStEwK,gBAAkB,SAAU/I,gBACxBwK,WAAa,UACjBvQ,EAAE,oCAAsC+F,WAAa,sBAAsBqG,MAAK,SAAUoE,MAAOC,YAEzFD,QADWxQ,EAAE,oCAAsC+F,WAAa,sBAC7CtD,OAAS,OAI5BiO,KAAOC,SACP3Q,EAAEyQ,SAASlL,SAAS,SACpBmL,KAAOE,mBAGPjD,YAAc3N,EAAEyQ,SAASI,QAC7BlD,YAAYlI,KAAK,sBAAsBkG,SACvCgC,YAAYlI,KAAK,SAASkG,SAC1BgC,YAAYlI,KAAK,kBAAkBkG,SAEnC4E,WAAWO,KAAK,MAAUJ,aAAiB/C,YAAYvL,OAAOmH,aAG3DgH,kBAGJ,CACH/O,KA5/BO,SAAUoN,MACjBlL,QAAQC,IAAI,qCAAsCiL,UAE9C7I,WAAa6I,KAAK7I,WAClBC,SAAW4I,KAAK5I,SACD4I,KAAKmC,aAExBnQ,UAAUC,QAAU+N,KAAKoC,oBAAqB,EAC9CpQ,UAAUE,MAAQ8N,KAAKqC,YAAc,EACrCrQ,UAAUG,KAAO6N,KAAKsC,YAAc,EACpCtQ,UAAUI,SAAW4N,KAAKuC,qBAAsB,EAChDvQ,UAAUK,UAAY2N,KAAK3N,WAAa,EAExCE,YAAYN,QAAU+N,KAAKwC,eAAgB,EAC3CjQ,YAAYC,KAAOwN,KAAKyC,WAAa,OAEZ,SAArBlQ,YAAYC,OACZV,iBAAmB4Q,eAAetM,QAAQ,wBAA0Be,aAAe,OACnFpF,cAAgBD,kBAGpBsM,gBACApI,eAEAuC,cAAcI,MAAK,WACf2C,wBAAwBnE,YAEpB/F,EAAE,iBAAiByC,QACnBzC,EAAE,iBAAiB0F,KAAK,cAAexE,QAAQuG,cAInDpD,YAAW,WACPf,kBAAkB9B,SACnB,QAGHZ,UAAUC,UACVQ,aAAaG,KAAKZ,UAAUG,KAAMH,UAAUE,OAE5Cd,EAAE6D,UAAU0N,cAAa,SAASC,MAAOzB,IAAK0B,aACtCA,SAAStC,KAAOsC,SAAStC,IAAI7C,SAAS,6CAE9B1F,SAAW6I,KAAKU,MAAMJ,IAAIE,cAC1BrJ,SAAShG,WACTS,aAAaM,UAAUiF,SAAShG,WAEtC,MAAMyE,GACJ3B,QAAQ+G,MAAM,+BAAgCpF,QAOrC,SAArBlE,YAAYC,MAAwC,SAArBD,YAAYC,OAC3CpB,EAAE6D,UAAUC,GAAG,QAAS,oCAAsCiC,WAAa,oBAAoB,SAAUV,GACrF,KAAZA,EAAEuE,OAAiBvE,EAAEqM,WACrBrM,EAAEC,iBACqB,KAAnBD,EAAEsM,OAAOC,OAAiBhR,UAAUI,WACpCL,cAAgB,OAChBoM,YAAY1H,EAAEsM,OAAOC,MAAO7L,WAAYC,UACxCX,EAAEsM,OAAOC,MAAQ,QAK7B5R,EAAE6D,UAAUC,GAAG,QAAS,oCAAsCiC,WAAa,UAAU,SAAUV,OACvFwM,MAAQ7R,EAAE,oCAAsC+F,WAAa,oBAE5DnF,UAAUI,UAA4B,KAAhB6Q,MAAM5L,QAC7BtF,cAAgB,OAChBoM,YAAY8E,MAAM5L,MAAOF,WAAYC,UACrC6L,MAAM5L,IAAI,SAMlB9E,YAAYN,UACa,UAArBM,YAAYC,MAAyC,SAArBD,YAAYC,MAC5CpB,EAAE6D,UAAUC,GAAG,cAAe,wBAAwB,WAClC9D,EAAE,6BAA6BiG,QAC7BrF,UAAUI,WACxBL,cAAgB,QAChB0D,YAAW,WACPyB,iBAAiBC,WAAYC,YAC9B,UAOnBhG,EAAE6D,UAAUC,GAAG,QAAS,yBAAyB,SAAUuB,GACvDiF,sBAAsBvE,eAI1B/F,EAAE6D,UAAUC,GAAG,QAAS,2BAA2B,SAAUuB,GACzDA,EAAEC,iBACE7E,uBACAuJ,2BAA2BvJ,sBAAuBsF,eAK1D/F,EAAE6D,UAAUC,GAAG,QAAS,mBAAmB,SAAUuB,GACjDA,EAAEC,iBACE7E,uBACAkI,mBAAmBlI,0BAK3BT,EAAE6D,UAAUC,GAAG,QAAS,gCAAgC,SAAUuB,OAC1DuD,eAAiB5I,EAAEmC,MAAMyM,KAAK,mBAClC/D,iBAAiBjC,eAAgB7C,eAIrC/F,EAAE6D,UAAUC,GAAG,QAAS,wBAAwB,SAAUuB,GACtD4G,oBAAoB5G,EAAEsM,OAAOC,UAIjC5R,EAAE6D,UAAUC,GAAG,QAAS,uBAAuB,SAAUuB,GACrDrF,EAAE,0BAA0B8R,YAAY,kBAIxC9R,EAAE,iBAAiByC,QACnBzC,EAAE6D,UAAUC,GAAG,QAAS,oCAAsCiC,WAAa,oBAAoB,SAAUV,QAChG0M,MAAMC,OAAS,YACfD,MAAMC,OAASzP,KAAKC,IAAIL,KAAKqJ,aAAc,KAAO,QAI3D5K,UAAUC,SACV6D,YAAY0I,gBAAiB,KAGgB,IAA7CpN,EAAE,gCAAgCyC,QAClC6H,sBAAsBvE"}