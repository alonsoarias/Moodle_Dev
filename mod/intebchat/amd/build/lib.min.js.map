{"version":3,"file":"lib.min.js","sources":["../src/lib.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Main JavaScript for INTEB Chat module with Conversations Management\r\n *\r\n * @module     mod_intebchat/lib\r\n * @copyright  2025 Alonso Arias <soporte@ingeweb.co>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery', 'core/ajax', 'core/str', 'core/notification', 'core/modal_save_cancel', 'core/modal_delete_cancel', 'core/templates'],\r\n    function ($, Ajax, Str, Notification, ModalSaveCancel, ModalDeleteCancel, Templates) {\r\n        var questionString = 'Ask a question...';\r\n        var errorString = 'An error occurred! Please try again later.';\r\n        var currentConversationId = null;\r\n        var currentInputMode = 'text';\r\n        var lastInputMode = 'text';\r\n        var tokenInfo = {\r\n            enabled: false,\r\n            limit: 0,\r\n            used: 0,\r\n            exceeded: false,\r\n            resetTime: 0\r\n        };\r\n        var strings = {};\r\n        var audioConfig = {\r\n            enabled: false,\r\n            mode: 'text'\r\n        };\r\n        var assistant = null; // Para el asistente animado\r\n\r\n        /**\r\n         * Token Tracker for real-time updates\r\n         */\r\n        var TokenTracker = {\r\n            used: 0,\r\n            limit: 0,\r\n            audioUsed: 0,\r\n            textUsed: 0,\r\n\r\n            init: function (initialUsed, limit) {\r\n                this.used = initialUsed;\r\n                this.limit = limit;\r\n                this.updateDisplay();\r\n            },\r\n\r\n            addTokens: function (tokenInfo) {\r\n                if (!tokenInfo) return;\r\n\r\n                this.used += tokenInfo.total || 0;\r\n\r\n                if (tokenInfo.audio_input || tokenInfo.audio_output) {\r\n                    this.audioUsed += (tokenInfo.audio_input || 0) + (tokenInfo.audio_output || 0);\r\n                }\r\n\r\n                if (tokenInfo.prompt || tokenInfo.completion) {\r\n                    this.textUsed += (tokenInfo.prompt || 0) + (tokenInfo.completion || 0) -\r\n                        ((tokenInfo.audio_input || 0) + (tokenInfo.audio_output || 0));\r\n                }\r\n\r\n                this.updateDisplay();\r\n                this.checkLimits();\r\n            },\r\n\r\n            updateDisplay: function () {\r\n                var percentage = this.limit > 0 ? (this.used / this.limit * 100) : 0;\r\n\r\n                $('.token-count').text(percentage.toFixed(1) + '%');\r\n                $('.progress-bar').css('width', Math.min(percentage, 100) + '%');\r\n\r\n                if (this.audioUsed > 0 || this.textUsed > 0) {\r\n                    if (!$('#token-breakdown').length) {\r\n                        $('.token-display').after(\r\n                            '<div id=\"token-breakdown\" class=\"token-breakdown\">' +\r\n                            '<small>' + strings.texttokens + ': <span id=\"text-tokens\">0</span> | ' +\r\n                            strings.audiotokens + ': <span id=\"audio-tokens\">0</span></small>' +\r\n                            '</div>'\r\n                        );\r\n                    }\r\n                    $('#text-tokens').text(this.textUsed.toLocaleString());\r\n                    $('#audio-tokens').text(this.audioUsed.toLocaleString());\r\n                }\r\n\r\n                $('.progress-bar').removeClass('warning danger');\r\n                if (percentage >= 90) {\r\n                    $('.progress-bar').addClass('danger');\r\n                } else if (percentage > 75) {\r\n                    $('.progress-bar').addClass('warning');\r\n                }\r\n            },\r\n\r\n            checkLimits: function () {\r\n                var percentage = this.limit > 0 ? (this.used / this.limit * 100) : 0;\r\n\r\n                if (percentage >= 100) {\r\n                    $('#openai_input').prop('disabled', true);\r\n                    $('#go').prop('disabled', true);\r\n                    $('#intebchat-icon-mic').prop('disabled', true);\r\n\r\n                    if (!$('.token-limit-alert').length) {\r\n                        $('#intebchat_log').before(\r\n                            '<div class=\"alert alert-danger token-limit-alert\">' +\r\n                            '<i class=\"fa fa-exclamation-circle\"></i> ' +\r\n                            strings.tokenlimitexceeded +\r\n                            '</div>'\r\n                        );\r\n                    }\r\n                } else if (percentage > 90) {\r\n                    var remaining = this.limit - this.used;\r\n                    if (!$('.token-warning-alert').length) {\r\n                        $('#intebchat_log').before(\r\n                            '<div class=\"alert alert-warning token-warning-alert\">' +\r\n                            '<i class=\"fa fa-exclamation-triangle\"></i> ' +\r\n                            strings.tokenlimitwarning.replace('{$a}', remaining) +\r\n                            '</div>'\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Animated Assistant Class (Clippy-style) - FIXED VISIBILITY\r\n         */\r\n        var AnimatedAssistant = {\r\n            init: function () {\r\n                // Crear el contenedor del asistente DENTRO del chat container para asegurar visibilidad\r\n                var assistantHtml = '<div id=\"intebchat-assistant\" class=\"intebchat-assistant\">' +\r\n                    '<div class=\"assistant-body\">' +\r\n                    '<div class=\"assistant-eyes\">' +\r\n                    '<div class=\"eye left\"></div>' +\r\n                    '<div class=\"eye right\"></div>' +\r\n                    '</div>' +\r\n                    '<div class=\"assistant-mouth\"></div>' +\r\n                    '</div>' +\r\n                    '<div class=\"assistant-bubble\" style=\"display:none;\"></div>' +\r\n                    '</div>';\r\n\r\n                // AÃ±adir al Ã¡rea principal del chat, no al contenedor general\r\n                $('.intebchat-main').append(assistantHtml);\r\n                this.bindEvents();\r\n                this.idle();\r\n                console.log('Assistant initialized');\r\n            },\r\n\r\n            bindEvents: function () {\r\n                var self = this;\r\n                $(document).on('click', '#intebchat-assistant', function () {\r\n                    self.wave();\r\n                });\r\n            },\r\n\r\n            idle: function () {\r\n                $('#intebchat-assistant').removeClass('thinking talking waving').addClass('idle');\r\n                this.blink();\r\n            },\r\n\r\n            thinking: function () {\r\n                $('#intebchat-assistant').removeClass('idle talking waving').addClass('thinking');\r\n                this.showBubble('ðŸ¤” Thinking...');\r\n            },\r\n\r\n            talking: function () {\r\n                $('#intebchat-assistant').removeClass('idle thinking waving').addClass('talking');\r\n                this.hideBubble();\r\n            },\r\n\r\n            wave: function () {\r\n                var self = this;\r\n                $('#intebchat-assistant').removeClass('idle thinking talking').addClass('waving');\r\n                setTimeout(function () {\r\n                    self.idle();\r\n                }, 1000);\r\n            },\r\n\r\n            showBubble: function (text) {\r\n                $('.assistant-bubble').text(text).fadeIn(200);\r\n            },\r\n\r\n            hideBubble: function () {\r\n                $('.assistant-bubble').fadeOut(200);\r\n            },\r\n\r\n            blink: function () {\r\n                var self = this;\r\n                if (self.blinkInterval) {\r\n                    clearInterval(self.blinkInterval);\r\n                }\r\n                self.blinkInterval = setInterval(function () {\r\n                    $('.assistant-eyes').addClass('blinking');\r\n                    setTimeout(function () {\r\n                        $('.assistant-eyes').removeClass('blinking');\r\n                    }, 150);\r\n                }, 3000 + Math.random() * 2000);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Initialize the module with conversation management\r\n         * @param {Object} data Configuration data\r\n         */\r\n        var init = function (data) {\r\n            console.log('INTEBCHAT: Initializing with data:', data);\r\n\r\n            var instanceId = data.instanceId;\r\n            var api_type = data.api_type;\r\n            var persistConvo = data.persistConvo;\r\n\r\n            tokenInfo.enabled = data.tokenLimitEnabled || false;\r\n            tokenInfo.limit = data.tokenLimit || 0;\r\n            tokenInfo.used = data.tokensUsed || 0;\r\n            tokenInfo.exceeded = data.tokenLimitExceeded || false;\r\n            tokenInfo.resetTime = data.resetTime || 0;\r\n\r\n            audioConfig.enabled = data.audioEnabled || false;\r\n            audioConfig.mode = data.audioMode || 'text';\r\n\r\n            if (audioConfig.mode === 'both') {\r\n                currentInputMode = sessionStorage.getItem('intebchat_input_mode_' + instanceId) || 'text';\r\n                lastInputMode = currentInputMode;\r\n            }\r\n\r\n            updateTokenUI();\r\n            initDarkMode(instanceId);\r\n\r\n            loadStrings().then(function () {\r\n                initializeConversations(instanceId);\r\n\r\n                if ($('#openai_input').length) {\r\n                    $('#openai_input').attr('placeholder', strings.askaquestion);\r\n                }\r\n\r\n                // Initialize animated assistant AFTER strings are loaded\r\n                setTimeout(function () {\r\n                    AnimatedAssistant.init();\r\n                }, 500);\r\n            });\r\n\r\n            if (tokenInfo.enabled) {\r\n                TokenTracker.init(tokenInfo.used, tokenInfo.limit);\r\n\r\n                $(document).ajaxComplete(function (event, xhr, settings) {\r\n                    if (settings.url && settings.url.includes('/mod/intebchat/api/completion.php')) {\r\n                        try {\r\n                            var response = JSON.parse(xhr.responseText);\r\n                            if (response.tokenInfo) {\r\n                                TokenTracker.addTokens(response.tokenInfo);\r\n                            }\r\n                        } catch (e) {\r\n                            console.error('Error processing token info:', e);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            // Event listeners for chat input\r\n            if (audioConfig.mode === 'text' || audioConfig.mode === 'both') {\r\n                $(document).on('keyup', '.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input', function (e) {\r\n                    if (e.which === 13 && !e.shiftKey) {\r\n                        e.preventDefault();\r\n                        if (e.target.value !== \"\" && !tokenInfo.exceeded) {\r\n                            lastInputMode = 'text';\r\n                            sendMessage(e.target.value, instanceId, api_type);\r\n                            e.target.value = '';\r\n                        }\r\n                    }\r\n                });\r\n\r\n                $(document).on('click', '.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #go', function (e) {\r\n                    var input = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input');\r\n\r\n                    if (!tokenInfo.exceeded && input.val() !== \"\") {\r\n                        lastInputMode = 'text';\r\n                        sendMessage(input.val(), instanceId, api_type);\r\n                        input.val('');\r\n                    }\r\n                });\r\n            }\r\n\r\n            // Audio mode handlers\r\n            if (audioConfig.enabled) {\r\n                if (audioConfig.mode === 'audio' || audioConfig.mode === 'both') {\r\n                    $(document).on('audio-ready', '#intebchat-icon-stop', function () {\r\n                        var audioData = $('#intebchat-recorded-audio').val();\r\n                        if (audioData && !tokenInfo.exceeded) {\r\n                            lastInputMode = 'audio';\r\n                            setTimeout(function () {\r\n                                sendAudioMessage(instanceId, api_type);\r\n                            }, 100);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            // New conversation button\r\n            $(document).on('click', '#new-conversation-btn', function (e) {\r\n                createNewConversation(instanceId);\r\n            });\r\n\r\n            // Clear conversation button - CORRECCIÃ“N PRINCIPAL\r\n            $(document).on('click', '#clear-conversation-btn', function (e) {\r\n                e.preventDefault();\r\n                if (currentConversationId) {\r\n                    showClearConversationModal(currentConversationId, instanceId);\r\n                }\r\n            });\r\n\r\n            // Edit title button - CORRECCIÃ“N PRINCIPAL\r\n            $(document).on('click', '#edit-title-btn', function (e) {\r\n                e.preventDefault();\r\n                if (currentConversationId) {\r\n                    showEditTitleModal(currentConversationId);\r\n                }\r\n            });\r\n\r\n            // Conversation item click\r\n            $(document).on('click', '.intebchat-conversation-item', function (e) {\r\n                var conversationId = $(this).data('conversation-id');\r\n                loadConversation(conversationId, instanceId);\r\n            });\r\n\r\n            // Search conversations\r\n            $(document).on('input', '#conversation-search', function (e) {\r\n                filterConversations(e.target.value);\r\n            });\r\n\r\n            // Mobile menu toggle\r\n            $(document).on('click', '#mobile-menu-toggle', function (e) {\r\n                $('#conversations-sidebar').toggleClass('mobile-open');\r\n            });\r\n\r\n            // Auto-resize textarea\r\n            if ($('#openai_input').length) {\r\n                $(document).on('input', '.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input', function (e) {\r\n                    this.style.height = 'auto';\r\n                    this.style.height = Math.min(this.scrollHeight, 120) + 'px';\r\n                });\r\n            }\r\n\r\n            if (tokenInfo.enabled) {\r\n                setInterval(checkTokenReset, 60000);\r\n            }\r\n\r\n            if ($('.intebchat-conversation-item').length === 0) {\r\n                createNewConversation(instanceId);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Dark mode detection and management - Enhanced with user/instance persistence\r\n         */\r\n        var initDarkMode = function (instanceId) {\r\n            var $container = $('.mod_intebchat');\r\n\r\n            // Get user ID from the page or session\r\n            var userId = M.cfg.sesskey || 'default'; // Use session key as unique user identifier\r\n\r\n            // Create unique key for this user and instance\r\n            var themeKey = 'intebchat_theme_' + instanceId + '_' + userId;\r\n\r\n            // Get saved theme for this specific user and instance\r\n            var savedTheme = localStorage.getItem(themeKey);\r\n            var prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n            // Apply saved theme or use system preference\r\n            if (savedTheme === 'dark' || (savedTheme === null && prefersDark)) {\r\n                $container.addClass('dark-mode');\r\n                $('#theme-toggle-btn i').removeClass('fa-sun').addClass('fa-moon');\r\n            } else {\r\n                $container.removeClass('dark-mode');\r\n                $('#theme-toggle-btn i').removeClass('fa-moon').addClass('fa-sun');\r\n            }\r\n\r\n            // Handle theme toggle\r\n            $(document).on('click', '#theme-toggle-btn', function (e) {\r\n                e.preventDefault();\r\n\r\n                if ($container.hasClass('dark-mode')) {\r\n                    $container.removeClass('dark-mode');\r\n                    localStorage.setItem(themeKey, 'light');\r\n                    $(this).find('i').removeClass('fa-moon').addClass('fa-sun');\r\n                    $(this).attr('title', strings.darkmode || 'Switch to dark mode');\r\n                } else {\r\n                    $container.addClass('dark-mode');\r\n                    localStorage.setItem(themeKey, 'dark');\r\n                    $(this).find('i').removeClass('fa-sun').addClass('fa-moon');\r\n                    $(this).attr('title', strings.lightmode || 'Switch to light mode');\r\n                }\r\n            });\r\n\r\n            // Listen for system theme changes only if user hasn't set a preference\r\n            if (window.matchMedia) {\r\n                window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function (e) {\r\n                    if (localStorage.getItem(themeKey) === null) {\r\n                        if (e.matches) {\r\n                            $container.addClass('dark-mode');\r\n                            $('#theme-toggle-btn i').removeClass('fa-sun').addClass('fa-moon');\r\n                        } else {\r\n                            $container.removeClass('dark-mode');\r\n                            $('#theme-toggle-btn i').removeClass('fa-moon').addClass('fa-sun');\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Send audio message\r\n         */\r\n        var sendAudioMessage = function (instanceId, api_type) {\r\n            var audioData = $('#intebchat-recorded-audio').val();\r\n            if (!audioData) {\r\n                return;\r\n            }\r\n\r\n            var doSend = function () {\r\n                var responseMode = (audioConfig.mode === 'both') ? lastInputMode : audioConfig.mode;\r\n\r\n                // Mostrar animaciÃ³n de transcripciÃ³n mejorada\r\n                addToChatLog('user transcribing',\r\n                    '<div class=\"transcribing-animation\">' +\r\n                    '<i class=\"fa fa-microphone pulse\"></i> ' +\r\n                    '<span class=\"dots\">' +\r\n                    '<span>.</span><span>.</span><span>.</span>' +\r\n                    '</span> ' +\r\n                    (strings.transcribing || 'Transcribing...') +\r\n                    '</div>', instanceId);\r\n\r\n                AnimatedAssistant.thinking();\r\n                createCompletion('', instanceId, api_type, responseMode);\r\n            };\r\n\r\n            if (!currentConversationId) {\r\n                Ajax.call([{\r\n                    methodname: 'mod_intebchat_create_conversation',\r\n                    args: { instanceid: instanceId },\r\n                    done: function (response) {\r\n                        currentConversationId = response.conversationid;\r\n                        $('#conversation-title').text(response.title);\r\n                        var conversationHtml = createConversationListItem(response);\r\n                        if ($('.intebchat-no-conversations').length > 0) {\r\n                            $('.intebchat-conversations-list').html(conversationHtml);\r\n                        } else {\r\n                            $('.intebchat-conversations-list').prepend(conversationHtml);\r\n                        }\r\n                        $('.intebchat-conversation-item').removeClass('active');\r\n                        $('.intebchat-conversation-item[data-conversation-id=\"' +\r\n                            currentConversationId + '\"]').addClass('active');\r\n                        doSend();\r\n                    }\r\n                }]);\r\n            } else {\r\n                doSend();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Load all required strings\r\n         */\r\n        var loadStrings = function () {\r\n            var stringkeys = [\r\n                { key: 'askaquestion', component: 'mod_intebchat' },\r\n                { key: 'erroroccurred', component: 'mod_intebchat' },\r\n                { key: 'newconversation', component: 'mod_intebchat' },\r\n                { key: 'confirmclear', component: 'mod_intebchat' },\r\n                { key: 'conversationcleared', component: 'mod_intebchat' },\r\n                { key: 'loadingconversation', component: 'mod_intebchat' },\r\n                { key: 'edittitle', component: 'mod_intebchat' },\r\n                { key: 'clearconversation', component: 'mod_intebchat' },\r\n                { key: 'cancel', component: 'core' },\r\n                { key: 'save', component: 'core' },\r\n                { key: 'delete', component: 'core' },\r\n                { key: 'conversationtitle', component: 'mod_intebchat' },\r\n                { key: 'confirmclearmessage', component: 'mod_intebchat' },\r\n                { key: 'transcribing', component: 'mod_intebchat' },\r\n                { key: 'switchtoaudiomode', component: 'mod_intebchat' },\r\n                { key: 'switchtotextmode', component: 'mod_intebchat' },\r\n                { key: 'tokenlimitexceeded', component: 'mod_intebchat' },\r\n                { key: 'switchtheme', component: 'mod_intebchat' },\r\n                { key: 'darkmode', component: 'mod_intebchat' },\r\n                { key: 'lightmode', component: 'mod_intebchat' },\r\n                { key: 'texttokens', component: 'mod_intebchat' },\r\n                { key: 'audiotokens', component: 'mod_intebchat' },\r\n                { key: 'tokenlimitwarning', component: 'mod_intebchat' },\r\n                { key: 'reasoningmodelwarning', component: 'mod_intebchat' },\r\n                { key: 'conversationtitleupdated', component: 'mod_intebchat' }\r\n            ];\r\n\r\n            return Str.get_strings(stringkeys).then(function (results) {\r\n                strings.askaquestion = results[0];\r\n                strings.erroroccurred = results[1];\r\n                strings.newconversation = results[2];\r\n                strings.confirmclear = results[3];\r\n                strings.conversationcleared = results[4];\r\n                strings.loadingconversation = results[5];\r\n                strings.edittitle = results[6];\r\n                strings.clearconversation = results[7];\r\n                strings.cancel = results[8];\r\n                strings.save = results[9];\r\n                strings.delete = results[10];\r\n                strings.conversationtitle = results[11];\r\n                strings.confirmclearmessage = results[12];\r\n                strings.transcribing = results[13];\r\n                strings.switchtoaudiomode = results[14];\r\n                strings.switchtotextmode = results[15];\r\n                strings.tokenlimitexceeded = results[16];\r\n                strings.switchtheme = results[17];\r\n                strings.darkmode = results[18];\r\n                strings.lightmode = results[19];\r\n                strings.texttokens = results[20];\r\n                strings.audiotokens = results[21];\r\n                strings.tokenlimitwarning = results[22];\r\n                strings.reasoningmodelwarning = results[23];\r\n                strings.conversationtitleupdated = results[24];\r\n\r\n                questionString = strings.askaquestion;\r\n                errorString = strings.erroroccurred;\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Show modal for editing conversation title - CORREGIDO\r\n         */\r\n        var showEditTitleModal = function (conversationId) {\r\n            var currentTitle = $('#conversation-title').text();\r\n\r\n            ModalSaveCancel.create({\r\n                title: strings.edittitle,\r\n                body: '<div class=\"form-group\">' +\r\n                    '<label for=\"conversation-title-input\">' + strings.conversationtitle + '</label>' +\r\n                    '<input type=\"text\" class=\"form-control\" id=\"conversation-title-input\" value=\"' +\r\n                    currentTitle.replace(/\"/g, '&quot;') + '\">' +\r\n                    '</div>',\r\n                buttons: {\r\n                    save: strings.save,\r\n                    cancel: strings.cancel\r\n                },\r\n                show: true,\r\n                removeOnClose: true\r\n            }).then(function (modal) {\r\n                var root = modal.getRoot();\r\n\r\n                // Handle save button click\r\n                root.on('modal-save-cancel:save', function (e) {\r\n                    e.preventDefault();\r\n                    var newTitle = $('#conversation-title-input').val().trim();\r\n                    if (newTitle && newTitle !== currentTitle) {\r\n                        updateConversationTitle(conversationId, newTitle);\r\n                    }\r\n                    modal.destroy();\r\n                });\r\n\r\n                // Focus input when modal is shown\r\n                root.on('shown.bs.modal', function () {\r\n                    $('#conversation-title-input').focus().select();\r\n                });\r\n\r\n                // Handle enter key\r\n                root.on('keypress', '#conversation-title-input', function (e) {\r\n                    if (e.which === 13) {\r\n                        e.preventDefault();\r\n                        root.find('[data-action=\"save\"]').trigger('click');\r\n                    }\r\n                });\r\n\r\n                return modal;\r\n            }).catch(Notification.exception);\r\n        };\r\n\r\n        /**\r\n         * Show modal for clearing conversation - CORREGIDO\r\n         */\r\n        var showClearConversationModal = function (conversationId, instanceId) {\r\n            ModalDeleteCancel.create({\r\n                title: strings.clearconversation,\r\n                body: '<p>' + strings.confirmclearmessage + '</p>',\r\n                buttons: {\r\n                    delete: strings.delete,\r\n                    cancel: strings.cancel\r\n                },\r\n                show: true,\r\n                removeOnClose: true\r\n            }).then(function (modal) {\r\n                var root = modal.getRoot();\r\n\r\n                // Handle delete button click\r\n                root.on('modal-delete-cancel:delete', function (e) {\r\n                    e.preventDefault();\r\n                    clearConversation(conversationId, instanceId);\r\n                    modal.destroy();\r\n                });\r\n\r\n                // Handle cancel\r\n                root.on('modal-delete-cancel:cancel', function (e) {\r\n                    e.preventDefault();\r\n                    modal.destroy();\r\n                });\r\n\r\n                return modal;\r\n            }).catch(Notification.exception);\r\n        };\r\n\r\n        /**\r\n         * Initialize conversation management\r\n         */\r\n        var initializeConversations = function (instanceId) {\r\n            var firstConversation = $('.intebchat-conversation-item').first();\r\n            if (firstConversation.length > 0) {\r\n                firstConversation.click();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Create a new conversation\r\n         */\r\n        var createNewConversation = function (instanceId) {\r\n            Ajax.call([{\r\n                methodname: 'mod_intebchat_create_conversation',\r\n                args: { instanceid: instanceId },\r\n                done: function (response) {\r\n                    currentConversationId = response.conversationid;\r\n\r\n                    $('#intebchat_log').empty();\r\n                    $('#conversation-title').text(response.title);\r\n\r\n                    var conversationHtml = createConversationListItem(response);\r\n                    if ($('.intebchat-no-conversations').length > 0) {\r\n                        $('.intebchat-conversations-list').html(conversationHtml);\r\n                    } else {\r\n                        $('.intebchat-conversations-list').prepend(conversationHtml);\r\n                    }\r\n\r\n                    $('.intebchat-conversation-item').removeClass('active');\r\n                    $('.intebchat-conversation-item[data-conversation-id=\"' + currentConversationId + '\"]').addClass('active');\r\n\r\n                    if ($('#openai_input').length) {\r\n                        $('#openai_input').focus();\r\n                    }\r\n\r\n                    AnimatedAssistant.wave();\r\n                },\r\n                fail: function (error) {\r\n                    Notification.addNotification({\r\n                        message: error.message || strings.erroroccurred,\r\n                        type: 'error'\r\n                    });\r\n                }\r\n            }]);\r\n        };\r\n\r\n        /**\r\n         * Load a conversation\r\n         */\r\n        var loadConversation = function (conversationId, instanceId) {\r\n            $('#intebchat_log').html('<div class=\"loading-conversation text-center p-4\">' +\r\n                '<div class=\"spinner-border text-primary\" role=\"status\">' +\r\n                '<span class=\"sr-only\">Loading...</span></div> ' +\r\n                strings.loadingconversation +\r\n                '</div>');\r\n\r\n            Ajax.call([{\r\n                methodname: 'mod_intebchat_load_conversation',\r\n                args: {\r\n                    conversationid: conversationId,\r\n                    instanceid: instanceId\r\n                },\r\n                done: function (response) {\r\n                    console.log('Conversation loaded:', response);\r\n\r\n                    currentConversationId = conversationId;\r\n                    $('#conversation-title').text(response.title);\r\n                    $('#intebchat_log').empty();\r\n\r\n                    if (response.messages && response.messages.length > 0) {\r\n                        response.messages.forEach(function (msg) {\r\n                            var clean = stripAutoplay(msg.message);\r\n                            addToChatLog(msg.role === 'user' ? 'user' : 'bot', clean, instanceId, false);\r\n                        });\r\n                    }\r\n\r\n                    if (response.threadId) {\r\n                        $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]')\r\n                            .attr('data-thread-id', response.threadId);\r\n                    }\r\n\r\n                    $('.intebchat-conversation-item').removeClass('active');\r\n                    $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]').addClass('active');\r\n\r\n                    $('#conversations-sidebar').removeClass('mobile-open');\r\n\r\n                    var messageContainer = $('#intebchat_log');\r\n                    messageContainer.animate({\r\n                        scrollTop: messageContainer[0].scrollHeight\r\n                    }, 300);\r\n\r\n                    $('#openai_input').focus();\r\n                    AnimatedAssistant.idle();\r\n                },\r\n                fail: function (error) {\r\n                    console.error('Error loading conversation:', error);\r\n                    $('#intebchat_log').empty();\r\n\r\n                    var errorMessage = strings.erroroccurred;\r\n                    if (error.message) {\r\n                        errorMessage = error.message;\r\n                    } else if (error.error) {\r\n                        errorMessage = error.error;\r\n                    }\r\n\r\n                    addToChatLog('bot error', errorMessage, instanceId);\r\n\r\n                    Notification.addNotification({\r\n                        message: errorMessage,\r\n                        type: 'error'\r\n                    });\r\n                }\r\n            }]);\r\n        };\r\n\r\n        /**\r\n         * Clear a conversation - CORREGIDO\r\n         */\r\n        var clearConversation = function (conversationId, instanceId) {\r\n            Ajax.call([{\r\n                methodname: 'mod_intebchat_clear_conversation',\r\n                args: { conversationid: conversationId },\r\n                done: function (response) {\r\n                    console.log('Clear conversation response:', response);\r\n\r\n                    if (response.deleted) {\r\n                        $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]')\r\n                            .fadeOut(300, function () {\r\n                                $(this).remove();\r\n\r\n                                if ($('.intebchat-conversation-item').length === 0) {\r\n                                    createNewConversation(instanceId);\r\n                                } else {\r\n                                    var firstConv = $('.intebchat-conversation-item').first();\r\n                                    if (firstConv.length > 0) {\r\n                                        firstConv.click();\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        Notification.addNotification({\r\n                            message: strings.conversationcleared,\r\n                            type: 'success'\r\n                        });\r\n                    } else {\r\n                        $('#intebchat_log').empty();\r\n\r\n                        var $conversationItem = $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]');\r\n                        $conversationItem.find('.intebchat-conversation-preview').text('');\r\n                        $conversationItem.removeAttr('data-thread-id');\r\n\r\n                        Notification.addNotification({\r\n                            message: strings.conversationcleared,\r\n                            type: 'success'\r\n                        });\r\n                    }\r\n                },\r\n                fail: function (error) {\r\n                    console.error('Error clearing conversation:', error);\r\n                    Notification.addNotification({\r\n                        message: error.message || strings.erroroccurred,\r\n                        type: 'error'\r\n                    });\r\n                }\r\n            }]);\r\n        };\r\n\r\n        /**\r\n         * Update conversation title - CORREGIDO\r\n         */\r\n        var updateConversationTitle = function (conversationId, newTitle) {\r\n            if (!newTitle || newTitle.trim() === '') {\r\n                return;\r\n            }\r\n\r\n            Ajax.call([{\r\n                methodname: 'mod_intebchat_update_conversation_title',\r\n                args: {\r\n                    conversationid: conversationId,\r\n                    title: newTitle\r\n                },\r\n                done: function (response) {\r\n                    console.log('Title update response:', response);\r\n\r\n                    if (response && response.success) {\r\n                        $('#conversation-title').text(newTitle);\r\n\r\n                        var $item = $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]');\r\n                        $item.find('.title-text').text(newTitle);\r\n                        $item.attr('data-title', newTitle);\r\n\r\n                        Notification.addNotification({\r\n                            message: strings.conversationtitleupdated || 'Title updated successfully',\r\n                            type: 'success'\r\n                        });\r\n                    } else {\r\n                        Notification.addNotification({\r\n                            message: strings.erroroccurred,\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                },\r\n                fail: function (error) {\r\n                    console.error('Error updating title:', error);\r\n                    Notification.addNotification({\r\n                        message: error.message || strings.erroroccurred,\r\n                        type: 'error'\r\n                    });\r\n                }\r\n            }]);\r\n        };\r\n\r\n        /**\r\n         * Refresh a conversation in the sidebar\r\n         */\r\n        var refreshConversationInSidebar = function (conversationId) {\r\n            var $item = $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]');\r\n            if ($item.length) {\r\n                var now = new Date();\r\n                $item.find('.intebchat-conversation-date').text(\r\n                    now.toLocaleDateString([], { day: '2-digit', month: '2-digit' })\r\n                );\r\n\r\n                if (!$item.is(':first-child')) {\r\n                    $item.fadeOut(200, function () {\r\n                        $(this).prependTo('.intebchat-conversations-list').fadeIn(200);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Filter conversations\r\n         */\r\n        var filterConversations = function (searchTerm) {\r\n            searchTerm = searchTerm.toLowerCase();\r\n\r\n            $('.intebchat-conversation-item').each(function () {\r\n                var title = $(this).find('.title-text').text().toLowerCase();\r\n                var preview = $(this).find('.intebchat-conversation-preview').text().toLowerCase();\r\n\r\n                if (title.includes(searchTerm) || preview.includes(searchTerm)) {\r\n                    $(this).show();\r\n                } else {\r\n                    $(this).hide();\r\n                }\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Create conversation list item HTML\r\n         */\r\n        var createConversationListItem = function (conversation) {\r\n            var date = new Date(conversation.lastmessage * 1000);\r\n            var dateStr = date.toLocaleDateString([], { day: '2-digit', month: '2-digit' });\r\n\r\n            return '<div class=\"intebchat-conversation-item\" ' +\r\n                'data-conversation-id=\"' + conversation.conversationid + '\" ' +\r\n                'data-title=\"' + conversation.title + '\">' +\r\n                '<div class=\"intebchat-conversation-title\">' +\r\n                '<span class=\"title-text\">' + conversation.title + '</span>' +\r\n                '<span class=\"intebchat-conversation-date\">' + dateStr + '</span>' +\r\n                '</div>' +\r\n                '<div class=\"intebchat-conversation-preview\">' + conversation.preview + '</div>' +\r\n                '</div>';\r\n        };\r\n\r\n        /**\r\n         * Send message (enhanced with conversation management)\r\n         */\r\n        var sendMessage = function (message, instanceId, api_type) {\r\n            if (!currentConversationId) {\r\n                Ajax.call([{\r\n                    methodname: 'mod_intebchat_create_conversation',\r\n                    args: { instanceid: instanceId },\r\n                    done: function (response) {\r\n                        currentConversationId = response.conversationid;\r\n                        $('#conversation-title').text(response.title);\r\n\r\n                        var conversationHtml = createConversationListItem(response);\r\n                        if ($('.intebchat-no-conversations').length > 0) {\r\n                            $('.intebchat-conversations-list').html(conversationHtml);\r\n                        } else {\r\n                            $('.intebchat-conversations-list').prepend(conversationHtml);\r\n                        }\r\n\r\n                        $('.intebchat-conversation-item').removeClass('active');\r\n                        $('.intebchat-conversation-item[data-conversation-id=\"' + currentConversationId + '\"]').addClass('active');\r\n\r\n                        addToChatLog('user', message, instanceId);\r\n                        AnimatedAssistant.thinking();\r\n                        var responseMode = (audioConfig.mode === 'both') ? lastInputMode : 'text';\r\n                        createCompletion(message, instanceId, api_type, responseMode);\r\n                    },\r\n                    fail: function (error) {\r\n                        Notification.addNotification({\r\n                            message: error.message || errorString,\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                }]);\r\n                return;\r\n            }\r\n\r\n            addToChatLog('user', message, instanceId);\r\n            AnimatedAssistant.thinking();\r\n            var responseMode = (audioConfig.mode === 'both') ? lastInputMode : 'text';\r\n            createCompletion(message, instanceId, api_type, responseMode);\r\n        };\r\n\r\n        /**\r\n         * Update UI based on token limit status\r\n         */\r\n        var updateTokenUI = function () {\r\n            if (!tokenInfo.enabled) {\r\n                return;\r\n            }\r\n\r\n            var $container = $('.mod_intebchat');\r\n            var $input = $container.find('#openai_input');\r\n            var $submitBtn = $container.find('#go');\r\n            var $progressBar = $container.find('.progress-bar');\r\n\r\n            if (tokenInfo.exceeded) {\r\n                $input.prop('disabled', true);\r\n                $submitBtn.prop('disabled', true);\r\n            } else {\r\n                $input.prop('disabled', false);\r\n                $submitBtn.prop('disabled', false);\r\n            }\r\n\r\n            if ($progressBar.length) {\r\n                var percentage = (tokenInfo.used / tokenInfo.limit * 100);\r\n                $progressBar.css('width', percentage + '%');\r\n\r\n                $progressBar.removeClass('warning danger');\r\n                if (percentage > 90) {\r\n                    $progressBar.addClass('danger');\r\n                } else if (percentage > 75) {\r\n                    $progressBar.addClass('warning');\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Check if token limit has reset\r\n         */\r\n        var checkTokenReset = function () {\r\n            var now = Date.now() / 1000;\r\n            if (tokenInfo.exceeded && now > tokenInfo.resetTime) {\r\n                window.location.reload();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Remove autoplay attribute from audio tags to avoid unwanted playback\r\n         * @param {string} html\r\n         * @return {string}\r\n         */\r\n        function stripAutoplay(html) {\r\n            var container = $('<div></div>').html(html);\r\n            container.find('audio').each(function () {\r\n                $(this).removeAttr('autoplay');\r\n                this.autoplay = false;\r\n            });\r\n            return container.html();\r\n        }\r\n        /**\r\n         * Add a message to the chat UI with improved animations\r\n         */\r\n        var addToChatLog = function (type, message, instanceId, animate = true) {\r\n            var messageContainer = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #intebchat_log');\r\n\r\n            if (type !== 'user transcribing') {\r\n                messageContainer.find('.openai_message.transcribing').remove();\r\n            }\r\n\r\n            var messageElem = $('<div></div>').addClass('openai_message').addClass(type.replace(' ', '-'));\r\n\r\n            // Add typing animation for bot messages\r\n            if (type === 'bot' && animate) {\r\n                messageElem.addClass('typing');\r\n                var messageText = $('<span></span>').addClass('message-content');\r\n                var cursor = $('<span class=\"typing-cursor\">|</span>');\r\n                messageText.append(cursor);\r\n                messageElem.append(messageText);\r\n\r\n                // Simulate typing effect\r\n                var fullMessage = message;\r\n                var currentIndex = 0;\r\n                var typingSpeed = 30;\r\n\r\n                messageContainer.append(messageElem);\r\n\r\n                var typeWriter = function () {\r\n                    if (currentIndex < fullMessage.length) {\r\n                        var char = fullMessage.charAt(currentIndex);\r\n                        if (char === '<') {\r\n                            // Handle HTML tags\r\n                            var tagEnd = fullMessage.indexOf('>', currentIndex);\r\n                            if (tagEnd !== -1) {\r\n                                var tag = fullMessage.substring(currentIndex, tagEnd + 1);\r\n                                cursor.before(tag);\r\n                                currentIndex = tagEnd + 1;\r\n                            } else {\r\n                                cursor.before(char);\r\n                                currentIndex++;\r\n                            }\r\n                        } else {\r\n                            cursor.before(char);\r\n                            currentIndex++;\r\n                        }\r\n                        setTimeout(typeWriter, typingSpeed);\r\n                    } else {\r\n                        cursor.remove();\r\n                        messageElem.removeClass('typing');\r\n                        AnimatedAssistant.idle();\r\n                    }\r\n                };\r\n\r\n                typeWriter();\r\n            } else {\r\n                if (type !== 'bot' || !animate) {\r\n                    message = stripAutoplay(message);\r\n                }\r\n                var messageText = $('<span></span>').html(message);\r\n                messageElem.append(messageText);\r\n\r\n                if (animate) {\r\n                    messageElem.hide();\r\n                    messageContainer.append(messageElem);\r\n                    messageElem.fadeIn(300);\r\n                } else {\r\n                    messageContainer.append(messageElem);\r\n                }\r\n            }\r\n\r\n            // Add timestamp\r\n            var timestamp = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n            var timestampElem = $('<span></span>').addClass('message-timestamp').text(timestamp);\r\n            messageElem.append(timestampElem);\r\n\r\n            // Smooth scroll to bottom\r\n            messageContainer.animate({\r\n                scrollTop: messageContainer[0].scrollHeight\r\n            }, 300);\r\n        };\r\n\r\n        /**\r\n         * Makes an API request to get a completion from GPT\r\n         */\r\n        var createCompletion = function (message, instanceId, api_type, responseMode) {\r\n            var threadId = null;\r\n\r\n            if (currentConversationId) {\r\n                var $conversationItem = $('.intebchat-conversation-item[data-conversation-id=\"' + currentConversationId + '\"]');\r\n                if ($conversationItem.length && $conversationItem.data('thread-id')) {\r\n                    threadId = $conversationItem.data('thread-id');\r\n                }\r\n            }\r\n\r\n            var history = buildTranscript(instanceId);\r\n\r\n            $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #control_bar').addClass('disabled');\r\n            $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').removeClass('error');\r\n            $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').attr('placeholder', questionString);\r\n            $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').blur();\r\n\r\n            if (!$('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] .openai_message.transcribing').length) {\r\n                addToChatLog('bot loading',\r\n                    '<div class=\"loading-dots\">' +\r\n                    '<span></span><span></span><span></span>' +\r\n                    '</div>', instanceId);\r\n            }\r\n\r\n            var audio = $('#intebchat-recorded-audio').val();\r\n\r\n            var requestData = {\r\n                message: message,\r\n                history: history,\r\n                instanceId: instanceId,\r\n                conversationId: currentConversationId || null,\r\n                threadId: threadId,\r\n                audio: audio || null,\r\n                responseMode: responseMode || 'text'\r\n            };\r\n\r\n            console.log('Sending completion request:', requestData);\r\n\r\n            $.ajax({\r\n                url: M.cfg.wwwroot + '/mod/intebchat/api/completion.php',\r\n                type: 'POST',\r\n                dataType: 'json',\r\n                contentType: 'application/json',\r\n                data: JSON.stringify(requestData),\r\n                success: function (data) {\r\n                    console.log('Completion response:', data);\r\n\r\n                    $('#intebchat-recorded-audio').val('');\r\n                    var messageContainer = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #intebchat_log');\r\n\r\n                    messageContainer.find('.openai_message.bot-loading, .openai_message.user-transcribing').remove();\r\n\r\n                    $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #control_bar').removeClass('disabled');\r\n\r\n                    if (data.message) {\r\n                        if (audio && data.transcription) {\r\n                            messageContainer.find('.openai_message.user-transcribing').remove();\r\n                            var userContent = data.transcription;\r\n                            if (data.useraudio) {\r\n                                // IMPORTANTE: Removido autoplay del audio del usuario\r\n                                userContent = '<audio controls src=\"' + data.useraudio + '\"></audio>' +\r\n                                    '<div class=\"transcription\">' + data.transcription + '</div>';\r\n                            }\r\n                            addToChatLog('user', userContent, instanceId);\r\n                        }\r\n\r\n                        addToChatLog('bot', data.message, instanceId);\r\n                        AnimatedAssistant.talking();\r\n                        setTimeout(function () {\r\n                            AnimatedAssistant.idle();\r\n                        }, 2000);\r\n\r\n                        if (data.conversationId && !currentConversationId) {\r\n                            currentConversationId = data.conversationId;\r\n                        }\r\n\r\n                        if (data.threadId && currentConversationId) {\r\n                            $('.intebchat-conversation-item[data-conversation-id=\"' + currentConversationId + '\"]')\r\n                                .attr('data-thread-id', data.threadId);\r\n                        }\r\n\r\n                        if (currentConversationId) {\r\n                            updateConversationPreview(currentConversationId, data.transcription || message);\r\n                        }\r\n\r\n                        if (data.tokenInfo && tokenInfo.enabled) {\r\n                            TokenTracker.addTokens(data.tokenInfo);\r\n                        }\r\n                    } else if (data.error) {\r\n                        console.error('Server error:', data.error);\r\n                        if (data.error.type === 'token_limit_exceeded') {\r\n                            tokenInfo.exceeded = true;\r\n                            updateTokenUI();\r\n                            Notification.addNotification({\r\n                                message: data.error.message,\r\n                                type: 'error'\r\n                            });\r\n                        } else {\r\n                            addToChatLog('bot error', data.error.message, instanceId);\r\n                        }\r\n                        AnimatedAssistant.idle();\r\n                    }\r\n                    if ($('#openai_input').length) {\r\n                        $('#openai_input').focus();\r\n                    }\r\n                },\r\n                error: function (xhr, status, error) {\r\n                    console.error('AJAX error:', status, error, xhr.responseText);\r\n                    var messageContainer = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #intebchat_log');\r\n                    messageContainer.find('.openai_message.bot-loading, .openai_message.user-transcribing').remove();\r\n                    $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #control_bar').removeClass('disabled');\r\n\r\n                    var errorMsg = errorString;\r\n                    try {\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        if (response.error) {\r\n                            errorMsg = response.error.message || response.error;\r\n                        }\r\n                    } catch (e) {\r\n                        errorMsg = errorString + ' (' + error + ')';\r\n                    }\r\n\r\n                    addToChatLog('bot error', errorMsg, instanceId);\r\n                    AnimatedAssistant.idle();\r\n                    $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').addClass('error');\r\n                    $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] #openai_input').attr('placeholder', errorString);\r\n                }\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Update conversation preview in sidebar\r\n         */\r\n        var updateConversationPreview = function (conversationId, lastMessage) {\r\n            if (!lastMessage) return;\r\n\r\n            var $item = $('.intebchat-conversation-item[data-conversation-id=\"' + conversationId + '\"]');\r\n            if ($item.length) {\r\n                $item.find('.intebchat-conversation-preview').text(lastMessage);\r\n                var now = new Date();\r\n                $item.find('.intebchat-conversation-date').text(\r\n                    now.toLocaleDateString([], { day: '2-digit', month: '2-digit' })\r\n                );\r\n\r\n                if (!$item.is(':first-child')) {\r\n                    $item.fadeOut(200, function () {\r\n                        $(this).prependTo('.intebchat-conversations-list').fadeIn(200);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Build transcript from chat history\r\n         */\r\n        var buildTranscript = function (instanceId) {\r\n            var transcript = [];\r\n            $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] .openai_message').each(function (index, element) {\r\n                var messages = $('.mod_intebchat[data-instance-id=\"' + instanceId + '\"] .openai_message');\r\n                if (index === messages.length - 1) {\r\n                    return;\r\n                }\r\n\r\n                var user = userName;\r\n                if ($(element).hasClass('bot')) {\r\n                    user = assistantName;\r\n                }\r\n\r\n                var messageText = $(element).clone();\r\n                messageText.find('.message-timestamp').remove();\r\n                messageText.find('audio').remove();\r\n                messageText.find('.transcription').remove();\r\n\r\n                transcript.push({ \"user\": user, \"message\": messageText.text().trim() });\r\n            });\r\n\r\n            return transcript;\r\n        };\r\n\r\n        return {\r\n            init: init\r\n        };\r\n    });"],"names":["define","$","Ajax","Str","Notification","ModalSaveCancel","ModalDeleteCancel","Templates","questionString","errorString","currentConversationId","currentInputMode","lastInputMode","tokenInfo","enabled","limit","used","exceeded","resetTime","strings","audioConfig","mode","TokenTracker","audioUsed","textUsed","init","initialUsed","updateDisplay","addTokens","total","audio_input","audio_output","prompt","completion","checkLimits","percentage","this","text","toFixed","css","Math","min","length","after","texttokens","audiotokens","toLocaleString","removeClass","addClass","prop","before","tokenlimitexceeded","remaining","tokenlimitwarning","replace","AnimatedAssistant","append","bindEvents","idle","console","log","self","document","on","wave","blink","thinking","showBubble","talking","hideBubble","setTimeout","fadeIn","fadeOut","blinkInterval","clearInterval","setInterval","random","initDarkMode","instanceId","$container","themeKey","M","cfg","sesskey","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","e","preventDefault","hasClass","setItem","find","attr","darkmode","lightmode","addEventListener","sendAudioMessage","api_type","val","doSend","responseMode","addToChatLog","transcribing","createCompletion","call","methodname","args","instanceid","done","response","conversationid","title","conversationHtml","createConversationListItem","html","prepend","loadStrings","get_strings","key","component","then","results","askaquestion","erroroccurred","newconversation","confirmclear","conversationcleared","loadingconversation","edittitle","clearconversation","cancel","save","delete","conversationtitle","confirmclearmessage","switchtoaudiomode","switchtotextmode","switchtheme","reasoningmodelwarning","conversationtitleupdated","showEditTitleModal","conversationId","currentTitle","create","body","buttons","show","removeOnClose","modal","root","getRoot","newTitle","trim","updateConversationTitle","destroy","focus","select","which","trigger","catch","exception","showClearConversationModal","clearConversation","initializeConversations","firstConversation","first","click","createNewConversation","empty","fail","error","addNotification","message","type","loadConversation","messages","forEach","msg","clean","stripAutoplay","role","threadId","messageContainer","animate","scrollTop","scrollHeight","errorMessage","deleted","remove","firstConv","$conversationItem","removeAttr","success","$item","filterConversations","searchTerm","toLowerCase","each","preview","includes","hide","conversation","dateStr","Date","lastmessage","toLocaleDateString","day","month","sendMessage","updateTokenUI","$input","$submitBtn","$progressBar","checkTokenReset","now","location","reload","container","autoplay","messageElem","messageText","cursor","fullMessage","currentIndex","typingSpeed","typeWriter","char","charAt","tagEnd","indexOf","tag","substring","timestamp","toLocaleTimeString","hour","minute","timestampElem","data","history","buildTranscript","blur","audio","requestData","ajax","url","wwwroot","dataType","contentType","JSON","stringify","transcription","userContent","useraudio","updateConversationPreview","xhr","status","responseText","errorMsg","parse","lastMessage","is","prependTo","transcript","index","element","user","userName","assistantName","clone","push","persistConvo","tokenLimitEnabled","tokenLimit","tokensUsed","tokenLimitExceeded","audioEnabled","audioMode","sessionStorage","ajaxComplete","event","settings","shiftKey","target","value","input","toggleClass","style","height"],"mappings":"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"}