{"version":3,"file":"payment_modal.min.js","sources":["../src/payment_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * PayU payment gateway modal handler.\r\n *\r\n * @module     paygw_payu/payment_modal\r\n * @copyright  2024 Orion Cloud Consulting SAS\r\n * @author     Alonso Arias <soporte@orioncloud.com.co>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Templates from 'core/templates';\r\nimport Modal from 'core/modal';\r\nimport Ajax from 'core/ajax';\r\nimport Notification from 'core/notification';\r\n\r\n/**\r\n * Show payment modal and handle form submission.\r\n * \r\n * @param {String} component Component name\r\n * @param {String} paymentArea Payment area\r\n * @param {String} itemId Item ID\r\n * @param {String} description Payment description\r\n * @returns {Promise}\r\n */\r\nexport const process = (component, paymentArea, itemId, description) => {\r\n    return showPaymentModal(component, paymentArea, itemId, description)\r\n        .then((modal) => {\r\n            handlePaymentMethod(modal);\r\n            return modal;\r\n        })\r\n        .catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Show the payment modal with PayU form.\r\n * \r\n * @param {String} component\r\n * @param {String} paymentArea\r\n * @param {String} itemId\r\n * @param {String} description\r\n * @returns {Promise<Modal>}\r\n */\r\nconst showPaymentModal = async(component, paymentArea, itemId, description) => {\r\n    const templateContext = {\r\n        component: component,\r\n        paymentarea: paymentArea,\r\n        itemid: itemId,\r\n        description: description,\r\n        sesskey: M.cfg.sesskey,\r\n    };\r\n    \r\n    // Load banks for PSE if needed.\r\n    try {\r\n        const banks = await loadPSEBanks();\r\n        templateContext.banks = banks;\r\n    } catch (error) {\r\n        console.error('Error loading PSE banks:', error);\r\n    }\r\n    \r\n    const modal = await Modal.create({\r\n        title: M.util.get_string('gatewayname', 'paygw_payu'),\r\n        body: await Templates.render('paygw_payu/checkout_modal', templateContext),\r\n        large: true,\r\n        show: true,\r\n        removeOnClose: true,\r\n    });\r\n    \r\n    // Add submit button to modal footer.\r\n    modal.setFooter(await Templates.render('paygw_payu/modal_footer', {}));\r\n    \r\n    return modal;\r\n};\r\n\r\n/**\r\n * Load PSE banks list via AJAX.\r\n * \r\n * @returns {Promise<Array>}\r\n */\r\nconst loadPSEBanks = () => {\r\n    return Ajax.call([{\r\n        methodname: 'paygw_payu_get_pse_banks',\r\n        args: {}\r\n    }])[0];\r\n};\r\n\r\n/**\r\n * Handle payment method selection and form changes.\r\n * \r\n * @param {Modal} modal\r\n */\r\nconst handlePaymentMethod = (modal) => {\r\n    const root = modal.getRoot();\r\n    const form = root.find('#payu-checkout-form');\r\n    const methodSelect = form.find('#paymentmethod');\r\n    \r\n    // Toggle payment method fields.\r\n    methodSelect.on('change', function() {\r\n        const method = $(this).val();\r\n        form.find('.payment-method-fields').addClass('d-none');\r\n        form.find('.payment-method-fields[data-method=\"' + method + '\"]').removeClass('d-none');\r\n        \r\n        // Update required fields based on method.\r\n        updateRequiredFields(form, method);\r\n    });\r\n    \r\n    // Initial toggle.\r\n    methodSelect.trigger('change');\r\n    \r\n    // Handle form submission.\r\n    form.on('submit', function(e) {\r\n        e.preventDefault();\r\n        submitPayment(form, modal);\r\n    });\r\n    \r\n    // Handle modal footer submit button.\r\n    root.find('#payu-submit-payment').on('click', function() {\r\n        form.submit();\r\n    });\r\n};\r\n\r\n/**\r\n * Update required fields based on payment method.\r\n * \r\n * @param {jQuery} form\r\n * @param {String} method\r\n */\r\nconst updateRequiredFields = (form, method) => {\r\n    // Remove all required attributes first.\r\n    form.find('[required]').removeAttr('required');\r\n    \r\n    // Add required based on method.\r\n    switch(method) {\r\n        case 'creditcard':\r\n            form.find('#cardholder, #cardnumber, #expmonth, #expyear, #cvv').attr('required', true);\r\n            break;\r\n        case 'pse':\r\n            form.find('#psebank, #documentnumber').attr('required', true);\r\n            break;\r\n        case 'nequi':\r\n        case 'bancolombia':\r\n            form.find('#phone').attr('required', true);\r\n            break;\r\n        case 'googlepay':\r\n            form.find('#gp_token').attr('required', true);\r\n            break;\r\n        case 'cash':\r\n            form.find('#documentnumber').attr('required', true);\r\n            break;\r\n    }\r\n};\r\n\r\n/**\r\n * Submit payment form via AJAX.\r\n * \r\n * @param {jQuery} form\r\n * @param {Modal} modal\r\n */\r\nconst submitPayment = async(form, modal) => {\r\n    // Validate form.\r\n    if (!form[0].checkValidity()) {\r\n        form[0].reportValidity();\r\n        return;\r\n    }\r\n    \r\n    // Show loading.\r\n    modal.getRoot().find('#payu-submit-payment').prop('disabled', true)\r\n        .html(M.util.get_string('processingpayment', 'paygw_payu'));\r\n    \r\n    try {\r\n        // Serialize form data.\r\n        const formData = {};\r\n        form.serializeArray().forEach(field => {\r\n            formData[field.name] = field.value;\r\n        });\r\n        \r\n        // Call AJAX to process payment.\r\n        const response = await Ajax.call([{\r\n            methodname: 'paygw_payu_process_payment',\r\n            args: formData\r\n        }])[0];\r\n        \r\n        if (response.success) {\r\n            // Handle successful response based on payment method.\r\n            if (response.redirect_url) {\r\n                // Redirect to bank or payment page.\r\n                window.location.href = response.redirect_url;\r\n            } else if (response.receipt_url) {\r\n                // Show receipt for cash payments.\r\n                window.open(response.receipt_url, '_blank');\r\n                modal.destroy();\r\n                window.location.reload();\r\n            } else {\r\n                // Payment completed.\r\n                modal.destroy();\r\n                window.location.reload();\r\n            }\r\n        } else {\r\n            // Show error.\r\n            throw new Error(response.message || 'Payment failed');\r\n        }\r\n    } catch (error) {\r\n        Notification.addNotification({\r\n            type: 'error',\r\n            message: error.message || M.util.get_string('paymenterror', 'paygw_payu')\r\n        });\r\n        \r\n        // Re-enable submit button.\r\n        modal.getRoot().find('#payu-submit-payment').prop('disabled', false)\r\n            .html(M.util.get_string('submitpayment', 'paygw_payu'));\r\n    }\r\n};\r\n\r\n/**\r\n * Format and validate phone number for Nequi.\r\n * \r\n * @param {String} phone\r\n * @returns {String|null}\r\n */\r\nexport const formatPhoneNumber = (phone) => {\r\n    // Remove all non-digits.\r\n    phone = phone.replace(/\\D/g, '');\r\n    \r\n    // Check if valid Colombian number.\r\n    if (phone.startsWith('57')) {\r\n        phone = phone.substring(2);\r\n    }\r\n    \r\n    // Must be 10 digits.\r\n    if (phone.length !== 10) {\r\n        return null;\r\n    }\r\n    \r\n    // Must start with 3.\r\n    if (!phone.startsWith('3')) {\r\n        return null;\r\n    }\r\n    \r\n    return '57 ' + phone;\r\n};"],"names":["component","paymentArea","itemId","description","showPaymentModal","then","modal","handlePaymentMethod","catch","Notification","exception","async","templateContext","paymentarea","itemid","sesskey","M","cfg","banks","loadPSEBanks","error","console","Modal","create","title","util","get_string","body","Templates","render","large","show","removeOnClose","setFooter","Ajax","call","methodname","args","root","getRoot","form","find","methodSelect","on","method","$","this","val","addClass","removeClass","updateRequiredFields","trigger","e","preventDefault","submitPayment","submit","removeAttr","attr","checkValidity","prop","html","formData","serializeArray","forEach","field","name","value","response","success","Error","message","redirect_url","window","location","href","receipt_url","open","destroy","reload","addNotification","type","reportValidity","phone","replace","startsWith","substring","length"],"mappings":";;;;;;;;6SAsCuB,CAACA,UAAWC,YAAaC,OAAQC,cAC7CC,iBAAiBJ,UAAWC,YAAaC,OAAQC,aACnDE,MAAMC,QACHC,oBAAoBD,OACbA,SAEVE,MAAMC,sBAAaC,iBAYtBN,iBAAmBO,MAAMX,UAAWC,YAAaC,OAAQC,qBACrDS,gBAAkB,CACpBZ,UAAWA,UACXa,YAAaZ,YACba,OAAQZ,OACRC,YAAaA,YACbY,QAASC,EAAEC,IAAIF,mBAKTG,YAAcC,eACpBP,gBAAgBM,MAAQA,MAC1B,MAAOE,OACLC,QAAQD,MAAM,2BAA4BA,aAGxCd,YAAcgB,eAAMC,OAAO,CAC7BC,MAAOR,EAAES,KAAKC,WAAW,cAAe,cACxCC,WAAYC,mBAAUC,OAAO,4BAA6BjB,iBAC1DkB,OAAO,EACPC,MAAM,EACNC,eAAe,WAInB1B,MAAM2B,gBAAgBL,mBAAUC,OAAO,0BAA2B,KAE3DvB,OAQLa,aAAe,IACVe,cAAKC,KAAK,CAAC,CACdC,WAAY,2BACZC,KAAM,MACN,GAQF9B,oBAAuBD,cACnBgC,KAAOhC,MAAMiC,UACbC,KAAOF,KAAKG,KAAK,uBACjBC,aAAeF,KAAKC,KAAK,kBAG/BC,aAAaC,GAAG,UAAU,iBAChBC,OAASC,EAAEC,MAAMC,MACvBP,KAAKC,KAAK,0BAA0BO,SAAS,UAC7CR,KAAKC,KAAK,uCAAyCG,OAAS,MAAMK,YAAY,UAG9EC,qBAAqBV,KAAMI,WAI/BF,aAAaS,QAAQ,UAGrBX,KAAKG,GAAG,UAAU,SAASS,GACvBA,EAAEC,iBACFC,cAAcd,KAAMlC,UAIxBgC,KAAKG,KAAK,wBAAwBE,GAAG,SAAS,WAC1CH,KAAKe,aAUPL,qBAAuB,CAACV,KAAMI,iBAEhCJ,KAAKC,KAAK,cAAce,WAAW,YAG5BZ,YACE,aACDJ,KAAKC,KAAK,uDAAuDgB,KAAK,YAAY,aAEjF,MACDjB,KAAKC,KAAK,6BAA6BgB,KAAK,YAAY,aAEvD,YACA,cACDjB,KAAKC,KAAK,UAAUgB,KAAK,YAAY,aAEpC,YACDjB,KAAKC,KAAK,aAAagB,KAAK,YAAY,aAEvC,OACDjB,KAAKC,KAAK,mBAAmBgB,KAAK,YAAY,KAWpDH,cAAgB3C,MAAM6B,KAAMlC,YAEzBkC,KAAK,GAAGkB,iBAMbpD,MAAMiC,UAAUE,KAAK,wBAAwBkB,KAAK,YAAY,GACzDC,KAAK5C,EAAES,KAAKC,WAAW,oBAAqB,yBAIvCmC,SAAW,GACjBrB,KAAKsB,iBAAiBC,SAAQC,QAC1BH,SAASG,MAAMC,MAAQD,MAAME,eAI3BC,eAAiBjC,cAAKC,KAAK,CAAC,CAC9BC,WAAY,6BACZC,KAAMwB,YACN,OAEAM,SAASC,cAiBH,IAAIC,MAAMF,SAASG,SAAW,kBAfhCH,SAASI,aAETC,OAAOC,SAASC,KAAOP,SAASI,aACzBJ,SAASQ,aAEhBH,OAAOI,KAAKT,SAASQ,YAAa,UAClCrE,MAAMuE,UACNL,OAAOC,SAASK,WAGhBxE,MAAMuE,UACNL,OAAOC,SAASK,UAM1B,MAAO1D,6BACQ2D,gBAAgB,CACzBC,KAAM,QACNV,QAASlD,MAAMkD,SAAWtD,EAAES,KAAKC,WAAW,eAAgB,gBAIhEpB,MAAMiC,UAAUE,KAAK,wBAAwBkB,KAAK,YAAY,GACzDC,KAAK5C,EAAES,KAAKC,WAAW,gBAAiB,qBAhD7Cc,KAAK,GAAGyC,6CA0DkBC,SAE9BA,MAAQA,MAAMC,QAAQ,MAAO,KAGnBC,WAAW,QACjBF,MAAQA,MAAMG,UAAU,IAIP,KAAjBH,MAAMI,OACC,KAINJ,MAAME,WAAW,KAIf,MAAQF,MAHJ"}