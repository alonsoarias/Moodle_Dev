{"version":3,"file":"config_helper.min.js","sources":["../src/config_helper.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * PayU configuration helper for auto-filling sandbox credentials.\r\n *\r\n * @module     paygw_payu/config_helper\r\n * @copyright  2024 Orion Cloud Consulting SAS\r\n * @author     Alonso Arias <soporte@orioncloud.com.co>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery', 'core/notification', 'core/str'], function($, Notification, Str) {\r\n    'use strict';\r\n    \r\n    /**\r\n     * PayU Sandbox credentials for Colombia.\r\n     * These are the official test credentials from PayU documentation.\r\n     */\r\n    const SANDBOX_CREDENTIALS = {\r\n        merchantid: '508029',\r\n        payuaccountid: '512321',\r\n        apilogin: 'pRRXKOl8ikMmt9u',\r\n        apikey: '4Vj8eK4rloUd272L48hsrarnUA'\r\n    };\r\n\r\n    /**\r\n     * Test credit cards for sandbox environment.\r\n     */\r\n    const TEST_CARDS = {\r\n        VISA_APPROVED: {\r\n            number: '4111111111111111',\r\n            cvv: '123',\r\n            expMonth: '12',\r\n            expYear: '2029',\r\n            name: 'APPROVED',\r\n            network: 'VISA'\r\n        },\r\n        MASTERCARD_APPROVED: {\r\n            number: '5424000000000015',\r\n            cvv: '123',\r\n            expMonth: '12',\r\n            expYear: '2029',\r\n            name: 'APPROVED',\r\n            network: 'MASTERCARD'\r\n        },\r\n        AMEX_APPROVED: {\r\n            number: '370000000000002',\r\n            cvv: '1234',\r\n            expMonth: '12',\r\n            expYear: '2029',\r\n            name: 'APPROVED',\r\n            network: 'AMEX'\r\n        },\r\n        DINERS_APPROVED: {\r\n            number: '36018623456787',\r\n            cvv: '123',\r\n            expMonth: '12',\r\n            expYear: '2029',\r\n            name: 'APPROVED',\r\n            network: 'DINERS'\r\n        },\r\n        VISA_DECLINED: {\r\n            number: '4000000000000002',\r\n            cvv: '123',\r\n            expMonth: '12',\r\n            expYear: '2029',\r\n            name: 'DECLINED',\r\n            network: 'VISA'\r\n        },\r\n        VISA_INSUFFICIENT: {\r\n            number: '4000000000000063',\r\n            cvv: '123',\r\n            expMonth: '12',\r\n            expYear: '2029',\r\n            name: 'INSUFFICIENT_FUNDS',\r\n            network: 'VISA'\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Test PSE data.\r\n     */\r\n    const TEST_PSE = {\r\n        bank: '1022',\r\n        userType: 'N',\r\n        document: '1234567890',\r\n        phone: '3001234567',\r\n        email: 'test@payulatam.com',\r\n        name: 'TEST USER PSE'\r\n    };\r\n\r\n    /**\r\n     * Test Nequi data.\r\n     */\r\n    const TEST_NEQUI = {\r\n        phone: '3004567890',\r\n        document: '1234567890'\r\n    };\r\n\r\n    /**\r\n     * Test cash payment data.\r\n     */\r\n    const TEST_CASH = {\r\n        document: '1234567890',\r\n        phone: '3001234567',\r\n        email: 'test@payulatam.com'\r\n    };\r\n\r\n    /**\r\n     * Initialize the configuration helper.\r\n     */\r\n    const init = function() {\r\n        // Check if we're on the gateway configuration page.\r\n        const $configForm = $('form#mform1');\r\n        const $testModeCheckbox = $configForm.find('input[name=\"testmode\"]');\r\n        \r\n        if ($testModeCheckbox.length > 0) {\r\n            setupConfigPage($testModeCheckbox);\r\n        }\r\n        \r\n        // Check if we're on the payment page.\r\n        const $paymentForm = $('#payu-checkout-form');\r\n        if ($paymentForm.length > 0) {\r\n            setupPaymentPage($paymentForm);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Setup configuration page helpers.\r\n     */\r\n    const setupConfigPage = function($testModeCheckbox) {\r\n        // Add helper section.\r\n        addSandboxHelperSection();\r\n        \r\n        // Handle test mode toggle.\r\n        $testModeCheckbox.on('change', function() {\r\n            if ($(this).is(':checked')) {\r\n                $('#payu-sandbox-helper').slideDown();\r\n                showSandboxPrompt();\r\n            } else {\r\n                $('#payu-sandbox-helper').slideUp();\r\n                $('#payu-sandbox-indicator').remove();\r\n            }\r\n        });\r\n        \r\n        // Check initial state.\r\n        if ($testModeCheckbox.is(':checked')) {\r\n            $('#payu-sandbox-helper').show();\r\n            highlightSandboxMode();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add sandbox helper section.\r\n     */\r\n    const addSandboxHelperSection = function() {\r\n        const $testModeRow = $('input[name=\"testmode\"]').closest('.form-group, .fitem');\r\n        \r\n        const helperHtml = `\r\n            <div id=\"payu-sandbox-helper\" class=\"alert alert-info mt-3\" style=\"display: none;\">\r\n                <h4><i class=\"fa fa-flask\"></i> Sandbox Mode - Test Credentials</h4>\r\n                <p>These are the official PayU test credentials for Colombia sandbox environment:</p>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                        <dl class=\"row\">\r\n                            <dt class=\"col-sm-4\">Merchant ID:</dt>\r\n                            <dd class=\"col-sm-8\"><code>${SANDBOX_CREDENTIALS.merchantid}</code></dd>\r\n                            <dt class=\"col-sm-4\">Account ID:</dt>\r\n                            <dd class=\"col-sm-8\"><code>${SANDBOX_CREDENTIALS.payuaccountid}</code></dd>\r\n                        </dl>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <dl class=\"row\">\r\n                            <dt class=\"col-sm-4\">API Login:</dt>\r\n                            <dd class=\"col-sm-8\"><code>${SANDBOX_CREDENTIALS.apilogin}</code></dd>\r\n                            <dt class=\"col-sm-4\">API Key:</dt>\r\n                            <dd class=\"col-sm-8\"><code>${SANDBOX_CREDENTIALS.apikey}</code></dd>\r\n                        </dl>\r\n                    </div>\r\n                </div>\r\n                <button type=\"button\" class=\"btn btn-primary\" id=\"payu-autofill-sandbox\">\r\n                    <i class=\"fa fa-magic\"></i> Auto-fill Sandbox Credentials\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-secondary ml-2\" id=\"payu-copy-credentials\">\r\n                    <i class=\"fa fa-clipboard\"></i> Copy Credentials\r\n                </button>\r\n            </div>\r\n        `;\r\n        \r\n        $testModeRow.after(helperHtml);\r\n        \r\n        // Setup button handlers.\r\n        $('#payu-autofill-sandbox').on('click', autofillSandboxCredentials);\r\n        $('#payu-copy-credentials').on('click', copySandboxCredentials);\r\n    };\r\n\r\n    /**\r\n     * Show prompt to auto-fill credentials.\r\n     */\r\n    const showSandboxPrompt = function() {\r\n        const $merchantId = $('input[name=\"merchantid\"]');\r\n        const $accountId = $('input[name=\"payuaccountid\"]');\r\n        const $apiLogin = $('input[name=\"apilogin\"]');\r\n        const $apiKey = $('input[name=\"apikey\"]');\r\n        \r\n        // Check if fields are empty.\r\n        if (!$merchantId.val() && !$accountId.val() && !$apiLogin.val() && !$apiKey.val()) {\r\n            if (confirm('Would you like to auto-fill the sandbox test credentials?')) {\r\n                autofillSandboxCredentials();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Auto-fill sandbox credentials.\r\n     */\r\n    const autofillSandboxCredentials = function() {\r\n        $('input[name=\"merchantid\"]').val(SANDBOX_CREDENTIALS.merchantid);\r\n        $('input[name=\"payuaccountid\"]').val(SANDBOX_CREDENTIALS.payuaccountid);\r\n        $('input[name=\"apilogin\"]').val(SANDBOX_CREDENTIALS.apilogin);\r\n        $('input[name=\"apikey\"]').val(SANDBOX_CREDENTIALS.apikey);\r\n        \r\n        // Unmask password field if needed.\r\n        const $apiKeyField = $('input[name=\"apikey\"]');\r\n        const $unmaskButton = $apiKeyField.siblings('.unmask');\r\n        if ($unmaskButton.length && $apiKeyField.attr('type') === 'password') {\r\n            $unmaskButton.trigger('click');\r\n        }\r\n        \r\n        Notification.addNotification({\r\n            message: 'Sandbox credentials have been filled successfully.',\r\n            type: 'success'\r\n        });\r\n        \r\n        highlightSandboxMode();\r\n    };\r\n\r\n    /**\r\n     * Copy sandbox credentials to clipboard.\r\n     */\r\n    const copySandboxCredentials = function() {\r\n        const credentials = `\r\nMerchant ID: ${SANDBOX_CREDENTIALS.merchantid}\r\nAccount ID: ${SANDBOX_CREDENTIALS.payuaccountid}\r\nAPI Login: ${SANDBOX_CREDENTIALS.apilogin}\r\nAPI Key: ${SANDBOX_CREDENTIALS.apikey}\r\n        `.trim();\r\n        \r\n        if (navigator.clipboard) {\r\n            navigator.clipboard.writeText(credentials).then(function() {\r\n                Notification.addNotification({\r\n                    message: 'Credentials copied to clipboard!',\r\n                    type: 'success'\r\n                });\r\n            });\r\n        } else {\r\n            // Fallback for older browsers.\r\n            const $temp = $('<textarea>');\r\n            $('body').append($temp);\r\n            $temp.val(credentials).select();\r\n            document.execCommand('copy');\r\n            $temp.remove();\r\n            \r\n            Notification.addNotification({\r\n                message: 'Credentials copied to clipboard!',\r\n                type: 'success'\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Highlight sandbox mode is active.\r\n     */\r\n    const highlightSandboxMode = function() {\r\n        if (!$('#payu-sandbox-indicator').length) {\r\n            const indicator = `\r\n                <div id=\"payu-sandbox-indicator\" class=\"alert alert-warning mb-3\">\r\n                    <i class=\"fa fa-exclamation-triangle\"></i> \r\n                    <strong>SANDBOX MODE ACTIVE</strong> - Transactions will be processed in test environment\r\n                </div>\r\n            `;\r\n            $('form#mform1').prepend(indicator);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Setup payment page helpers.\r\n     */\r\n    const setupPaymentPage = function($paymentForm) {\r\n        const isTestMode = $paymentForm.data('testmode') === '1' || \r\n                          $paymentForm.data('testmode') === true;\r\n        \r\n        if (isTestMode) {\r\n            addTestModeIndicator();\r\n            addTestHelpers();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add test mode indicator.\r\n     */\r\n    const addTestModeIndicator = function() {\r\n        const indicator = `\r\n            <div class=\"alert alert-warning mb-3\" id=\"payu-test-indicator\">\r\n                <h4><i class=\"fa fa-flask\"></i> Test Mode Active</h4>\r\n                <ul class=\"mb-0\">\r\n                    <li>You are in PayU sandbox environment</li>\r\n                    <li>No real money will be charged</li>\r\n                    <li>Use the test data provided below</li>\r\n                </ul>\r\n            </div>\r\n        `;\r\n        $('#payu-checkout-form').prepend(indicator);\r\n    };\r\n\r\n    /**\r\n     * Add test helpers to payment form.\r\n     */\r\n    const addTestHelpers = function() {\r\n        // Credit card test helper.\r\n        const $creditCardSection = $('.payment-method-fields[data-method=\"creditcard\"]');\r\n        if ($creditCardSection.length) {\r\n            addCreditCardTestHelper($creditCardSection);\r\n        }\r\n        \r\n        // PSE test helper.\r\n        const $pseSection = $('.payment-method-fields[data-method=\"pse\"]');\r\n        if ($pseSection.length) {\r\n            addPSETestHelper($pseSection);\r\n        }\r\n        \r\n        // Nequi test helper.\r\n        const $nequiSection = $('.payment-method-fields[data-method=\"nequi\"]');\r\n        if ($nequiSection.length) {\r\n            addNequiTestHelper($nequiSection);\r\n        }\r\n        \r\n        // Cash test helper.\r\n        const $cashSection = $('.payment-method-fields[data-method=\"cash\"]');\r\n        if ($cashSection.length) {\r\n            addCashTestHelper($cashSection);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add credit card test helper.\r\n     */\r\n    const addCreditCardTestHelper = function($section) {\r\n        const testHelper = `\r\n            <div class=\"alert alert-info test-helper\">\r\n                <h5><i class=\"fa fa-credit-card\"></i> Test Credit Cards</h5>\r\n                <div class=\"form-group\">\r\n                    <select class=\"form-control test-card-selector\">\r\n                        <option value=\"\">-- Select a test card --</option>\r\n                        <option value=\"VISA_APPROVED\">Visa (Approved)</option>\r\n                        <option value=\"MASTERCARD_APPROVED\">Mastercard (Approved)</option>\r\n                        <option value=\"AMEX_APPROVED\">American Express (Approved)</option>\r\n                        <option value=\"DINERS_APPROVED\">Diners (Approved)</option>\r\n                        <option value=\"VISA_DECLINED\">Visa (Declined)</option>\r\n                        <option value=\"VISA_INSUFFICIENT\">Visa (Insufficient Funds)</option>\r\n                    </select>\r\n                </div>\r\n                <button type=\"button\" class=\"btn btn-sm btn-primary fill-test-card\">\r\n                    <i class=\"fa fa-magic\"></i> Fill Test Card\r\n                </button>\r\n            </div>\r\n        `;\r\n        \r\n        $section.prepend(testHelper);\r\n        \r\n        // Handle test card filling.\r\n        $section.find('.fill-test-card').on('click', function() {\r\n            const selectedCard = $section.find('.test-card-selector').val();\r\n            if (selectedCard && TEST_CARDS[selectedCard]) {\r\n                fillCreditCardData(TEST_CARDS[selectedCard]);\r\n            }\r\n        });\r\n        \r\n        // Auto-fill on selection.\r\n        $section.find('.test-card-selector').on('change', function() {\r\n            const selectedCard = $(this).val();\r\n            if (selectedCard && TEST_CARDS[selectedCard]) {\r\n                fillCreditCardData(TEST_CARDS[selectedCard]);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Fill credit card test data.\r\n     */\r\n    const fillCreditCardData = function(cardData) {\r\n        $('#cardholder').val(cardData.name);\r\n        $('#cardnumber').val(cardData.number);\r\n        $('#expmonth').val(cardData.expMonth);\r\n        $('#expyear').val(cardData.expYear);\r\n        $('#cvv').val(cardData.cvv);\r\n        $('#cardnetwork').val(cardData.network);\r\n        $('#cc_phone').val('3001234567');\r\n        $('#cc_documentnumber').val('1234567890');\r\n        \r\n        Notification.addNotification({\r\n            message: 'Test card data filled',\r\n            type: 'info'\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Add PSE test helper.\r\n     */\r\n    const addPSETestHelper = function($section) {\r\n        const testHelper = `\r\n            <div class=\"alert alert-info test-helper\">\r\n                <h5><i class=\"fa fa-university\"></i> Test PSE Bank Transfer</h5>\r\n                <p>Click the button to fill test PSE data:</p>\r\n                <button type=\"button\" class=\"btn btn-sm btn-primary fill-test-pse\">\r\n                    <i class=\"fa fa-magic\"></i> Fill Test PSE Data\r\n                </button>\r\n            </div>\r\n        `;\r\n        \r\n        $section.prepend(testHelper);\r\n        \r\n        $section.find('.fill-test-pse').on('click', function() {\r\n            fillPSEData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Fill PSE test data.\r\n     */\r\n    const fillPSEData = function() {\r\n        $('#psebank').val(TEST_PSE.bank);\r\n        $('#pseusertype').val(TEST_PSE.userType);\r\n        $('#pse_documentnumber').val(TEST_PSE.document);\r\n        $('#pse_phone').val(TEST_PSE.phone);\r\n        $('#pse_email').val(TEST_PSE.email);\r\n        $('#cardholder').val(TEST_PSE.name);\r\n        \r\n        Notification.addNotification({\r\n            message: 'Test PSE data filled',\r\n            type: 'info'\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Add Nequi test helper.\r\n     */\r\n    const addNequiTestHelper = function($section) {\r\n        const testHelper = `\r\n            <div class=\"alert alert-info test-helper\">\r\n                <h5><i class=\"fa fa-mobile\"></i> Test Nequi Payment</h5>\r\n                <p>Use test phone number starting with 300:</p>\r\n                <button type=\"button\" class=\"btn btn-sm btn-primary fill-test-nequi\">\r\n                    <i class=\"fa fa-magic\"></i> Fill Test Nequi Data\r\n                </button>\r\n            </div>\r\n        `;\r\n        \r\n        $section.prepend(testHelper);\r\n        \r\n        $section.find('.fill-test-nequi').on('click', function() {\r\n            fillNequiData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Fill Nequi test data.\r\n     */\r\n    const fillNequiData = function() {\r\n        $('#nequi_phone').val(TEST_NEQUI.phone);\r\n        $('#nequi_documentnumber').val(TEST_NEQUI.document);\r\n        \r\n        Notification.addNotification({\r\n            message: 'Test Nequi data filled',\r\n            type: 'info'\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Add cash payment test helper.\r\n     */\r\n    const addCashTestHelper = function($section) {\r\n        const testHelper = `\r\n            <div class=\"alert alert-info test-helper\">\r\n                <h5><i class=\"fa fa-money\"></i> Test Cash Payment</h5>\r\n                <p>Fill test data for cash payment simulation:</p>\r\n                <button type=\"button\" class=\"btn btn-sm btn-primary fill-test-cash\">\r\n                    <i class=\"fa fa-magic\"></i> Fill Test Cash Data\r\n                </button>\r\n            </div>\r\n        `;\r\n        \r\n        $section.prepend(testHelper);\r\n        \r\n        $section.find('.fill-test-cash').on('click', function() {\r\n            fillCashData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Fill cash payment test data.\r\n     */\r\n    const fillCashData = function() {\r\n        $('#cash_documentnumber').val(TEST_CASH.document);\r\n        $('#cash_phone').val(TEST_CASH.phone);\r\n        \r\n        Notification.addNotification({\r\n            message: 'Test cash payment data filled',\r\n            type: 'info'\r\n        });\r\n    };\r\n\r\n    return {\r\n        init: init,\r\n        getSandboxCredentials: function() {\r\n            return SANDBOX_CREDENTIALS;\r\n        },\r\n        getTestCards: function() {\r\n            return TEST_CARDS;\r\n        }\r\n    };\r\n});"],"names":["define","$","Notification","Str","SANDBOX_CREDENTIALS","merchantid","payuaccountid","apilogin","apikey","TEST_CARDS","VISA_APPROVED","number","cvv","expMonth","expYear","name","network","MASTERCARD_APPROVED","AMEX_APPROVED","DINERS_APPROVED","VISA_DECLINED","VISA_INSUFFICIENT","TEST_PSE","TEST_NEQUI","TEST_CASH","setupConfigPage","$testModeCheckbox","addSandboxHelperSection","on","this","is","slideDown","showSandboxPrompt","slideUp","remove","show","highlightSandboxMode","$testModeRow","closest","helperHtml","after","autofillSandboxCredentials","copySandboxCredentials","$merchantId","$accountId","$apiLogin","$apiKey","val","confirm","$apiKeyField","$unmaskButton","siblings","length","attr","trigger","addNotification","message","type","credentials","trim","navigator","clipboard","writeText","then","$temp","append","select","document","execCommand","indicator","prepend","setupPaymentPage","$paymentForm","data","addTestModeIndicator","addTestHelpers","$creditCardSection","addCreditCardTestHelper","$pseSection","addPSETestHelper","$nequiSection","addNequiTestHelper","$cashSection","addCashTestHelper","$section","find","selectedCard","fillCreditCardData","cardData","fillPSEData","fillNequiData","fillCashData","init","getSandboxCredentials","getTestCards"],"mappings":"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"}