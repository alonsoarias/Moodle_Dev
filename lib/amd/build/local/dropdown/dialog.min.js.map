{"version":3,"file":"dialog.min.js","sources":["../../../src/local/dropdown/dialog.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Dropdown status JS controls.\r\n *\r\n * @module      core/local/dropdown/dialog\r\n * @copyright   2023 Ferran Recio <ferran@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n// The jQuery module is only used for interacting with Bootstrap 4. It can be removed when MDL-71979 is integrated.\r\nimport jQuery from 'jquery';\r\nimport {\r\n    firstFocusableElement,\r\n    lastFocusableElement,\r\n    previousFocusableElement,\r\n    nextFocusableElement,\r\n} from 'core/pagehelpers';\r\nimport Pending from 'core/pending';\r\n\r\nconst Selectors = {\r\n    dropdownButton: '[data-for=\"dropdowndialog_button\"]',\r\n    dropdownDialog: '[data-for=\"dropdowndialog_dialog\"]',\r\n};\r\n\r\n/**\r\n * Dropdown dialog class.\r\n * @private\r\n */\r\nexport class DropdownDialog {\r\n    /**\r\n     * Constructor.\r\n     * @param {HTMLElement} element The element to initialize.\r\n     */\r\n    constructor(element) {\r\n        this.element = element;\r\n        this.button = element.querySelector(Selectors.dropdownButton);\r\n        this.panel = element.querySelector(Selectors.dropdownDialog);\r\n    }\r\n\r\n    /**\r\n     * Initialize the subpanel element.\r\n     *\r\n     * This method adds the event listeners to the subpanel and the position classes.\r\n     */\r\n    init() {\r\n        if (this.element.dataset.dropdownDialogInitialized) {\r\n            return;\r\n        }\r\n\r\n        // Menu Item events.\r\n        this.button.addEventListener('keydown', this._buttonKeyHandler.bind(this));\r\n        // Subpanel content events.\r\n        this.panel.addEventListener('keydown', this._contentKeyHandler.bind(this));\r\n\r\n        this.element.dataset.dropdownDialogInitialized = true;\r\n    }\r\n\r\n    /**\r\n     * Dropdown button key handler.\r\n     * @param {Event} event\r\n     * @private\r\n     */\r\n    _buttonKeyHandler(event) {\r\n        if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.setVisible(false);\r\n            return;\r\n        }\r\n\r\n        if (event.key === 'ArrowDown' || event.key === 'ArrowRight') {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            this.setVisible(true);\r\n            this._focusPanelContent();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sub panel content key handler.\r\n     * @param {Event} event\r\n     * @private\r\n     */\r\n    _contentKeyHandler(event) {\r\n        let newFocus = null;\r\n\r\n        if (event.key === 'End') {\r\n            newFocus = lastFocusableElement(this.panel);\r\n        }\r\n        if (event.key === 'Home') {\r\n            newFocus = firstFocusableElement(this.panel);\r\n        }\r\n        if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\r\n            newFocus = previousFocusableElement(this.panel, false);\r\n            if (!newFocus) {\r\n                newFocus = this.button;\r\n            }\r\n        }\r\n        if (event.key === 'ArrowDown' || event.key === 'ArrowRight') {\r\n            newFocus = nextFocusableElement(this.panel, false);\r\n        }\r\n        if (newFocus !== null) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            newFocus.focus();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus on the first focusable element of the subpanel.\r\n     * @private\r\n     */\r\n    _focusPanelContent() {\r\n        const pendingPromise = new Pending('core/dropdown/dialog:focuscontent');\r\n        // Some Bootstrap events are triggered after the click event.\r\n        // To prevent this from affecting the focus we wait a bit.\r\n        setTimeout(() => {\r\n            const firstFocusable = firstFocusableElement(this.panel);\r\n            if (firstFocusable) {\r\n                firstFocusable.focus();\r\n            }\r\n            pendingPromise.resolve();\r\n        }, 100);\r\n    }\r\n\r\n    /**\r\n     * Set the visibility of a subpanel.\r\n     * @param {Boolean} visible true if the subpanel should be visible.\r\n     */\r\n    setVisible(visible) {\r\n        if (visible === this.isVisible()) {\r\n            return;\r\n        }\r\n        // All jQuery in this code can be replaced when MDL-71979 is integrated.\r\n        jQuery(this.button).dropdown('toggle');\r\n    }\r\n\r\n    /**\r\n     * Get the visibility of a subpanel.\r\n     * @returns {Boolean} true if the subpanel is visible.\r\n     */\r\n    isVisible() {\r\n        return this.button.getAttribute('aria-expanded') === 'true';\r\n    }\r\n\r\n    /**\r\n     * Set the content of the button.\r\n     * @param {String} content\r\n     */\r\n    setButtonContent(content) {\r\n        this.button.innerHTML = content;\r\n    }\r\n\r\n    /**\r\n     * Set the disabled state of the button.\r\n     * @param {Boolean} disabled\r\n     */\r\n    setButtonDisabled(disabled) {\r\n        if (disabled) {\r\n            this.button.setAttribute('disabled', 'disabled');\r\n        } else {\r\n            this.button.removeAttribute('disabled');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Return the main dropdown HTML element.\r\n     * @returns {HTMLElement} The element.\r\n     */\r\n    getElement() {\r\n        return this.element;\r\n    }\r\n}\r\n\r\n/**\r\n * Get the dropdown dialog instance from a selector.\r\n * @param {string} selector The query selector to init.\r\n * @returns {DropdownDialog|null} The dropdown dialog instance if any.\r\n */\r\nexport const getDropdownDialog = (selector) => {\r\n    const dropdownElement = document.querySelector(selector);\r\n    if (!dropdownElement) {\r\n        return null;\r\n    }\r\n    return new DropdownDialog(dropdownElement);\r\n};\r\n\r\n/**\r\n * Initialize module.\r\n *\r\n * @method\r\n * @param {string} selector The query selector to init.\r\n */\r\nexport const init = (selector) => {\r\n    const dropdown = getDropdownDialog(selector);\r\n    if (!dropdown) {\r\n        throw new Error(`Dopdown dialog element not found: ${selector}`);\r\n    }\r\n    dropdown.init();\r\n};\r\n"],"names":["Selectors","DropdownDialog","constructor","element","button","querySelector","panel","init","this","dataset","dropdownDialogInitialized","addEventListener","_buttonKeyHandler","bind","_contentKeyHandler","event","key","stopPropagation","preventDefault","setVisible","_focusPanelContent","newFocus","focus","pendingPromise","Pending","setTimeout","firstFocusable","resolve","visible","isVisible","dropdown","getAttribute","setButtonContent","content","innerHTML","setButtonDisabled","disabled","setAttribute","removeAttribute","getElement","getDropdownDialog","selector","dropdownElement","document","Error"],"mappings":";;;;;;;6NAiCMA,yBACc,qCADdA,yBAEc,2CAOPC,eAKTC,YAAYC,cACHA,QAAUA,aACVC,OAASD,QAAQE,cAAcL,+BAC/BM,MAAQH,QAAQE,cAAcL,0BAQvCO,OACQC,KAAKL,QAAQM,QAAQC,iCAKpBN,OAAOO,iBAAiB,UAAWH,KAAKI,kBAAkBC,KAAKL,YAE/DF,MAAMK,iBAAiB,UAAWH,KAAKM,mBAAmBD,KAAKL,YAE/DL,QAAQM,QAAQC,2BAA4B,GAQrDE,kBAAkBG,UACI,YAAdA,MAAMC,KAAmC,cAAdD,MAAMC,WACjCD,MAAME,kBACNF,MAAMG,2BACDC,YAAW,GAIF,cAAdJ,MAAMC,KAAqC,eAAdD,MAAMC,MACnCD,MAAME,kBACNF,MAAMG,sBACDC,YAAW,QACXC,sBASbN,mBAAmBC,WACXM,SAAW,KAEG,QAAdN,MAAMC,MACNK,UAAW,qCAAqBb,KAAKF,QAEvB,SAAdS,MAAMC,MACNK,UAAW,sCAAsBb,KAAKF,QAExB,YAAdS,MAAMC,KAAmC,cAAdD,MAAMC,MACjCK,UAAW,yCAAyBb,KAAKF,OAAO,GAC3Ce,WACDA,SAAWb,KAAKJ,SAGN,cAAdW,MAAMC,KAAqC,eAAdD,MAAMC,MACnCK,UAAW,qCAAqBb,KAAKF,OAAO,IAE/B,OAAbe,WACAN,MAAME,kBACNF,MAAMG,iBACNG,SAASC,SAQjBF,2BACUG,eAAiB,IAAIC,iBAAQ,qCAGnCC,YAAW,WACDC,gBAAiB,sCAAsBlB,KAAKF,OAC9CoB,gBACAA,eAAeJ,QAEnBC,eAAeI,YAChB,KAOPR,WAAWS,SACHA,UAAYpB,KAAKqB,iCAIdrB,KAAKJ,QAAQ0B,SAAS,UAOjCD,kBACyD,SAA9CrB,KAAKJ,OAAO2B,aAAa,iBAOpCC,iBAAiBC,cACR7B,OAAO8B,UAAYD,QAO5BE,kBAAkBC,UACVA,cACKhC,OAAOiC,aAAa,WAAY,iBAEhCjC,OAAOkC,gBAAgB,YAQpCC,oBACW/B,KAAKL,sDASPqC,kBAAqBC,iBACxBC,gBAAkBC,SAAStC,cAAcoC,iBAC1CC,gBAGE,IAAIzC,eAAeyC,iBAFf,iEAWMD,iBACXX,SAAWU,kBAAkBC,cAC9BX,eACK,IAAIc,kDAA2CH,WAEzDX,SAASvB"}