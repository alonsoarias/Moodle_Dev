{"version":3,"file":"admin_selection.min.js","sources":["../src/admin_selection.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Admin selection JavaScript for download center\n *\n * @module     local_downloadcenter/admin_selection\n * @copyright  2025 Alonso Arias <soporte@ingeweb.co>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/ajax', 'core/notification', 'core/str'], \n    function(Ajax, Notification, Str) {\n    'use strict';\n    \n    const AdminSelection = function() {\n        this.init();\n    };\n    \n    AdminSelection.prototype.init = function() {\n        const self = this;\n        \n        // Handle course checkbox changes.\n        document.addEventListener('change', function(e) {\n            if (e.target.matches('.course-selector input[type=\"checkbox\"]')) {\n                const courseid = e.target.dataset.courseid;\n                const selected = e.target.checked;\n                self.toggleCourse(courseid, selected);\n            }\n        });\n        \n        // Handle download options changes.\n        document.addEventListener('change', function(e) {\n            if (e.target.matches('#downloadoptions input[type=\"checkbox\"]')) {\n                self.saveOptions();\n            }\n        });\n        \n        // Category collapse/expand.\n        document.addEventListener('click', function(e) {\n            if (e.target.closest('.category-header')) {\n                const categoryHeader = e.target.closest('.category-header');\n                const categoryContainer = categoryHeader.closest('.category-container');\n                const categoryCoursesDiv = categoryContainer.querySelector('.category-courses');\n                const chevronIcon = categoryHeader.querySelector('.fa');\n                \n                if (categoryCoursesDiv) {\n                    // Toggle display\n                    if (categoryCoursesDiv.style.display === 'none' || !categoryCoursesDiv.style.display) {\n                        categoryCoursesDiv.style.display = 'block';\n                    } else {\n                        categoryCoursesDiv.style.display = 'none';\n                    }\n                    \n                    // Toggle chevron\n                    if (chevronIcon) {\n                        chevronIcon.classList.toggle('fa-chevron-down');\n                        chevronIcon.classList.toggle('fa-chevron-up');\n                    }\n                }\n            }\n        });\n        \n        // Update selection count.\n        this.updateSelectionCount();\n    };\n    \n    AdminSelection.prototype.toggleCourse = function(courseid, selected) {\n        const self = this;\n        \n        // Create XMLHttpRequest\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', M.cfg.wwwroot + '/local/downloadcenter/index.php', true);\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        \n        xhr.onload = function() {\n            if (xhr.status === 200) {\n                self.updateSelectionCount();\n                \n                // Update visual feedback.\n                const checkbox = document.querySelector('input[data-courseid=\"' + courseid + '\"]');\n                const label = checkbox ? checkbox.closest('label') : null;\n                \n                if (label) {\n                    if (selected) {\n                        label.classList.add('selected');\n                    } else {\n                        label.classList.remove('selected');\n                    }\n                }\n            } else {\n                Notification.exception(new Error('Failed to update selection'));\n            }\n        };\n        \n        xhr.onerror = function() {\n            Notification.exception(new Error('Failed to update selection'));\n        };\n        \n        // Send request\n        const params = 'action=togglecourse&courseid=' + courseid + \n                      '&selected=' + (selected ? 1 : 0) + \n                      '&sesskey=' + M.cfg.sesskey;\n        xhr.send(params);\n    };\n    \n    AdminSelection.prototype.saveOptions = function() {\n        const excludeStudentCheckbox = document.getElementById('id_excludestudent');\n        const includeFilesCheckbox = document.getElementById('id_includefiles');\n        const filesRealNamesCheckbox = document.getElementById('id_filesrealnames');\n        const addNumberingCheckbox = document.getElementById('id_addnumbering');\n        \n        const options = {\n            excludestudent: excludeStudentCheckbox && excludeStudentCheckbox.checked ? 1 : 0,\n            includefiles: includeFilesCheckbox && includeFilesCheckbox.checked ? 1 : 0,\n            filesrealnames: filesRealNamesCheckbox && filesRealNamesCheckbox.checked ? 1 : 0,\n            addnumbering: addNumberingCheckbox && addNumberingCheckbox.checked ? 1 : 0\n        };\n        \n        // Create XMLHttpRequest\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', M.cfg.wwwroot + '/local/downloadcenter/index.php', true);\n        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n        \n        xhr.onload = function() {\n            if (xhr.status === 200) {\n                // Show temporary success message.\n                let feedback = document.getElementById('options-feedback');\n                if (!feedback) {\n                    feedback = document.createElement('div');\n                    feedback.id = 'options-feedback';\n                    feedback.className = 'alert alert-success';\n                    feedback.textContent = 'Options saved';\n                    \n                    const downloadOptions = document.getElementById('downloadoptions');\n                    if (downloadOptions && downloadOptions.parentNode) {\n                        downloadOptions.parentNode.insertBefore(feedback, downloadOptions.nextSibling);\n                    }\n                } else {\n                    feedback.style.display = 'block';\n                }\n                \n                // Hide after 2 seconds\n                setTimeout(function() {\n                    if (feedback) {\n                        feedback.style.display = 'none';\n                    }\n                }, 2000);\n            } else {\n                Notification.exception(new Error('Failed to save options'));\n            }\n        };\n        \n        xhr.onerror = function() {\n            Notification.exception(new Error('Failed to save options'));\n        };\n        \n        // Build params\n        let params = 'action=updateoptions&sesskey=' + M.cfg.sesskey;\n        Object.keys(options).forEach(function(key) {\n            params += '&' + key + '=' + options[key];\n        });\n        \n        xhr.send(params);\n    };\n    \n    AdminSelection.prototype.updateSelectionCount = function() {\n        const checkboxes = document.querySelectorAll('.course-selector input[type=\"checkbox\"]:checked');\n        const count = checkboxes.length;\n        \n        const selectionCountElements = document.querySelectorAll('.selection-count');\n        selectionCountElements.forEach(function(elem) {\n            elem.textContent = count;\n        });\n        \n        // Enable/disable download button.\n        const downloadButton = document.getElementById('download-selection');\n        if (downloadButton) {\n            downloadButton.disabled = (count === 0);\n        }\n    };\n    \n    return {\n        init: function() {\n            return new AdminSelection();\n        }\n    };\n});\n"],"names":["define","Ajax","Notification","Str","AdminSelection","init","prototype","self","this","document","addEventListener","e","target","matches","courseid","dataset","selected","checked","toggleCourse","saveOptions","closest","categoryHeader","categoryCoursesDiv","querySelector","chevronIcon","style","display","classList","toggle","updateSelectionCount","xhr","XMLHttpRequest","open","M","cfg","wwwroot","setRequestHeader","onload","status","checkbox","label","add","remove","exception","Error","onerror","params","sesskey","send","excludeStudentCheckbox","getElementById","includeFilesCheckbox","filesRealNamesCheckbox","addNumberingCheckbox","options","excludestudent","includefiles","filesrealnames","addnumbering","feedback","createElement","id","className","textContent","downloadOptions","parentNode","insertBefore","nextSibling","setTimeout","Object","keys","forEach","key","count","querySelectorAll","length","elem","downloadButton","disabled"],"mappings":"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"}