{"version":3,"file":"admin_selection.min.js","sources":["../src/admin_selection.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Admin selection JavaScript for download center\r\n *\r\n * @module     local_downloadcenter/admin_selection\r\n * @copyright  2025 Alonso Arias <soporte@ingeweb.co>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str'], \r\n    function($, Ajax, Notification, Str) {\r\n    \r\n    const AdminSelection = function() {\r\n        this.init();\r\n    };\r\n    \r\n    AdminSelection.prototype.init = function() {\r\n        const self = this;\r\n        \r\n        // Handle course checkbox changes.\r\n        $(document).on('change', '.course-selector input[type=\"checkbox\"]', function() {\r\n            const courseid = $(this).data('courseid');\r\n            const selected = $(this).is(':checked');\r\n            self.toggleCourse(courseid, selected);\r\n        });\r\n        \r\n        // Handle download options changes.\r\n        $(document).on('change', '#downloadoptions input[type=\"checkbox\"]', function() {\r\n            self.saveOptions();\r\n        });\r\n        \r\n        // Category collapse/expand.\r\n        $(document).on('click', '.category-header', function() {\r\n            const $category = $(this).closest('.category-container');\r\n            $category.find('.category-courses').slideToggle();\r\n            $(this).find('.fa').toggleClass('fa-chevron-down fa-chevron-up');\r\n        });\r\n        \r\n        // Update selection count.\r\n        this.updateSelectionCount();\r\n        \r\n        // Initialize tooltips.\r\n        $('[data-toggle=\"tooltip\"]').tooltip();\r\n    };\r\n    \r\n    AdminSelection.prototype.toggleCourse = function(courseid, selected) {\r\n        const self = this;\r\n        \r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/local/downloadcenter/index.php',\r\n            type: 'POST',\r\n            data: {\r\n                action: 'togglecourse',\r\n                courseid: courseid,\r\n                selected: selected ? 1 : 0,\r\n                sesskey: M.cfg.sesskey\r\n            },\r\n            success: function(response) {\r\n                self.updateSelectionCount();\r\n                \r\n                // Update visual feedback.\r\n                const $checkbox = $('input[data-courseid=\"' + courseid + '\"]');\r\n                const $label = $checkbox.closest('label');\r\n                \r\n                if (selected) {\r\n                    $label.addClass('selected');\r\n                } else {\r\n                    $label.removeClass('selected');\r\n                }\r\n            },\r\n            error: function() {\r\n                Notification.exception(new Error('Failed to update selection'));\r\n            }\r\n        });\r\n    };\r\n    \r\n    AdminSelection.prototype.saveOptions = function() {\r\n        const options = {\r\n            excludestudent: $('#id_excludestudent').is(':checked') ? 1 : 0,\r\n            includefiles: $('#id_includefiles').is(':checked') ? 1 : 0,\r\n            filesrealnames: $('#id_filesrealnames').is(':checked') ? 1 : 0,\r\n            addnumbering: $('#id_addnumbering').is(':checked') ? 1 : 0\r\n        };\r\n        \r\n        $.ajax({\r\n            url: M.cfg.wwwroot + '/local/downloadcenter/index.php',\r\n            type: 'POST',\r\n            data: Object.assign({\r\n                action: 'updateoptions',\r\n                sesskey: M.cfg.sesskey\r\n            }, options),\r\n            success: function() {\r\n                // Show temporary success message.\r\n                const $feedback = $('#options-feedback');\r\n                if ($feedback.length === 0) {\r\n                    $('<div id=\"options-feedback\" class=\"alert alert-success\">' +\r\n                      'Options saved' + '</div>')\r\n                      .insertAfter('#downloadoptions')\r\n                      .delay(2000)\r\n                      .fadeOut();\r\n                } else {\r\n                    $feedback.show().delay(2000).fadeOut();\r\n                }\r\n            },\r\n            error: function() {\r\n                Notification.exception(new Error('Failed to save options'));\r\n            }\r\n        });\r\n    };\r\n    \r\n    AdminSelection.prototype.updateSelectionCount = function() {\r\n        const count = $('.course-selector input[type=\"checkbox\"]:checked').length;\r\n        $('.selection-count').text(count);\r\n        \r\n        // Enable/disable download button.\r\n        if (count > 0) {\r\n            $('#download-selection').prop('disabled', false);\r\n        } else {\r\n            $('#download-selection').prop('disabled', true);\r\n        }\r\n    };\r\n    \r\n    return {\r\n        init: function() {\r\n            return new AdminSelection();\r\n        }\r\n    };\r\n});"],"names":["define","$","Ajax","Notification","Str","AdminSelection","init","prototype","self","this","document","on","courseid","data","selected","is","toggleCourse","saveOptions","closest","find","slideToggle","toggleClass","updateSelectionCount","tooltip","ajax","url","M","cfg","wwwroot","type","action","sesskey","success","response","$label","addClass","removeClass","error","exception","Error","options","excludestudent","includefiles","filesrealnames","addnumbering","Object","assign","$feedback","length","insertAfter","delay","fadeOut","show","count","text","prop"],"mappings":";;;;;;;AAsBAA,8CAAO,CAAC,SAAU,YAAa,oBAAqB,aAChD,SAASC,EAAGC,KAAMC,aAAcC,WAE1BC,eAAiB,gBACdC,eAGTD,eAAeE,UAAUD,KAAO,iBACtBE,KAAOC,KAGbR,EAAES,UAAUC,GAAG,SAAU,2CAA2C,iBAC1DC,SAAWX,EAAEQ,MAAMI,KAAK,YACxBC,SAAWb,EAAEQ,MAAMM,GAAG,YAC5BP,KAAKQ,aAAaJ,SAAUE,aAIhCb,EAAES,UAAUC,GAAG,SAAU,2CAA2C,WAChEH,KAAKS,iBAIThB,EAAES,UAAUC,GAAG,QAAS,oBAAoB,WACtBV,EAAEQ,MAAMS,QAAQ,uBACxBC,KAAK,qBAAqBC,cACpCnB,EAAEQ,MAAMU,KAAK,OAAOE,YAAY,yCAI/BC,uBAGLrB,EAAE,2BAA2BsB,WAGjClB,eAAeE,UAAUS,aAAe,SAASJ,SAAUE,gBACjDN,KAAOC,KAEbR,EAAEuB,KAAK,CACHC,IAAKC,EAAEC,IAAIC,QAAU,kCACrBC,KAAM,OACNhB,KAAM,CACFiB,OAAQ,eACRlB,SAAUA,SACVE,SAAUA,SAAW,EAAI,EACzBiB,QAASL,EAAEC,IAAII,SAEnBC,QAAS,SAASC,UACdzB,KAAKc,6BAICY,OADYjC,EAAE,wBAA0BW,SAAW,MAChCM,QAAQ,SAE7BJ,SACAoB,OAAOC,SAAS,YAEhBD,OAAOE,YAAY,aAG3BC,MAAO,WACHlC,aAAamC,UAAU,IAAIC,MAAM,mCAK7ClC,eAAeE,UAAUU,YAAc,iBAC7BuB,QAAU,CACZC,eAAgBxC,EAAE,sBAAsBc,GAAG,YAAc,EAAI,EAC7D2B,aAAczC,EAAE,oBAAoBc,GAAG,YAAc,EAAI,EACzD4B,eAAgB1C,EAAE,sBAAsBc,GAAG,YAAc,EAAI,EAC7D6B,aAAc3C,EAAE,oBAAoBc,GAAG,YAAc,EAAI,GAG7Dd,EAAEuB,KAAK,CACHC,IAAKC,EAAEC,IAAIC,QAAU,kCACrBC,KAAM,OACNhB,KAAMgC,OAAOC,OAAO,CAChBhB,OAAQ,gBACRC,QAASL,EAAEC,IAAII,SAChBS,SACHR,QAAS,iBAECe,UAAY9C,EAAE,qBACK,IAArB8C,UAAUC,OACV/C,EAAE,8EAECgD,YAAY,oBACZC,MAAM,KACNC,UAEHJ,UAAUK,OAAOF,MAAM,KAAMC,WAGrCd,MAAO,WACHlC,aAAamC,UAAU,IAAIC,MAAM,+BAK7ClC,eAAeE,UAAUe,qBAAuB,iBACtC+B,MAAQpD,EAAE,mDAAmD+C,OACnE/C,EAAE,oBAAoBqD,KAAKD,OAGvBA,MAAQ,EACRpD,EAAE,uBAAuBsD,KAAK,YAAY,GAE1CtD,EAAE,uBAAuBsD,KAAK,YAAY,IAI3C,CACHjD,KAAM,kBACK,IAAID"}