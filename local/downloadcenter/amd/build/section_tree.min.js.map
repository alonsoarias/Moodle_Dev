{"version":3,"file":"section_tree.min.js","sources":["../src/section_tree.js"],"sourcesContent":["/**\r\n * Manage section and item checkboxes with tri-state behaviour on the course page.\r\n *\r\n * @module     local_downloadcenter/section_tree\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core_form/changechecker', 'core/notification'], \r\n    function($, changechecker, Notification) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Update the state of a section checkbox based on its items\r\n     * @param {number} section The section number\r\n     */\r\n    function updateSectionState(section) {\r\n        var $items = $('input.item-checkbox[data-section=\"' + section + '\"]');\r\n        var $sectionbox = $('input.section-checkbox[data-section=\"' + section + '\"]');\r\n        \r\n        if ($items.length === 0) {\r\n            $sectionbox.prop('checked', false);\r\n            $sectionbox.prop('indeterminate', false);\r\n            return;\r\n        }\r\n        \r\n        var checked = $items.filter(':checked').length;\r\n        var total = $items.length;\r\n        \r\n        if (checked === 0) {\r\n            // No items checked\r\n            $sectionbox.prop('checked', false);\r\n            $sectionbox.prop('indeterminate', false);\r\n        } else if (checked === total) {\r\n            // All items checked\r\n            $sectionbox.prop('checked', true);\r\n            $sectionbox.prop('indeterminate', false);\r\n        } else {\r\n            // Some items checked - indeterminate state\r\n            $sectionbox.prop('checked', true);\r\n            $sectionbox.prop('indeterminate', true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update selection summary\r\n     */\r\n    function updateSelectionSummary() {\r\n        var totalItems = $('input.item-checkbox').length;\r\n        var checkedItems = $('input.item-checkbox:checked').length;\r\n        \r\n        var $summary = $('#selection-summary');\r\n        if ($summary.length === 0) {\r\n            // Create summary element if it doesn't exist\r\n            $summary = $('<div id=\"selection-summary\" class=\"alert alert-success mb-3\"></div>');\r\n            $('.downloadcenter-toolbar').after($summary);\r\n        }\r\n        \r\n        if (checkedItems > 0) {\r\n            $summary.text(checkedItems + ' of ' + totalItems + ' items selected');\r\n            $summary.show();\r\n        } else {\r\n            $summary.hide();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Save form data via AJAX\r\n     * @param {jQuery} $form The form element\r\n     * @return {Promise} jQuery promise for the AJAX request\r\n     */\r\n    function saveFormData($form) {\r\n        var data = $form.serializeArray();\r\n        data.push({name: 'action', value: 'savecourse'});\r\n        \r\n        // Get courseid from form\r\n        var courseid = $form.find('input[name=\"courseid\"]').val();\r\n        if (!courseid) {\r\n            // Try to get from URL\r\n            var urlParams = new URLSearchParams(window.location.search);\r\n            courseid = urlParams.get('courseid');\r\n        }\r\n        \r\n        if (courseid) {\r\n            data.push({name: 'courseid', value: courseid});\r\n        }\r\n        \r\n        return $.post(M.cfg.wwwroot + '/local/downloadcenter/index.php', $.param(data))\r\n            .done(function(response) {\r\n                if (response.status === 'ok') {\r\n                    // Mark form as clean to prevent \"unsaved changes\" warnings\r\n                    if (changechecker && changechecker.resetFormDirtyState) {\r\n                        changechecker.resetFormDirtyState($form[0]);\r\n                    }\r\n                    \r\n                    // Update selection summary\r\n                    updateSelectionSummary();\r\n                    \r\n                    // Show temporary success feedback\r\n                    showTemporaryFeedback('Selection saved');\r\n                    \r\n                    // Update save button text if it exists\r\n                    var $saveBtn = $form.find('input[name=\"submitbutton\"]');\r\n                    if ($saveBtn.length > 0) {\r\n                        var checkedCount = $('input.item-checkbox:checked').length;\r\n                        if (checkedCount > 0) {\r\n                            $saveBtn.val(M.str.local_downloadcenter.saveselection + ' (' + checkedCount + ' items)');\r\n                        } else {\r\n                            $saveBtn.val(M.str.local_downloadcenter.saveselection);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .fail(function() {\r\n                Notification.exception(new Error('Failed to save selection'));\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Show temporary feedback message\r\n     * @param {string} message The message to display\r\n     */\r\n    function showTemporaryFeedback(message) {\r\n        // Find or create feedback element\r\n        var $feedback = $('#downloadcenter-feedback');\r\n        if ($feedback.length === 0) {\r\n            $feedback = $('<div id=\"downloadcenter-feedback\" class=\"alert alert-success\" ' +\r\n                         'style=\"position: fixed; top: 60px; right: 20px; z-index: 1050; display: none;\">' +\r\n                         '</div>');\r\n            $('body').append($feedback);\r\n        }\r\n        \r\n        // Show feedback\r\n        $feedback.text(message).fadeIn(200);\r\n        \r\n        // Hide after 2 seconds\r\n        setTimeout(function() {\r\n            $feedback.fadeOut(200);\r\n        }, 2000);\r\n    }\r\n\r\n    /**\r\n     * Debounce function to limit how often a function can fire\r\n     * @param {Function} func The function to debounce\r\n     * @param {number} wait The debounce delay in milliseconds\r\n     * @return {Function} The debounced function\r\n     */\r\n    function debounce(func, wait) {\r\n        var timeout;\r\n        return function() {\r\n            var context = this, args = arguments;\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(function() {\r\n                func.apply(context, args);\r\n            }, wait);\r\n        };\r\n    }\r\n\r\n    return {\r\n        init: function() {\r\n            var $form = $('form').first();\r\n            \r\n            // Check if we're on the course-specific page\r\n            if ($form.length === 0 || !$form.find('input.section-checkbox').length) {\r\n                return; // Not on the course selection page\r\n            }\r\n            \r\n            // Create debounced save function (wait 800ms after last change)\r\n            var debouncedSave = debounce(function() {\r\n                saveFormData($form);\r\n            }, 800);\r\n            \r\n            // Initialize section checkboxes\r\n            $('input.section-checkbox').each(function() {\r\n                var $sectionbox = $(this);\r\n                var section = $sectionbox.data('section');\r\n                \r\n                // Set initial indeterminate state if specified\r\n                if ($sectionbox.data('indeterminate') === '1' || $sectionbox.data('indeterminate') === 1) {\r\n                    $sectionbox.prop('indeterminate', true);\r\n                }\r\n                \r\n                // Handle section checkbox change\r\n                $sectionbox.on('change', function(e) {\r\n                    e.stopPropagation();\r\n                    \r\n                    var checked = $sectionbox.is(':checked');\r\n                    \r\n                    // Clear indeterminate state when user explicitly checks/unchecks\r\n                    $sectionbox.prop('indeterminate', false);\r\n                    \r\n                    // Update all items in this section\r\n                    $('input.item-checkbox[data-section=\"' + section + '\"]').each(function() {\r\n                        $(this).prop('checked', checked);\r\n                    });\r\n                    \r\n                    // Update selection summary immediately\r\n                    updateSelectionSummary();\r\n                    \r\n                    // Auto-save after change\r\n                    debouncedSave();\r\n                });\r\n            });\r\n            \r\n            // Initialize item checkboxes\r\n            $('input.item-checkbox').each(function() {\r\n                var $itembox = $(this);\r\n                \r\n                // Handle item checkbox change\r\n                $itembox.on('change', function(e) {\r\n                    e.stopPropagation();\r\n                    \r\n                    // Update section state\r\n                    var section = $itembox.data('section');\r\n                    updateSectionState(section);\r\n                    \r\n                    // Update selection summary immediately\r\n                    updateSelectionSummary();\r\n                    \r\n                    // Auto-save after change\r\n                    debouncedSave();\r\n                });\r\n            });\r\n            \r\n            // Calculate initial section states\r\n            $('input.section-checkbox').each(function() {\r\n                var section = $(this).data('section');\r\n                updateSectionState(section);\r\n            });\r\n            \r\n            // Update initial selection summary\r\n            updateSelectionSummary();\r\n            \r\n            // Disable form change checker to prevent \"unsaved changes\" warnings\r\n            if (changechecker && changechecker.resetFormDirtyState) {\r\n                // Mark form as clean initially\r\n                changechecker.resetFormDirtyState($form[0]);\r\n                \r\n                // Keep form marked as clean after any changes\r\n                $form.on('change', 'input[type=\"checkbox\"]', function() {\r\n                    setTimeout(function() {\r\n                        changechecker.resetFormDirtyState($form[0]);\r\n                    }, 100);\r\n                });\r\n            }\r\n            \r\n            // Handle form submission (if user clicks Save button)\r\n            $form.on('submit', function(e) {\r\n                // Let the form submit normally but mark as clean\r\n                setTimeout(function() {\r\n                    if (changechecker && changechecker.resetFormDirtyState) {\r\n                        changechecker.resetFormDirtyState($form[0]);\r\n                    }\r\n                }, 100);\r\n            });\r\n            \r\n            // Add visual indicator for auto-save status\r\n            var $statusIndicator = $('<div class=\"downloadcenter-status text-muted small mt-2\">' +\r\n                                    '<i class=\"fa fa-check-circle text-success mr-1\"></i>' +\r\n                                    'Auto-save enabled - changes are saved automatically</div>');\r\n            $('.downloadcenter-toolbar').after($statusIndicator);\r\n            \r\n            // Update status indicator during save\r\n            $form.on('ajaxStart', function() {\r\n                $statusIndicator.html('<i class=\"fa fa-spinner fa-spin mr-1\"></i>Saving changes...');\r\n            });\r\n            \r\n            $form.on('ajaxComplete', function() {\r\n                $statusIndicator.html('<i class=\"fa fa-check-circle text-success mr-1\"></i>' +\r\n                                    'Auto-save enabled - changes are saved automatically');\r\n            });\r\n            \r\n            // Add strings for JavaScript\r\n            if (!M.str.local_downloadcenter) {\r\n                M.str.local_downloadcenter = {\r\n                    saveselection: 'Save selection'\r\n                };\r\n            }\r\n        }\r\n    };\r\n});"],"names":["define","$","changechecker","Notification","updateSectionState","section","$items","$sectionbox","length","prop","checked","filter","total","updateSelectionSummary","totalItems","checkedItems","$summary","after","text","show","hide","saveFormData","$form","data","serializeArray","push","name","value","courseid","find","val","URLSearchParams","window","location","search","get","post","M","cfg","wwwroot","param","done","response","status","resetFormDirtyState","message","$feedback","append","fadeIn","setTimeout","fadeOut","showTemporaryFeedback","$saveBtn","checkedCount","str","local_downloadcenter","saveselection","fail","exception","Error","init","first","func","wait","timeout","debouncedSave","context","this","args","arguments","clearTimeout","apply","each","on","e","stopPropagation","is","$itembox","$statusIndicator","html"],"mappings":"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"}