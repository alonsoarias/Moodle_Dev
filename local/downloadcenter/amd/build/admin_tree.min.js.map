{"version":3,"file":"admin_tree.min.js","sources":["../src/admin_tree.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Admin category/course/resource selector logic.\n *\n * @module     local_downloadcenter/admin_tree\n * @copyright  2025 Alonso Arias <soporte@ingeweb.co>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([], function() {\n    'use strict';\n\n    const triggerChange = function(element) {\n        if (typeof window.Event === 'function') {\n            element.dispatchEvent(new Event('change', {bubbles: false}));\n        } else {\n            const event = document.createEvent('HTMLEvents');\n            event.initEvent('change', false, false);\n            element.dispatchEvent(event);\n        }\n    };\n\n    const updateFullCourseFlag = function(courseNode, enabled) {\n        const fullCourseInput = courseNode.querySelector('.course-fullcourse-flag');\n        if (fullCourseInput) {\n            fullCourseInput.disabled = !enabled;\n        }\n    };\n\n    const updateCourseState = function(courseNode) {\n        const courseCheckbox = courseNode.querySelector('summary .course-checkbox');\n        if (!courseCheckbox) {\n            return;\n        }\n\n        const resourceCheckboxes = Array.from(\n            courseNode.querySelectorAll('.resource-checkbox:not([data-fullcourse])')\n        );\n        const fallbackCheckbox = courseNode.querySelector('.resource-checkbox[data-fullcourse]');\n        const hasResources = resourceCheckboxes.length > 0;\n\n        if (!hasResources) {\n            if (fallbackCheckbox) {\n                courseCheckbox.checked = fallbackCheckbox.checked;\n                courseCheckbox.indeterminate = false;\n                updateFullCourseFlag(courseNode, fallbackCheckbox.checked);\n            } else {\n                courseCheckbox.checked = false;\n                courseCheckbox.indeterminate = false;\n                updateFullCourseFlag(courseNode, false);\n            }\n            return;\n        }\n\n        const checkedCount = resourceCheckboxes.filter(function(checkbox) {\n            return checkbox.checked;\n        }).length;\n\n        if (checkedCount === 0) {\n            courseCheckbox.checked = false;\n            courseCheckbox.indeterminate = false;\n            updateFullCourseFlag(courseNode, false);\n        } else if (checkedCount === resourceCheckboxes.length) {\n            courseCheckbox.checked = true;\n            courseCheckbox.indeterminate = false;\n            updateFullCourseFlag(courseNode, true);\n        } else {\n            courseCheckbox.checked = true;\n            courseCheckbox.indeterminate = true;\n            updateFullCourseFlag(courseNode, false);\n        }\n    };\n\n    const updateCategoryState = function(categoryNode) {\n        const categoryCheckbox = categoryNode.querySelector('summary .category-checkbox');\n        if (!categoryCheckbox) {\n            return;\n        }\n        const resourceCheckboxes = categoryNode.querySelectorAll('.resource-checkbox');\n        if (!resourceCheckboxes.length) {\n            categoryCheckbox.checked = false;\n            categoryCheckbox.indeterminate = false;\n            return;\n        }\n\n        let checkedCount = 0;\n        resourceCheckboxes.forEach(function(checkbox) {\n            if (checkbox.checked) {\n                checkedCount++;\n            }\n        });\n\n        if (checkedCount === 0) {\n            categoryCheckbox.checked = false;\n            categoryCheckbox.indeterminate = false;\n        } else if (checkedCount === resourceCheckboxes.length) {\n            categoryCheckbox.checked = true;\n            categoryCheckbox.indeterminate = false;\n        } else {\n            categoryCheckbox.checked = true;\n            categoryCheckbox.indeterminate = true;\n        }\n    };\n\n    const updateCategoryAncestors = function(categoryNode) {\n        let parent = categoryNode.parentElement ?\n            categoryNode.parentElement.closest('.downloadcenter-category') : null;\n        while (parent) {\n            updateCategoryState(parent);\n            parent = parent.parentElement ? parent.parentElement.closest('.downloadcenter-category') : null;\n        }\n    };\n\n    const initCourseNode = function(courseNode) {\n        const courseCheckbox = courseNode.querySelector('summary .course-checkbox');\n        const resourceCheckboxes = Array.from(courseNode.querySelectorAll('.resource-checkbox'));\n\n        if (courseCheckbox) {\n            courseCheckbox.addEventListener('change', function() {\n                resourceCheckboxes.forEach(function(checkbox) {\n                    checkbox.checked = courseCheckbox.checked;\n                    triggerChange(checkbox);\n                });\n                updateCourseState(courseNode);\n                const categoryNode = courseNode.closest('.downloadcenter-category');\n                if (categoryNode) {\n                    updateCategoryState(categoryNode);\n                    updateCategoryAncestors(categoryNode);\n                }\n            });\n        }\n\n        resourceCheckboxes.forEach(function(checkbox) {\n            checkbox.addEventListener('change', function() {\n                updateCourseState(courseNode);\n                const categoryNode = courseNode.closest('.downloadcenter-category');\n                if (categoryNode) {\n                    updateCategoryState(categoryNode);\n                    updateCategoryAncestors(categoryNode);\n                }\n            });\n        });\n\n        updateCourseState(courseNode);\n    };\n\n    const initCategoryNode = function(categoryNode) {\n        const categoryCheckbox = categoryNode.querySelector('summary .category-checkbox');\n        if (categoryCheckbox) {\n            categoryCheckbox.addEventListener('change', function() {\n                const container = categoryNode.querySelector('.category-children');\n                if (container) {\n                    container.querySelectorAll('input[type=\"checkbox\"]').forEach(function(checkbox) {\n                        checkbox.checked = categoryCheckbox.checked;\n                        triggerChange(checkbox);\n                    });\n                }\n                updateCategoryState(categoryNode);\n                updateCategoryAncestors(categoryNode);\n            });\n        }\n\n        updateCategoryState(categoryNode);\n        updateCategoryAncestors(categoryNode);\n    };\n\n    const init = function() {\n        // Ensure DOM is ready\n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', function() {\n                initializeElements();\n            });\n        } else {\n            // DOM is already loaded\n            initializeElements();\n        }\n    };\n\n    const initializeElements = function() {\n        document.querySelectorAll('.downloadcenter-course').forEach(function(courseNode) {\n            initCourseNode(courseNode);\n        });\n\n        document.querySelectorAll('.downloadcenter-category').forEach(function(categoryNode) {\n            initCategoryNode(categoryNode);\n        });\n    };\n\n    return {\n        init: init\n    };\n});\n"],"names":["define","triggerChange","element","window","Event","dispatchEvent","bubbles","event","document","createEvent","initEvent","updateFullCourseFlag","courseNode","enabled","fullCourseInput","querySelector","disabled","updateCourseState","courseCheckbox","resourceCheckboxes","Array","from","querySelectorAll","fallbackCheckbox","length","checked","indeterminate","checkedCount","filter","checkbox","updateCategoryState","categoryNode","categoryCheckbox","forEach","updateCategoryAncestors","parent","parentElement","closest","initializeElements","addEventListener","initCourseNode","container","initCategoryNode","init","readyState"],"mappings":"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"}