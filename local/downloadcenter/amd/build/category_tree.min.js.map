{"version":3,"file":"category_tree.min.js","sources":["../src/category_tree.js"],"sourcesContent":["/**\r\n * Manage tri-state category checkboxes on the download center page.\r\n *\r\n * @module     local_downloadcenter/category_tree\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core_form/changechecker', 'core/ajax', 'core/notification'], \r\n    function($, changechecker, Ajax, Notification) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Update the state of a category checkbox based on its children\r\n     * @param {jQuery} $checkbox The category checkbox\r\n     */\r\n    function updateCategoryState($checkbox) {\r\n        var $container = $checkbox.closest('.downloadcenter-category');\r\n        \r\n        // Find direct course checkboxes\r\n        var $courseboxes = $container.find('> .collapse > .card-body .course-checkbox');\r\n        \r\n        // Find child category checkboxes\r\n        var $childcategories = $container.find('> .collapse > .card-body > .downloadcenter-category');\r\n        var $subcatboxes = $childcategories.find('> .card-header input.downloadcenter-category-checkbox');\r\n        \r\n        var total = $courseboxes.length + $subcatboxes.length;\r\n        var checked = $courseboxes.filter(':checked').length + $subcatboxes.filter(':checked').length;\r\n        var indeterminateCourses = $courseboxes.filter(function() { \r\n            return this.indeterminate || $(this).data('indeterminate') === '1'; \r\n        }).length;\r\n        var indeterminateChildren = $subcatboxes.filter(function() { \r\n            return this.indeterminate; \r\n        }).length;\r\n        \r\n        // Update checkbox state\r\n        if (total === 0) {\r\n            $checkbox.prop('checked', false);\r\n            $checkbox.prop('indeterminate', false);\r\n        } else if (checked === total && indeterminateCourses === 0 && indeterminateChildren === 0) {\r\n            // All children are fully checked\r\n            $checkbox.prop('checked', true);\r\n            $checkbox.prop('indeterminate', false);\r\n        } else if (checked > 0 || indeterminateCourses > 0 || indeterminateChildren > 0) {\r\n            // Some children are checked or indeterminate\r\n            $checkbox.prop('checked', true);\r\n            $checkbox.prop('indeterminate', true);\r\n        } else {\r\n            // No children are checked\r\n            $checkbox.prop('checked', false);\r\n            $checkbox.prop('indeterminate', false);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Propagate selection state to all children\r\n     * @param {jQuery} $checkbox The category checkbox\r\n     * @param {boolean} checked The checked state to propagate\r\n     */\r\n    function propagateToChildren($checkbox, checked) {\r\n        var $container = $checkbox.closest('.downloadcenter-category');\r\n        \r\n        // Update all descendant checkboxes\r\n        $container.find('.course-checkbox, .downloadcenter-category-checkbox').not($checkbox).each(function() {\r\n            var $this = $(this);\r\n            \r\n            // Only update if state is different\r\n            if ($this.is(':checked') !== checked || this.indeterminate) {\r\n                $this.prop('checked', checked);\r\n                $this.prop('indeterminate', false);\r\n                $this.removeAttr('data-indeterminate');\r\n                \r\n                // Trigger change event for course checkboxes to save via AJAX\r\n                if ($this.hasClass('course-checkbox')) {\r\n                    $this.trigger('change.autosave');\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save course selection via AJAX\r\n     * @param {number} courseid The course ID\r\n     * @param {boolean} checked Whether the course is selected\r\n     * @return {Promise} jQuery promise for the AJAX request\r\n     */\r\n    function saveCourseSelection(courseid, checked) {\r\n        return $.post(M.cfg.wwwroot + '/local/downloadcenter/index.php', {\r\n            action: 'togglecourse',\r\n            courseid: courseid,\r\n            checked: checked ? 1 : 0,\r\n            sesskey: M.cfg.sesskey\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save category selection via AJAX\r\n     * @param {number} categoryid The category ID\r\n     * @param {string} courseids Comma-separated course IDs\r\n     * @param {boolean} checked Whether the category is selected\r\n     * @return {Promise} jQuery promise for the AJAX request\r\n     */\r\n    function saveCategorySelection(categoryid, courseids, checked) {\r\n        return $.post(M.cfg.wwwroot + '/local/downloadcenter/index.php', {\r\n            action: 'togglecategory',\r\n            categoryid: categoryid,\r\n            courseids: courseids,\r\n            checked: checked ? 1 : 0,\r\n            sesskey: M.cfg.sesskey\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update visual feedback for a course checkbox\r\n     * @param {jQuery} $checkbox The course checkbox\r\n     * @param {boolean} checked Whether the course is selected\r\n     * @param {boolean} partial Whether the selection is partial\r\n     */\r\n    function updateCourseVisualFeedback($checkbox, checked, partial) {\r\n        var $label = $checkbox.siblings('label');\r\n        \r\n        // Remove existing badges\r\n        $label.find('.badge').remove();\r\n        \r\n        // Add appropriate badge\r\n        if (checked && !partial) {\r\n            $label.append(' <span class=\"badge badge-success\">' + \r\n                         M.str.local_downloadcenter.selected + '</span>');\r\n        } else if (partial) {\r\n            $label.append(' <span class=\"badge badge-info\">' + \r\n                         M.str.local_downloadcenter.selected + ' (partial)</span>');\r\n        }\r\n    }\r\n\r\n    return {\r\n        init: function() {\r\n            // Initialize all category checkboxes\r\n            $('.downloadcenter-category').each(function() {\r\n                var $cat = $(this);\r\n                var $catbox = $cat.find('> .card-header input.downloadcenter-category-checkbox');\r\n                \r\n                // Set initial indeterminate state if specified\r\n                if ($catbox.data('indeterminate') === '1' || $catbox.data('indeterminate') === 1) {\r\n                    $catbox.prop('indeterminate', true);\r\n                }\r\n                \r\n                // Handle category checkbox change\r\n                $catbox.on('change', function(e) {\r\n                    // Prevent event from bubbling to parent categories\r\n                    e.stopPropagation();\r\n                    \r\n                    var checked = $catbox.is(':checked');\r\n                    \r\n                    // Clear indeterminate state when user explicitly checks/unchecks\r\n                    $catbox.prop('indeterminate', false);\r\n                    \r\n                    // Propagate to all children\r\n                    propagateToChildren($catbox, checked);\r\n                    \r\n                    // Update parent categories\r\n                    var $current = $catbox.closest('.downloadcenter-category').parents('.downloadcenter-category').first();\r\n                    while ($current.length) {\r\n                        var $parentbox = $current.find('> .card-header input.downloadcenter-category-checkbox');\r\n                        updateCategoryState($parentbox);\r\n                        $current = $current.parents('.downloadcenter-category').first();\r\n                    }\r\n                    \r\n                    // Save category selection via AJAX if it has course IDs\r\n                    var courseids = $catbox.data('courseids');\r\n                    if (courseids) {\r\n                        var categoryid = $catbox.data('categoryid');\r\n                        saveCategorySelection(categoryid, courseids, checked)\r\n                            .fail(function() {\r\n                                Notification.exception(new Error('Failed to save category selection'));\r\n                                // Revert the checkbox state on failure\r\n                                $catbox.prop('checked', !checked);\r\n                            });\r\n                    }\r\n                });\r\n            });\r\n            \r\n            // Initialize course checkboxes\r\n            $('.course-checkbox').each(function() {\r\n                var $checkbox = $(this);\r\n                \r\n                // Set initial indeterminate state if specified\r\n                if ($checkbox.data('indeterminate') === '1' || $checkbox.data('indeterminate') === 1) {\r\n                    $checkbox.prop('indeterminate', true);\r\n                }\r\n                \r\n                // Handle course checkbox change\r\n                $checkbox.on('change.autosave', function(e) {\r\n                    e.stopPropagation();\r\n                    \r\n                    var courseid = $checkbox.data('courseid');\r\n                    var checked = $checkbox.is(':checked');\r\n                    \r\n                    // Clear indeterminate state when user explicitly checks/unchecks\r\n                    $checkbox.prop('indeterminate', false);\r\n                    $checkbox.removeAttr('data-indeterminate');\r\n                    \r\n                    // Save via AJAX\r\n                    saveCourseSelection(courseid, checked)\r\n                        .done(function(response) {\r\n                            if (response.status === 'ok') {\r\n                                // Update visual feedback\r\n                                updateCourseVisualFeedback($checkbox, checked, false);\r\n                                \r\n                                // Update parent category states\r\n                                var $current = $checkbox.closest('.downloadcenter-category');\r\n                                while ($current.length) {\r\n                                    var $parentbox = $current.find('> .card-header input.downloadcenter-category-checkbox');\r\n                                    updateCategoryState($parentbox);\r\n                                    $current = $current.parents('.downloadcenter-category').first();\r\n                                }\r\n                            }\r\n                        })\r\n                        .fail(function() {\r\n                            Notification.exception(new Error('Failed to save course selection'));\r\n                            // Revert the checkbox state on failure\r\n                            $checkbox.prop('checked', !checked);\r\n                        });\r\n                });\r\n                \r\n                // Also handle regular change events (without auto-save)\r\n                $checkbox.on('change', function(e) {\r\n                    if (!e.namespace || e.namespace !== 'autosave') {\r\n                        // This is a manual change, trigger auto-save\r\n                        $checkbox.trigger('change.autosave');\r\n                    }\r\n                });\r\n            });\r\n            \r\n            // Initial state calculation for all categories\r\n            $('.downloadcenter-category').each(function() {\r\n                var $cat = $(this);\r\n                var $catbox = $cat.find('> .card-header input.downloadcenter-category-checkbox');\r\n                updateCategoryState($catbox);\r\n            });\r\n            \r\n            // Disable form change checker for course selection forms\r\n            $('.downloadcenter-course-form').each(function() {\r\n                var form = this;\r\n                // Prevent \"unsaved changes\" warnings\r\n                if (typeof changechecker !== 'undefined' && changechecker.resetFormDirtyState) {\r\n                    // Mark form as not dirty whenever a checkbox changes\r\n                    $(form).on('change', 'input[type=\"checkbox\"]', function() {\r\n                        setTimeout(function() {\r\n                            changechecker.resetFormDirtyState(form);\r\n                        }, 100);\r\n                    });\r\n                    \r\n                    // Initially mark as clean\r\n                    changechecker.resetFormDirtyState(form);\r\n                }\r\n            });\r\n            \r\n            // Handle collapse/expand of categories\r\n            $('.downloadcenter-category .collapse').on('shown.bs.collapse hidden.bs.collapse', function() {\r\n                // Recalculate states when categories are expanded/collapsed\r\n                var $cat = $(this).closest('.downloadcenter-category');\r\n                var $catbox = $cat.find('> .card-header input.downloadcenter-category-checkbox');\r\n                updateCategoryState($catbox);\r\n            });\r\n        }\r\n    };\r\n});"],"names":["define","$","changechecker","Ajax","Notification","updateCategoryState","$checkbox","$container","closest","$courseboxes","find","$subcatboxes","total","length","checked","filter","indeterminateCourses","this","indeterminate","data","indeterminateChildren","prop","init","each","$catbox","on","e","stopPropagation","is","not","$this","removeAttr","hasClass","trigger","propagateToChildren","$current","parents","first","courseids","categoryid","post","M","cfg","wwwroot","action","sesskey","saveCategorySelection","fail","exception","Error","courseid","saveCourseSelection","done","response","status","partial","$label","siblings","remove","append","str","local_downloadcenter","selected","updateCourseVisualFeedback","namespace","form","resetFormDirtyState","setTimeout"],"mappings":"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"}