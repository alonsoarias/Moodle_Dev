{"version":3,"file":"category_tree.min.js","sources":["../src/category_tree.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Category tree navigation for download center\r\n *\r\n * @module     local_downloadcenter/category_tree\r\n * @copyright  2025 Alonso Arias <soporte@ingeweb.co>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/ajax', 'core/templates'], function($, Ajax, Templates) {\r\n    \r\n    const CategoryTree = function() {\r\n        this.init();\r\n    };\r\n    \r\n    CategoryTree.prototype.init = function() {\r\n        const self = this;\r\n        \r\n        // Handle category expansion.\r\n        $('.category-expand').on('click', function(e) {\r\n            e.preventDefault();\r\n            const $this = $(this);\r\n            const categoryid = $this.data('categoryid');\r\n            const $container = $this.closest('.category-node').find('.category-courses').first();\r\n            \r\n            if ($container.hasClass('loaded')) {\r\n                $container.slideToggle();\r\n            } else {\r\n                self.loadCategoryCourses(categoryid, $container);\r\n            }\r\n            \r\n            $this.find('i').toggleClass('fa-plus fa-minus');\r\n        });\r\n        \r\n        // Handle category checkbox (select all courses).\r\n        $('.category-checkbox').on('change', function() {\r\n            const $this = $(this);\r\n            const checked = $this.is(':checked');\r\n            const $container = $this.closest('.category-node');\r\n            \r\n            // Update all course checkboxes in this category.\r\n            $container.find('.course-checkbox').prop('checked', checked).trigger('change');\r\n            \r\n            // Update subcategory checkboxes.\r\n            $container.find('.category-checkbox').not(this).prop('checked', checked);\r\n        });\r\n        \r\n        // Initialize tri-state checkboxes.\r\n        this.updateTriStateCheckboxes();\r\n    };\r\n    \r\n    CategoryTree.prototype.loadCategoryCourses = function(categoryid, $container) {\r\n        Ajax.call([{\r\n            methodname: 'local_downloadcenter_get_category_courses',\r\n            args: {categoryid: categoryid},\r\n            done: function(response) {\r\n                Templates.render('local_downloadcenter/course_list', response)\r\n                    .then(function(html) {\r\n                        $container.html(html).addClass('loaded').slideDown();\r\n                    });\r\n            },\r\n            fail: function(error) {\r\n                Notification.exception(error);\r\n            }\r\n        }]);\r\n    };\r\n    \r\n    CategoryTree.prototype.updateTriStateCheckboxes = function() {\r\n        $('.category-node').each(function() {\r\n            const $node = $(this);\r\n            const $checkbox = $node.find('.category-checkbox').first();\r\n            const $courses = $node.find('.course-checkbox');\r\n            \r\n            if ($courses.length === 0) {\r\n                return;\r\n            }\r\n            \r\n            const total = $courses.length;\r\n            const checked = $courses.filter(':checked').length;\r\n            \r\n            if (checked === 0) {\r\n                $checkbox.prop('checked', false);\r\n                $checkbox.prop('indeterminate', false);\r\n            } else if (checked === total) {\r\n                $checkbox.prop('checked', true);\r\n                $checkbox.prop('indeterminate', false);\r\n            } else {\r\n                $checkbox.prop('checked', false);\r\n                $checkbox.prop('indeterminate', true);\r\n            }\r\n        });\r\n    };\r\n    \r\n    return {\r\n        init: function() {\r\n            return new CategoryTree();\r\n        }\r\n    };\r\n});"],"names":["define","$","Ajax","Templates","CategoryTree","init","prototype","self","this","on","e","preventDefault","$this","categoryid","data","$container","closest","find","first","hasClass","slideToggle","loadCategoryCourses","toggleClass","checked","is","prop","trigger","not","updateTriStateCheckboxes","call","methodname","args","done","response","render","then","html","addClass","slideDown","fail","error","Notification","exception","each","$node","$checkbox","$courses","length","total","filter"],"mappings":";;;;;;;AAsBAA,4CAAO,CAAC,SAAU,YAAa,mBAAmB,SAASC,EAAGC,KAAMC,iBAE1DC,aAAe,gBACZC,eAGTD,aAAaE,UAAUD,KAAO,iBACpBE,KAAOC,KAGbP,EAAE,oBAAoBQ,GAAG,SAAS,SAASC,GACvCA,EAAEC,uBACIC,MAAQX,EAAEO,MACVK,WAAaD,MAAME,KAAK,cACxBC,WAAaH,MAAMI,QAAQ,kBAAkBC,KAAK,qBAAqBC,QAEzEH,WAAWI,SAAS,UACpBJ,WAAWK,cAEXb,KAAKc,oBAAoBR,WAAYE,YAGzCH,MAAMK,KAAK,KAAKK,YAAY,uBAIhCrB,EAAE,sBAAsBQ,GAAG,UAAU,iBAC3BG,MAAQX,EAAEO,MACVe,QAAUX,MAAMY,GAAG,YACnBT,WAAaH,MAAMI,QAAQ,kBAGjCD,WAAWE,KAAK,oBAAoBQ,KAAK,UAAWF,SAASG,QAAQ,UAGrEX,WAAWE,KAAK,sBAAsBU,IAAInB,MAAMiB,KAAK,UAAWF,iBAI/DK,4BAGTxB,aAAaE,UAAUe,oBAAsB,SAASR,WAAYE,YAC9Db,KAAK2B,KAAK,CAAC,CACPC,WAAY,4CACZC,KAAM,CAAClB,WAAYA,YACnBmB,KAAM,SAASC,UACX9B,UAAU+B,OAAO,mCAAoCD,UAChDE,MAAK,SAASC,MACXrB,WAAWqB,KAAKA,MAAMC,SAAS,UAAUC,gBAGrDC,KAAM,SAASC,OACXC,aAAaC,UAAUF,YAKnCpC,aAAaE,UAAUsB,yBAA2B,WAC9C3B,EAAE,kBAAkB0C,MAAK,iBACfC,MAAQ3C,EAAEO,MACVqC,UAAYD,MAAM3B,KAAK,sBAAsBC,QAC7C4B,SAAWF,MAAM3B,KAAK,uBAEJ,IAApB6B,SAASC,oBAIPC,MAAQF,SAASC,OACjBxB,QAAUuB,SAASG,OAAO,YAAYF,OAE5B,IAAZxB,SACAsB,UAAUpB,KAAK,WAAW,GAC1BoB,UAAUpB,KAAK,iBAAiB,IACzBF,UAAYyB,OACnBH,UAAUpB,KAAK,WAAW,GAC1BoB,UAAUpB,KAAK,iBAAiB,KAEhCoB,UAAUpB,KAAK,WAAW,GAC1BoB,UAAUpB,KAAK,iBAAiB,QAKrC,CACHpB,KAAM,kBACK,IAAID"}